{"version":3,"sources":["webpack:///./node_modules/terriajs-cesium/Source/Core/CornerType.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CompositeProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CompositePositionProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/ReferenceProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/ScaledPositionProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PositionPropertyArray.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/StripeOrientation.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/VelocityVectorProperty.js","webpack:///./node_modules/terriajs-cesium/Source/Core/HermitePolynomialApproximation.js","webpack:///./node_modules/terriajs-cesium/Source/Core/LagrangePolynomialApproximation.js","webpack:///./node_modules/terriajs-cesium/Source/Core/Spherical.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CheckerboardMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CompositeMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/GridMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PolylineArrowMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PolylineDashMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PolylineOutlineMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PropertyArray.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/Rotation.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/StripeMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/VelocityOrientationProperty.js","webpack:///./node_modules/terriajs-cesium/Source/ThirdParty/Autolinker.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlCamera.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlLookAt.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlTour.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlTourFlyTo.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlTourWait.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CzmlDataSource.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlDataSource.js"],"names":["freezeObject","ROUNDED","MITERED","BEVELED","defined","defineProperties","DeveloperError","Event","EventHelper","TimeIntervalCollection","Property","CompositeProperty","this","_eventHelper","_definitionChanged","_intervals","changedEvent","addEventListener","prototype","_intervalsChanged","isConstant","get","isEmpty","definitionChanged","intervals","getValue","time","result","innerProperty","findDataForIntervalContainingDate","equals","other","property","eventHelper","callback","raiseEvent","items","removeAll","length","i","interval","data","indexOf","add","subscribeAll","defaultValue","ReferenceFrame","CompositePositionProperty","referenceFrame","_referenceFrame","FIXED","_composite","_raiseDefinitionChanged","set","value","getValueInReferenceFrame","RuntimeError","resolve","that","targetProperty","_targetProperty","_resolveProperty","entityIsResolved","_resolveEntity","targetEntity","_targetCollection","getById","_targetId","ReferenceProperty","_onTargetEntityDefinitionChanged","_targetEntity","resolveEntity","names","_targetPropertyNames","join","targetCollection","targetId","targetPropertyNames","undefined","collectionChanged","_onCollectionChanged","resolvedProperty","fromString","referenceString","identifier","values","inIdentifier","isEscaped","token","c","charAt","push","getType","otherNames","name","oldValue","collection","added","removed","removeEventListener","Ellipsoid","ScaledPositionProperty","_value","_removeSubscription","setValue","WGS84","scaleToGeodeticSurface","PositionPropertyArray","Array","x","itemValue","slice","arrayEquals","HORIZONTAL","VERTICAL","Cartesian3","JulianDate","VelocityVectorProperty","position","normalize","_position","_subscription","_normalize","position1Scratch","position2Scratch","timeScratch","_getValue","velocityResult","positionResult","clone","ZERO","position1","position2","addSeconds","velocity","subtract","divideByScalar","CesiumMath","factorial","calculateCoefficientTerm","zIndices","xTable","derivOrder","termOrder","reservedIndices","reserved","j","splice","HermitePolynomialApproximation","type","degree","inputOrder","Math","max","floor","yTable","yStride","d","s","index","coefficients","l","zIndicesLength","highestNonZeroCoef","nonZeroCoefficients","numerator","zj","zn","tempTerm","coeff","arrayScratch","interpolate","outputOrder","resultLength","r","zIndiceslength","highestNonZero","tmp","dimOne","coefIndex","dimTwo","coefficient","dimTwoMinusOne","fillCoefficientList","loopStop","min","coef","LagrangePolynomialApproximation","diffX","Check","Spherical","clock","cone","magnitude","fromCartesian3","cartesian3","y","z","radialSquared","atan2","sqrt","spherical","left","right","equalsEpsilon","epsilon","abs","toString","Cartesian2","Color","createPropertyDescriptor","defaultEvenColor","WHITE","defaultOddColor","BLACK","defaultRepeat","CheckerboardMaterialProperty","options","EMPTY_OBJECT","_evenColor","_evenColorSubscription","_oddColor","_oddColorSubscription","_repeat","_repeatSubscription","evenColor","oddColor","repeat","lightColor","getValueOrClonedDefault","darkColor","getValueOrDefault","CompositeMaterialProperty","defaultColor","defaultLineCount","defaultLineOffset","defaultLineThickness","GridMaterialProperty","_color","_colorSubscription","_cellAlpha","_cellAlphaSubscription","_lineCount","_lineCountSubscription","_lineThickness","_lineThicknessSubscription","_lineOffset","_lineOffsetSubscription","color","cellAlpha","lineCount","lineThickness","lineOffset","PolylineArrowMaterialProperty","defaultGapColor","TRANSPARENT","PolylineDashMaterialProperty","_gapColor","_gapColorSubscription","_dashLength","_dashLengthSubscription","_dashPattern","_dashPatternSubscription","gapColor","dashLength","dashPattern","defaultOutlineColor","PolylineOutlineMaterialProperty","_outlineColor","_outlineColorSubscription","_outlineWidth","_outlineWidthSubscription","outlineColor","outlineWidth","PropertyArray","packedLength","pack","array","startingIndex","unpack","convertPackedArrayForInterpolation","packedArray","lastIndex","previousValue","len","PI","TWO_PI","unpackInterpolationResult","sourceArray","firstIndex","StripeOrientation","defaultOrientation","StripeMaterialProperty","_orientation","_orientationSubscription","_offset","_offsetSubscription","orientation","offset","horizontal","Matrix3","Quaternion","Transforms","VelocityOrientationProperty","ellipsoid","_velocityVectorProperty","_ellipsoid","positionScratch","velocityScratch","rotationScratch","rotationMatrixFromPositionVelocity","fromRotationMatrix","root","Autolinker","cfg","Util","assign","hashtag","Error","constructor","urls","email","twitter","phone","newWindow","stripPrefix","truncate","className","htmlParser","matchParser","tagBuilder","link","textOrHtml","htmlNodes","getHtmlParser","parse","anchorTagStackCount","resultHtml","node","nodeType","nodeText","getText","getTagName","isClosing","linkifiedStr","linkifyStr","str","getMatchParser","replace","createMatchReturnVal","match","replaceFnResult","replaceFn","call","getMatchedText","HtmlTag","toAnchorString","getTagBuilder","build","HtmlParser","MatchParser","AnchorTagBuilder","abstractMethod","trimRegex","dest","src","prop","hasOwnProperty","extend","superclass","protoProps","subclass","superclassProto","F","subclassProto","apply","arguments","ellipsis","truncateLen","ellipsisChars","substring","arr","element","splitAndCapture","splitRegex","global","lastIdx","exec","trim","Object","whitespaceRegex","innerHtml","innerHTML","setTagName","tagName","setAttr","attrName","attrValue","getAttrs","getAttr","setAttrs","attrs","tagAttrs","setClass","cssClass","addClass","newClass","classAttr","getClass","classes","split","newClasses","shift","removeClass","removeClasses","idx","hasClass","setInnerHtml","html","getInnerHtml","attrsStr","buildAttrsStr","attrsArr","createAttrs","getAnchorHref","processAnchorText","getAnchorText","matchType","anchorHref","createCssClass","anchorText","doTruncate","Number","POSITIVE_INFINITY","htmlRegex","attrValueRegex","nameEqualsValueRegex","source","RegExp","htmlCharacterEntitiesRegex","currentResult","textAndEntityNodes","nodes","tagText","commentText","isClosingTag","inBetweenTagsText","parseTextAndEntityNodes","createCommentNode","createElementNode","text","textAndEntityTokens","textToken","entityToken","createTextNode","createEntityNode","CommentNode","comment","ElementNode","toLowerCase","closing","EntityNode","TextNode","HtmlNode","getComment","matcherRegex","domainNameRegex","tldRegex","charBeforeProtocolRelMatchRegex","matchValidator","MatchValidator","contextObj","me","matchStr","$1","$2","$3","$4","$5","$6","$7","$8","$9","$10","$11","$12","matchDescObj","processCandidateMatch","replaceStr","prefixStr","suffixStr","twitterMatch","twitterHandlePrefixWhitespaceChar","twitterHandle","emailAddressMatch","urlMatch","protocolUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","phoneMatch","hashtagMatch","hashtagPrefixWhitespaceChar","protocolRelativeMatch","isValidMatch","matchHasUnbalancedClosingParen","substr","Email","matchedText","Twitter","cleanNumber","Phone","number","Hashtag","serviceName","charBeforeMatch","Url","url","openParensMatch","closeParensMatch","invalidProtocolRelMatchRegex","hasFullProtocolRegex","uriSchemeRegex","hasWordCharAfterProtocolRegex","isValidUriScheme","urlMatchDoesNotHaveProtocolOrDot","urlMatchDoesNotHaveAtLeastOneWordChar","isInvalidProtocolRelativeMatch","uriSchemeMatch","uriScheme","test","Match","getEmail","getHashtag","getNumber","getTwitterHandle","urlPrefixRegex","protocolRelativeRegex","protocolPrepended","getUrl","stripProtocolRelativePrefix","stripUrlPrefix","removeTrailingSlash","headingPitchRoll","headingPitchRange","KmlTour","id","playlistIndex","playlist","tourStart","tourEnd","entryStart","entryEnd","_activeEntries","cancelAllEntries","activeEntries","entry","pop","stop","playEntry","viewer","cameraOptions","allDone","_playNext","terminated","indx","bind","blocking","play","scene","camera","tour","addPlaylistEntry","BoundingSphere","combine","EasingFunction","KmlTourFlyTo","duration","flyToMode","view","activeCamera","activeCallback","done","self","getCameraOptions","flyTo","target","flyToBoundingSphere","cancelFlight","complete","easingFunction","LINEAR_NONE","destination","KmlTourWait","timeout","setTimeout","clearTimeout","ArcType","BoundingRectangle","Cartographic","ClockRange","ClockStep","CornerType","createGuid","DistanceDisplayCondition","ExtrapolationType","getFilenameFromUri","isArray","Iso8601","LinearApproximation","NearFarScalar","PolygonHierarchy","Rectangle","Resource","TimeInterval","ClassificationType","ColorBlendMode","HeightReference","HorizontalOrigin","LabelStyle","ShadowMode","VerticalOrigin","Uri","when","BillboardGraphics","BoxGraphics","CallbackProperty","ColorMaterialProperty","ConstantPositionProperty","ConstantProperty","CorridorGraphics","CylinderGraphics","DataSource","DataSourceClock","EllipseGraphics","EllipsoidGraphics","EntityCluster","EntityCollection","ImageMaterialProperty","LabelGraphics","ModelGraphics","NodeTransformationProperty","PathGraphics","PointGraphics","PolygonGraphics","PolylineGlowMaterialProperty","PolylineGraphics","PropertyBag","RectangleGraphics","Rotation","SampledPositionProperty","SampledProperty","TimeIntervalCollectionPositionProperty","TimeIntervalCollectionProperty","WallGraphics","UnitCartesian3","currentId","createReferenceProperty","entityCollection","createSpecializedProperty","packetData","reference","velocityReference","referenceProperty","JSON","stringify","scratchCartesian","scratchSpherical","scratchCartographic","scratchTimeInterval","scratchQuaternion","unwrapUriInterval","czmlInterval","sourceUri","uri","getDerivedResource","createIfNeeded","unwrapCartesianInterval","cartesian","cartesianVelocity","unitCartesian","unitSpherical","fromSpherical","convertUnitSphericalToCartesian","convertSphericalToCartesian","cartographicRadians","longitude","latitude","height","cartographicToCartesian","convertCartographicRadiansToCartesian","cartographicDegrees","toRadians","convertCartographicDegreesToCartesian","normalizePackedCartesianArray","normalizePackedQuaternionArray","getPropertyType","Boolean","String","unwrapInterval","arcType","boundingRectangle","cartesian2","unwrapUnitCartesianInterval","rgbaf","rgba","byteToFloat","unwrapColorInterval","classificationType","colorBlendMode","cornerType","heightReference","horizontalOrigin","Image","fromIso8601","date","labelStyle","nearFarScalar","distanceDisplayCondition","object","unitQuaternion","unwrapQuaternionInterval","wsen","wsenDegrees","unwrapRectangleInterval","shadowMode","shadows","string","stripeOrientation","verticalOrigin","interpolators","HERMITE","LAGRANGE","LINEAR","updateInterpolationSettings","interpolationAlgorithm","interpolationDegree","setInterpolationOptions","forwardExtrapolationType","forwardExtrapolationDuration","backwardExtrapolationType","backwardExtrapolationDuration","iso8601Scratch","iso8601","intervalFromString","intervalString","wrapPropertyInInfiniteInterval","MAXIMUM_INTERVAL","convertPropertyToComposite","composite","addInterval","convertPositionPropertyToComposite","processProperty","propertyName","constrainedInterval","unwrappedInterval","unwrappedIntervalLength","combinedInterval","intersect","isValue","hasInterval","delete","removePropertyData","removeSamples","removeInterval","intersection","isSampled","needsUnpacking","epoch","packetEpoch","addSamplesPackedArray","findInterval","processPacketData","processPositionProperty","numberOfDerivatives","removePositionPropertyData","processPositionPacketData","processMaterialProperty","existingMaterial","existingInterval","materialData","thisIntervals","start","solidColor","grid","image","transparent","stripe","polylineOutline","polylineGlow","glowPower","taperPower","polylineArrow","polylineDash","checkerboard","processMaterialPacketData","processReferencesArrayPacketData","references","PropertyArrayType","CompositePropertyArrayType","properties","map","processArrayPacketData","processArray","processPositionArrayPacketData","unpackArray","fromRadiansArrayHeights","fromDegreesArrayHeights","processPositionArray","unpackCartesianArray","unpackCartographicRadiansArray","unpackCartographicDegreesArray","processPositionArrayOfArraysPacketData","referenceArray","tempObj","positions","processNodeTransformations","model","nodeTransformationsData","nodeTransformations","nodeNames","keys","nodeName","nodeTransformationData","hasProperty","addProperty","nodeTransformation","translation","rotation","scale","processArticulations","articulationsData","articulations","key","articulationStageData","PolygonHierarchyProperty","polygon","adaptFollowSurfaceToArcType","followSurface","GEODESIC","NONE","processCzmlPacket","packet","updaterFunctions","dataSource","objectId","_version","removeById","version","tokens","documentPacket","_documentPacket","clockPacket","currentTime","range","step","multiplier","processDocument","entity","getOrCreateEntity","parentId","parent","load","czml","clear","promise","fetchJson","setLoading","_entityCollection","DocumentPacket","CzmlDataSource","_processCzml","raiseChangedEvent","_clock","availability","computeAvailability","MINIMUM_VALUE","startTime","stopTime","totalSeconds","secondsDifference","round","clockRange","LOOP_STOP","clockStep","SYSTEM_CLOCK_MULTIPLIER","MAXIMUM_VALUE","updateClock","_name","getUrlComponent","_changed","loadCzml","otherwise","error","_error","console","log","reject","_isLoading","_loading","_entityCluster","_positions","holes","_holes","holePositions","entities","isLoading","errorEvent","loadingEvent","show","clustering","updaters","billboardData","billboard","pixelOffset","eyeOffset","processAlignedAxis","alignedAxis","sizeInMeters","width","scaleByDistance","translucencyByDistance","pixelOffsetScaleByDistance","imageSubRegion","disableDepthTestDistance","boxData","box","dimensions","fill","material","outline","corridorData","corridor","extrudedHeight","extrudedHeightReference","granularity","zIndex","cylinderData","cylinder","topRadius","bottomRadius","numberOfVerticalLines","slices","ellipseData","ellipse","semiMajorAxis","semiMinorAxis","stRotation","ellipsoidData","radii","stackPartitions","slicePartitions","subdivisions","labelData","label","font","style","showBackground","backgroundColor","backgroundPadding","fillColor","modelData","gltf","minimumPixelSize","maximumScale","incrementallyLoadTextures","runAnimations","clampAnimations","silhouetteColor","silhouetteSize","colorBlendAmount","nameData","descriptionData","description","pathData","path","leadTime","trailTime","resolution","pointData","point","pixelSize","polygonData","processPositionArrayOfArrays","hierarchy","perPositionHeight","closeTop","closeBottom","polylineData","polyline","adapterFunction","depthFailMaterial","clampToGround","propertiesData","propertyData","rectangleData","rectangle","coordinates","positionData","viewFromData","viewFrom","wallData","wall","minimumHeights","maximumHeights","orientationData","process","AssociativeArray","getExtensionFromUri","HeadingPitchRange","HeadingPitchRoll","objectToQuery","oneTimeWarning","PinBuilder","queryToObject","SceneMode","zip","Entity","KmlCamera","KmlLookAt","DOMParser","MimeTypes","avi","bmp","bz2","chm","css","csv","doc","dvi","eps","flv","gif","gz","htm","ico","jnlp","jpeg","jpg","m3u","m4v","mathml","mid","midi","mov","mp3","mp4","mp4v","mpeg","mpg","odp","ods","odt","ogg","pdf","png","pps","ppt","ps","qt","rdf","rss","rtf","svg","swf","tif","tiff","txt","wav","wma","wmv","xml","detectFromFilename","filename","ext","parser","autolinker","linker","BILLBOARD_SIZE","BILLBOARD_NEAR_DISTANCE","BILLBOARD_NEAR_RATIO","BILLBOARD_FAR_DISTANCE","BILLBOARD_FAR_RATIO","insertNamespaces","firstPart","lastPart","declaration","namespaceMap","xsi","removeDuplicateNamespaces","namespace","startIndex","endIndex","endDeclaration","loadDataUriFromZip","uriResolver","deferred","mimeType","getData","Data64URIWriter","dataUri","embedDataUris","div","elementType","attributeName","baseUri","elements","querySelectorAll","getAttribute","setAttribute","applyBasePath","sourceResource","resource","resolveHref","createEntity","context","queryStringAttribute","kml","KmlFeatureData","isExtrudable","altitudeMode","gxAltitudeMode","readCoordinate","fromDegrees","digits","parseFloat","isNaN","readCoordinates","tuples","textContent","resultIndex","kmlNamespaces","gxNamespaces","namespaces","gx","atom","kmlgx","concat","queryNumericAttribute","queryFirstNode","childNodes","q","child","localName","namespaceURI","queryNodes","getElementsByTagNameNS","queryChildNodes","queryNumericValue","resultNode","queryStringValue","queryBooleanValue","href","blob","colorOptions","maximumRed","red","maximumGreen","green","maximumBlue","blue","parseColorString","isRandom","alpha","parseInt","fromRandom","queryColorValue","createDefaultBillboard","createDefaultPolygon","createDefaultLabel","LEFT","FILL_AND_OUTLINE","getIconHref","iconNode","canRefresh","palette","hrefResource","refreshMode","viewRefreshMode","viewBoundScale","defaultViewFormat","viewFormat","httpQuery","setQueryParameters","cleanupString","processNetworkLinkQueryString","_camera","_canvas","_lastCameraView","bbox","processBillboardIcon","heading","icon","xOffset","yOffset","w","h","hotSpotNode","hotSpotX","hotSpotY","hotSpotXUnit","hotSpotYUnit","UNIT_Z","applyStyle","styleNode","item","bgColor","textColor","balloonStyle","listItemType","processExternalStyles","styleCollection","fetchXML","then","styleKml","processStyles","isExternal","styleEntity","styleNodes","styleNodesLength","styleMaps","styleMapsLength","styleMap","pairs","p","pair","styleUrl","base","merge","promises","styleUrlNodes","getElementsByTagName","styleUrlNodesLength","styleReference","createDropLine","entityPosition","surfacePosition","heightReferenceFromAltitudeMode","CLAMP_TO_GROUND","RELATIVE_TO_GROUND","createPositionPropertyFromAltitudeMode","processPositionGraphics","_pinBuilder","fromColor","YELLOW","_clampToGround","processPathGraphics","processLineStringOrLinearRing","geometryNode","coordinatesNode","extrude","tessellate","canExtrude","polylineGraphics","propertiesLength","createPositionPropertyArrayFromAltitudeMode","addToMultiTrack","times","dropShowProperty","includeEndPoints","addSamples","isStartIncluded","isStopIncluded","geometryTypes","Point","coordinatesString","LineString","LinearRing","Polygon","outerBoundaryIsNode","linearRingNode","innerBoundaryIsNodes","k","Track","coordNodes","angleNodes","timeNodes","MultiTrack","lastStop","lastStopPosition","trackNodes","needDropLine","trackNode","MultiGeometry","hasGeometry","childNode","geometryProcessor","childEntity","Model","scratchDiv","document","createElement","processFeature","featureNode","kmlData","placeMark","styleIndex","inlineStyleNode","externalStyle","computeFinalStyle","beginNode","beginDate","endNode","endDate","lessThan","processTimeSpan","whenString","processTimeStamp","mergeAvailabilityWithParent","visibility","ancestryIsVisible","parentEntity","authorNode","author","linkNode","hreflang","rel","title","address","phoneNumber","snippet","extendedDataNode","dataNodes","dataNode","displayName","extendedData","processExtendedData","background","foreground","matches","isDisplayName","links","toCssColorString","processDescription","processLookAt","processCamera","featureTypes","Document","Folder","Placemark","placemark","NetworkLink","networkEntity","newSourceUri","networkLinkCollection","rootElement","newEntities","suspendEvents","newEntity","resumeEvents","refreshInterval","networkLinkControl","hasNetworkLinkControl","now","networkLinkInfo","cookie","lastUpdated","updating","needsUpdate","cameraUpdateTime","minRefreshPeriod","RefreshMode","INTERVAL","expires","diff","EXPIRE","e","STOP","_networkLinks","GroundOverlay","groundOverlay","geometry","isLatLonQuad","latLonBox","west","south","east","north","negativePiToPi","clampToLatitudeRange","rotationRadians","PhotoOverlay","processUnsupportedFeature","ScreenOverlay","Tour","playlistNode","entryNode","playlistNodeProcessor","playlistNodeProcessors","kmlTours","featureTypeNames","featureTypeNamesLength","featureName","processFeatureNode","FlyTo","t","lookAt","flyto","Wait","SoundCue","processTourUnsupportedNode","AnimatedUpdate","TourControl","lon","lat","altitude","tilt","roll","hpr","PI_OVER_TWO","viewPoint","_unsupportedNode","sFirst","zeroRectangle","scratchCartesian2","scratchCartesian3","canvas","fixLatitude","fixLongitude","queryString","queryParameters","_mode","MORPHING","centerCartesian","centerCartographic","clientWidth","clientHeight","pickEllipsoid","cartesianToCartographic","center","EPSILON9","newHalfWidth","newHalfHeight","toDegrees","pitch","distance","positionWC","frustum","aspectRatio","horizFov","vertFov","fov","loadKml","documentElement","all","featureProcessor","loadKmz","defer","createReader","BlobReader","reader","getEntries","entries","docEntry","docDefer","directory","innerDefer","TextWriter","parseFromString","loadXmlFromZip","close","fetchBlob","DEFAULT","dataToLoad","Blob","magicBlob","size","FileReader","DataView","getUint32","readAsArrayBuffer","isZip","readAsText","readBlobAsText","body","msg","firstChild","nodeValue","innerText","KmlDataSource","_refresh","direction","directionWC","up","upWC","computeViewRectangle","MAX_VALUE","parentAvailability","childAvailability","refreshEvent","unsupportedNodeEvent","oldName","isMinStart","isMaxStop","Date","setHours","fromDate","changed","entitiesToIgnore","update","networkLinks","cameraViewUpdate","lastCameraView","EPSILON7","newNetworkLinks","forEach","networkLink","contains","doUpdate","greaterThan","recurseIgnoreEntities","children","_children","count","newEntityCollection","processedHref","remove","networkLinkEntity","entitiesCopy","entityToRemove","removeChildren","getNetworkLinkUpdateCallback"],"mappings":"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B,QAAU,KAmCnB,OA3BAD,EAAY9jB,UAAUqiB,KAAO,SAASc,GAClC,IAAIC,EAAO1jB,KACXA,KAAKwjB,eAAiBC,EACtBzjB,KAAKqkB,QAAUC,WAAW,kBACfZ,EAAKF,eACZC,GAAK,IACU,IAAhBzjB,KAAKojB,WAMZgB,EAAY9jB,UAAU2hB,KAAO,WACzBsC,aAAavkB,KAAKqkB,SACd7kB,EAAQQ,KAAKwjB,iBACbxjB,KAAKwjB,gBAAe,IAYrBY,GACV,4B,oBCpDD,UAAO,CACC,OACA,MACA,MACA,KACA,MACA,OACA,OACA,MACA,QACA,MACA,KACA,KACA,KACA,KACA,OACA,MACA,MACA,OACA,OACA,QACA,MACA,OACA,MACA,QACA,OACA,KACA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,KACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,aAuzEP,KAtzEM,EAAF,SACGI,EACAC,EACArY,EACA7F,EACAme,EACAC,EACAC,EACAvY,EACAwY,EACAC,EACA7iB,EACAzC,EACAC,EACAC,EACAqlB,EACAvf,EACA7F,EACAqlB,EACAC,EACAzc,EACA0c,EACAC,EACA3e,EACAuE,EACAqa,EACAvd,EACAwd,EACAC,EACArT,EACAsT,EACArjB,EACAsjB,EACA5iB,EACAsI,EACAua,EACA5lB,EACA6lB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzZ,EACA0Z,EACA1Y,EACAzL,EACApC,EACAwmB,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA/Y,GACAgZ,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,KACA,KACA,KACA,KACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,KACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,KACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,aAy+FP,KAx+FM,EAAF,SACGjR,EACA0Z,EACAzZ,EACArY,EACA7F,EACAme,EACAC,EACAC,EACAvY,EACAyY,EACA7iB,EACAzC,EACAC,EACAC,EACA8F,EACA7F,EACAw+B,EACAlZ,EACAmZ,EACAC,EACAlZ,EACA3e,EACAqB,EACAwd,EACAiZ,EACAC,EACAC,EACAlZ,EACAmZ,EACAlZ,EACAC,EACA5iB,EACA6iB,EACA5lB,EACA+lB,EACAC,EACAC,EACA4Y,EACA7rB,EACAoT,EACAC,EACAyY,EACAxY,EACAhkB,EACAwkB,EACAC,EACAgY,EACA7X,EACAC,EACA6X,EACAC,EACA1d,EACA+B,EACAiB,EACA8C,GACAG,GACAE,GACAE,GACA1hB,GACA4hB,GACAnkB,GACAqkB,GACApiB,GACAuiB,GACAC,IACJ,aAGA,GAAyB,oBAAd8W,UACP,MAAO,GAOX,IAAIC,GAAY,CACZC,IAAM,kBACNC,IAAM,YACNC,IAAM,sBACNC,IAAM,8BACNC,IAAM,WACNC,IAAM,WACNC,IAAM,qBACNC,IAAM,oBACNC,IAAM,yBACNC,IAAM,cACNC,IAAM,YACNC,GAAK,qBACLC,IAAM,YACNvmB,KAAO,YACPwmB,IAAM,2BACNC,KAAO,+BACPC,KAAO,aACPC,IAAM,aACNC,IAAM,kBACNC,IAAM,YACNC,OAAS,yBACTC,IAAM,aACNC,KAAO,aACPC,IAAM,kBACNC,IAAM,aACNC,IAAM,YACNC,KAAO,YACPC,KAAO,aACPC,IAAM,aACNC,IAAM,kDACNC,IAAM,iDACNC,IAAM,0CACNC,IAAM,kBACNC,IAAM,kBACNC,IAAM,YA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","file":"2.TerriaJS-specs.js","sourcesContent":["define([\n        './freezeObject'\n    ], function(\n        freezeObject) {\n    'use strict';\n\n    /**\n     * Style options for corners.\n     *\n     * @demo The {@link https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=Corridor.html&label=Geometries|Corridor Demo}\n     * demonstrates the three corner types, as used by {@link CorridorGraphics}.\n     *\n     * @exports CornerType\n     */\n    var CornerType = {\n        /**\n         * <img src=\"Images/CornerTypeRounded.png\" style=\"vertical-align: middle;\" width=\"186\" height=\"189\" />\n         *\n         * Corner has a smooth edge.\n         * @type {Number}\n         * @constant\n         */\n        ROUNDED : 0,\n\n        /**\n         * <img src=\"Images/CornerTypeMitered.png\" style=\"vertical-align: middle;\" width=\"186\" height=\"189\" />\n         *\n         * Corner point is the intersection of adjacent edges.\n         * @type {Number}\n         * @constant\n         */\n        MITERED : 1,\n\n        /**\n         * <img src=\"Images/CornerTypeBeveled.png\" style=\"vertical-align: middle;\" width=\"186\" height=\"189\" />\n         *\n         * Corner is clipped.\n         * @type {Number}\n         * @constant\n         */\n        BEVELED : 2\n    };\n\n    return freezeObject(CornerType);\n});\n","define([\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        '../Core/EventHelper',\n        '../Core/TimeIntervalCollection',\n        './Property'\n    ], function(\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        EventHelper,\n        TimeIntervalCollection,\n        Property) {\n    'use strict';\n\n    function subscribeAll(property, eventHelper, definitionChanged, intervals) {\n        function callback() {\n            definitionChanged.raiseEvent(property);\n        }\n        var items = [];\n        eventHelper.removeAll();\n        var length = intervals.length;\n        for (var i = 0; i < length; i++) {\n            var interval = intervals.get(i);\n            if (defined(interval.data) && items.indexOf(interval.data) === -1) {\n                eventHelper.add(interval.data.definitionChanged, callback);\n            }\n        }\n    }\n\n    /**\n     * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n     * data property of each {@link TimeInterval} is another Property instance which is\n     * evaluated at the provided time.\n     *\n     * @alias CompositeProperty\n     * @constructor\n     *\n     *\n     * @example\n     * var constantProperty = ...;\n     * var sampledProperty = ...;\n     *\n     * //Create a composite property from two previously defined properties\n     * //where the property is valid on August 1st, 2012 and uses a constant\n     * //property for the first half of the day and a sampled property for the\n     * //remaining half.\n     * var composite = new Cesium.CompositeProperty();\n     * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n     *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T12:00:00.00Z',\n     *     data : constantProperty\n     * }));\n     * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n     *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-02T00:00:00.00Z',\n     *     isStartIncluded : false,\n     *     isStopIncluded : false,\n     *     data : sampledProperty\n     * }));\n     *\n     * @see CompositeMaterialProperty\n     * @see CompositePositionProperty\n     */\n    function CompositeProperty() {\n        this._eventHelper = new EventHelper();\n        this._definitionChanged = new Event();\n        this._intervals = new TimeIntervalCollection();\n        this._intervals.changedEvent.addEventListener(CompositeProperty.prototype._intervalsChanged, this);\n    }\n\n    defineProperties(CompositeProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CompositeProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return this._intervals.isEmpty;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value.\n         * @memberof CompositeProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the interval collection.\n         * @memberof CompositeProperty.prototype\n         *\n         * @type {TimeIntervalCollection}\n         */\n        intervals : {\n            get : function() {\n                return this._intervals;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositeProperty.prototype.getValue = function(time, result) {\n        \n\n        var innerProperty = this._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getValue(time, result);\n        }\n        return undefined;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CompositeProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CompositeProperty && //\n                this._intervals.equals(other._intervals, Property.equals));\n    };\n\n    /**\n     * @private\n     */\n    CompositeProperty.prototype._intervalsChanged = function() {\n        subscribeAll(this, this._eventHelper, this._definitionChanged, this._intervals);\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    return CompositeProperty;\n});\n","define([\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        '../Core/ReferenceFrame',\n        './CompositeProperty',\n        './Property'\n    ], function(\n        defaultValue,\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        ReferenceFrame,\n        CompositeProperty,\n        Property) {\n    'use strict';\n\n    /**\n     * A {@link CompositeProperty} which is also a {@link PositionProperty}.\n     *\n     * @alias CompositePositionProperty\n     * @constructor\n     *\n     * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n     */\n    function CompositePositionProperty(referenceFrame) {\n        this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n        this._definitionChanged = new Event();\n        this._composite = new CompositeProperty();\n        this._composite.definitionChanged.addEventListener(CompositePositionProperty.prototype._raiseDefinitionChanged, this);\n    }\n\n    defineProperties(CompositePositionProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return this._composite.isConstant;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the interval collection.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {TimeIntervalCollection}\n         */\n        intervals : {\n            get : function() {\n                return this._composite.intervals;\n            }\n        },\n        /**\n         * Gets or sets the reference frame which this position presents itself as.\n         * Each PositionProperty making up this object has it's own reference frame,\n         * so this property merely exposes a \"preferred\" reference frame for clients\n         * to use.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {ReferenceFrame}\n         */\n        referenceFrame : {\n            get : function() {\n                return this._referenceFrame;\n            },\n            set : function(value) {\n                this._referenceFrame = value;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property at the provided time in the fixed frame.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositePositionProperty.prototype.getValue = function(time, result) {\n        return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n    };\n\n    /**\n     * Gets the value of the property at the provided time and in the provided reference frame.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n     * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositePositionProperty.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        \n\n        var innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getValueInReferenceFrame(time, referenceFrame, result);\n        }\n        return undefined;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CompositePositionProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CompositePositionProperty && //\n                this._referenceFrame === other._referenceFrame && //\n                this._composite.equals(other._composite, Property.equals));\n    };\n\n    /**\n     * @private\n     */\n    CompositePositionProperty.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    return CompositePositionProperty;\n});\n","define([\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        '../Core/RuntimeError',\n        './Property'\n    ], function(\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        RuntimeError,\n        Property) {\n    'use strict';\n\n    function resolveEntity(that) {\n        var entityIsResolved = true;\n        if (that._resolveEntity) {\n            var targetEntity = that._targetCollection.getById(that._targetId);\n\n            if (defined(targetEntity)) {\n                targetEntity.definitionChanged.addEventListener(ReferenceProperty.prototype._onTargetEntityDefinitionChanged, that);\n                that._targetEntity = targetEntity;\n                that._resolveEntity = false;\n            } else {\n                //The property has become detached.  It has a valid value but is not currently resolved to an entity in the collection\n                targetEntity = that._targetEntity;\n                entityIsResolved = false;\n            }\n\n            if (!defined(targetEntity)) {\n                throw new RuntimeError('target entity \"' + that._targetId + '\" could not be resolved.');\n            }\n        }\n        return entityIsResolved;\n    }\n\n    function resolve(that) {\n        var targetProperty = that._targetProperty;\n\n        if (that._resolveProperty) {\n            var entityIsResolved = resolveEntity(that);\n\n            var names = that._targetPropertyNames;\n            targetProperty = that._targetEntity;\n            var length = names.length;\n            for (var i = 0; i < length && defined(targetProperty); i++) {\n                targetProperty = targetProperty[names[i]];\n            }\n\n            if (defined(targetProperty)) {\n                that._targetProperty = targetProperty;\n                that._resolveProperty = !entityIsResolved;\n            } else if (!defined(that._targetProperty)) {\n                throw new RuntimeError('targetProperty \"' + that._targetId + '.' + names.join('.') + '\" could not be resolved.');\n            }\n        }\n\n        return targetProperty;\n    }\n\n    /**\n     * A {@link Property} which transparently links to another property on a provided object.\n     *\n     * @alias ReferenceProperty\n     * @constructor\n     *\n     * @param {EntityCollection} targetCollection The entity collection which will be used to resolve the reference.\n     * @param {String} targetId The id of the entity which is being referenced.\n     * @param {String[]} targetPropertyNames The names of the property on the target entity which we will use.\n     *\n     * @example\n     * var collection = new Cesium.EntityCollection();\n     *\n     * //Create a new entity and assign a billboard scale.\n     * var object1 = new Cesium.Entity({id:'object1'});\n     * object1.billboard = new Cesium.BillboardGraphics();\n     * object1.billboard.scale = new Cesium.ConstantProperty(2.0);\n     * collection.add(object1);\n     *\n     * //Create a second entity and reference the scale from the first one.\n     * var object2 = new Cesium.Entity({id:'object2'});\n     * object2.model = new Cesium.ModelGraphics();\n     * object2.model.scale = new Cesium.ReferenceProperty(collection, 'object1', ['billboard', 'scale']);\n     * collection.add(object2);\n     *\n     * //Create a third object, but use the fromString helper function.\n     * var object3 = new Cesium.Entity({id:'object3'});\n     * object3.billboard = new Cesium.BillboardGraphics();\n     * object3.billboard.scale = Cesium.ReferenceProperty.fromString(collection, 'object1#billboard.scale');\n     * collection.add(object3);\n     *\n     * //You can refer to an entity with a # or . in id and property names by escaping them.\n     * var object4 = new Cesium.Entity({id:'#object.4'});\n     * object4.billboard = new Cesium.BillboardGraphics();\n     * object4.billboard.scale = new Cesium.ConstantProperty(2.0);\n     * collection.add(object4);\n     *\n     * var object5 = new Cesium.Entity({id:'object5'});\n     * object5.billboard = new Cesium.BillboardGraphics();\n     * object5.billboard.scale = Cesium.ReferenceProperty.fromString(collection, '\\\\#object\\\\.4#billboard.scale');\n     * collection.add(object5);\n     */\n    function ReferenceProperty(targetCollection, targetId, targetPropertyNames) {\n        \n\n        this._targetCollection = targetCollection;\n        this._targetId = targetId;\n        this._targetPropertyNames = targetPropertyNames;\n        this._targetProperty = undefined;\n        this._targetEntity = undefined;\n        this._definitionChanged = new Event();\n        this._resolveEntity = true;\n        this._resolveProperty = true;\n\n        targetCollection.collectionChanged.addEventListener(ReferenceProperty.prototype._onCollectionChanged, this);\n    }\n\n    defineProperties(ReferenceProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.\n         * @memberof ReferenceProperty.prototype\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(resolve(this));\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever the referenced property's definition is changed.\n         * @memberof ReferenceProperty.prototype\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the reference frame that the position is defined in.\n         * This property is only valid if the referenced property is a {@link PositionProperty}.\n         * @memberof ReferenceProperty.prototype\n         * @type {ReferenceFrame}\n         * @readonly\n         */\n        referenceFrame : {\n            get : function() {\n                return resolve(this).referenceFrame;\n            }\n        },\n        /**\n         * Gets the id of the entity being referenced.\n         * @memberof ReferenceProperty.prototype\n         * @type {String}\n         * @readonly\n         */\n        targetId : {\n            get : function() {\n                return this._targetId;\n            }\n        },\n        /**\n         * Gets the collection containing the entity being referenced.\n         * @memberof ReferenceProperty.prototype\n         * @type {EntityCollection}\n         * @readonly\n         */\n        targetCollection : {\n            get : function() {\n                return this._targetCollection;\n            }\n        },\n        /**\n         * Gets the array of property names used to retrieve the referenced property.\n         * @memberof ReferenceProperty.prototype\n         * @type {String[]}\n         * @readonly\n         */\n        targetPropertyNames : {\n            get : function() {\n                return this._targetPropertyNames;\n            }\n        },\n        /**\n         * Gets the resolved instance of the underlying referenced property.\n         * @memberof ReferenceProperty.prototype\n         * @type {Property}\n         * @readonly\n         */\n        resolvedProperty : {\n            get : function() {\n                return resolve(this);\n            }\n        }\n    });\n\n    /**\n     * Creates a new instance given the entity collection that will\n     * be used to resolve it and a string indicating the target entity id and property.\n     * The format of the string is \"objectId#foo.bar\", where # separates the id from\n     * property path and . separates sub-properties.  If the reference identifier or\n     * or any sub-properties contains a # . or \\ they must be escaped.\n     *\n     * @param {EntityCollection} targetCollection\n     * @param {String} referenceString\n     * @returns {ReferenceProperty} A new instance of ReferenceProperty.\n     *\n     * @exception {DeveloperError} invalid referenceString.\n     */\n    ReferenceProperty.fromString = function(targetCollection, referenceString) {\n        \n\n        var identifier;\n        var values = [];\n\n        var inIdentifier = true;\n        var isEscaped = false;\n        var token = '';\n        for (var i = 0; i < referenceString.length; ++i) {\n            var c = referenceString.charAt(i);\n\n            if (isEscaped) {\n                token += c;\n                isEscaped = false;\n            } else if (c === '\\\\') {\n                isEscaped = true;\n            } else if (inIdentifier && c === '#') {\n                identifier = token;\n                inIdentifier = false;\n                token = '';\n            } else if (!inIdentifier && c === '.') {\n                values.push(token);\n                token = '';\n            } else {\n                token += c;\n            }\n        }\n        values.push(token);\n\n        return new ReferenceProperty(targetCollection, identifier, values);\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    ReferenceProperty.prototype.getValue = function(time, result) {\n        return resolve(this).getValue(time, result);\n    };\n\n    /**\n     * Gets the value of the property at the provided time and in the provided reference frame.\n     * This method is only valid if the property being referenced is a {@link PositionProperty}.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n     * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    ReferenceProperty.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        return resolve(this).getValueInReferenceFrame(time, referenceFrame, result);\n    };\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     * This method is only valid if the property being referenced is a {@link MaterialProperty}.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    ReferenceProperty.prototype.getType = function(time) {\n        return resolve(this).getType(time);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    ReferenceProperty.prototype.equals = function(other) {\n        if (this === other) {\n            return true;\n        }\n\n        var names = this._targetPropertyNames;\n        var otherNames = other._targetPropertyNames;\n\n        if (this._targetCollection !== other._targetCollection || //\n            this._targetId !== other._targetId || //\n            names.length !== otherNames.length) {\n            return false;\n        }\n\n        var length = this._targetPropertyNames.length;\n        for (var i = 0; i < length; i++) {\n            if (names[i] !== otherNames[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    ReferenceProperty.prototype._onTargetEntityDefinitionChanged = function(targetEntity, name, value, oldValue) {\n        if (this._targetPropertyNames[0] === name) {\n            this._resolveProperty = true;\n            this._definitionChanged.raiseEvent(this);\n        }\n    };\n\n    ReferenceProperty.prototype._onCollectionChanged = function(collection, added, removed) {\n        var targetEntity = this._targetEntity;\n        if (defined(targetEntity)) {\n            if (removed.indexOf(targetEntity) !== -1) {\n                targetEntity.definitionChanged.removeEventListener(ReferenceProperty.prototype._onTargetEntityDefinitionChanged, this);\n                this._resolveEntity = true;\n                this._resolveProperty = true;\n            } else if (this._resolveEntity) {\n                //If targetEntity is defined but resolveEntity is true, then the entity is detached\n                //and any change to the collection needs to incur an attempt to resolve in order to re-attach.\n                //without this if block, a reference that becomes re-attached will not signal definitionChanged\n                resolve(this);\n                if (!this._resolveEntity) {\n                    this._definitionChanged.raiseEvent(this);\n                }\n            }\n        }\n    };\n\n    return ReferenceProperty;\n});\n","define([\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Ellipsoid',\n        '../Core/Event',\n        '../Core/ReferenceFrame',\n        './Property'\n    ], function(\n        defined,\n        defineProperties,\n        DeveloperError,\n        Ellipsoid,\n        Event,\n        ReferenceFrame,\n        Property) {\n    'use strict';\n\n    /**\n     * This is a temporary class for scaling position properties to the WGS84 surface.\n     * It will go away or be refactored to support data with arbitrary height references.\n     * @private\n     */\n    function ScaledPositionProperty(value) {\n        this._definitionChanged = new Event();\n        this._value = undefined;\n        this._removeSubscription = undefined;\n        this.setValue(value);\n    }\n\n    defineProperties(ScaledPositionProperty.prototype, {\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._value);\n            }\n        },\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        referenceFrame : {\n            get : function() {\n                return defined(this._value) ? this._value.referenceFrame : ReferenceFrame.FIXED;\n            }\n        }\n    });\n\n    ScaledPositionProperty.prototype.getValue = function(time, result) {\n        return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n    };\n\n    ScaledPositionProperty.prototype.setValue = function(value) {\n        if (this._value !== value) {\n            this._value = value;\n\n            if (defined(this._removeSubscription)) {\n                this._removeSubscription();\n                this._removeSubscription = undefined;\n            }\n\n            if (defined(value)) {\n                this._removeSubscription = value.definitionChanged.addEventListener(this._raiseDefinitionChanged, this);\n            }\n            this._definitionChanged.raiseEvent(this);\n        }\n    };\n\n    ScaledPositionProperty.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        \n\n        if (!defined(this._value)) {\n            return undefined;\n        }\n\n        result = this._value.getValueInReferenceFrame(time, referenceFrame, result);\n        return defined(result) ? Ellipsoid.WGS84.scaleToGeodeticSurface(result, result) : undefined;\n    };\n\n    ScaledPositionProperty.prototype.equals = function(other) {\n        return this === other || (other instanceof ScaledPositionProperty && this._value === other._value);\n    };\n\n    ScaledPositionProperty.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    return ScaledPositionProperty;\n});\n","define([\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        '../Core/EventHelper',\n        '../Core/ReferenceFrame',\n        './Property'\n    ], function(\n        defaultValue,\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        EventHelper,\n        ReferenceFrame,\n        Property) {\n    'use strict';\n\n    /**\n     * A {@link PositionProperty} whose value is an array whose items are the computed value\n     * of other PositionProperty instances.\n     *\n     * @alias PositionPropertyArray\n     * @constructor\n     *\n     * @param {Property[]} [value] An array of Property instances.\n     * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n     */\n    function PositionPropertyArray(value, referenceFrame) {\n        this._value = undefined;\n        this._definitionChanged = new Event();\n        this._eventHelper = new EventHelper();\n        this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n        this.setValue(value);\n    }\n\n    defineProperties(PositionPropertyArray.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  This property\n         * is considered constant if all property items in the array are constant.\n         * @memberof PositionPropertyArray.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                var value = this._value;\n                if (!defined(value)) {\n                    return true;\n                }\n\n                var length = value.length;\n                for (var i = 0; i < length; i++) {\n                    if (!Property.isConstant(value[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value or one of the properties in the array also changes.\n         * @memberof PositionPropertyArray.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the reference frame in which the position is defined.\n         * @memberof PositionPropertyArray.prototype\n         * @type {ReferenceFrame}\n         * @default ReferenceFrame.FIXED;\n         */\n        referenceFrame : {\n            get : function() {\n                return this._referenceFrame;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Cartesian3[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3[]} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PositionPropertyArray.prototype.getValue = function(time, result) {\n        return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n    };\n\n    /**\n     * Gets the value of the property at the provided time and in the provided reference frame.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n     * @param {Cartesian3[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3[]} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PositionPropertyArray.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        \n\n        var value = this._value;\n        if (!defined(value)) {\n            return undefined;\n        }\n\n        var length = value.length;\n        if (!defined(result)) {\n            result = new Array(length);\n        }\n        var i = 0;\n        var x = 0;\n        while (i < length) {\n            var property = value[i];\n            var itemValue = property.getValueInReferenceFrame(time, referenceFrame, result[i]);\n            if (defined(itemValue)) {\n                result[x] = itemValue;\n                x++;\n            }\n            i++;\n        }\n        result.length = x;\n        return result;\n    };\n\n    /**\n     * Sets the value of the property.\n     *\n     * @param {Property[]} value An array of Property instances.\n     */\n    PositionPropertyArray.prototype.setValue = function(value) {\n        var eventHelper = this._eventHelper;\n        eventHelper.removeAll();\n\n        if (defined(value)) {\n            this._value = value.slice();\n            var length = value.length;\n            for (var i = 0; i < length; i++) {\n                var property = value[i];\n                if (defined(property)) {\n                    eventHelper.add(property.definitionChanged, PositionPropertyArray.prototype._raiseDefinitionChanged, this);\n                }\n            }\n        } else {\n            this._value = undefined;\n        }\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PositionPropertyArray.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PositionPropertyArray && //\n                this._referenceFrame === other._referenceFrame && //\n                Property.arrayEquals(this._value, other._value));\n    };\n\n    PositionPropertyArray.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    return PositionPropertyArray;\n});\n","define([\n        '../Core/freezeObject'\n    ], function(\n        freezeObject) {\n    'use strict';\n\n    /**\n     * Defined the orientation of stripes in {@link StripeMaterialProperty}.\n     *\n     * @exports StripeOrientation\n     */\n    var StripeOrientation = {\n        /**\n         * Horizontal orientation.\n         * @type {Number}\n         */\n        HORIZONTAL : 0,\n\n        /**\n         * Vertical orientation.\n         * @type {Number}\n         */\n        VERTICAL : 1\n    };\n\n    return freezeObject(StripeOrientation);\n});\n","define([\n        '../Core/Cartesian3',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        '../Core/JulianDate',\n        './Property'\n    ], function(\n        Cartesian3,\n        defaultValue,\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        JulianDate,\n        Property) {\n    'use strict';\n\n    /**\n     * A {@link Property} which evaluates to a {@link Cartesian3} vector\n     * based on the velocity of the provided {@link PositionProperty}.\n     *\n     * @alias VelocityVectorProperty\n     * @constructor\n     *\n     * @param {Property} [position] The position property used to compute the velocity.\n     * @param {Boolean} [normalize=true] Whether to normalize the computed velocity vector.\n     *\n     * @example\n     * //Create an entity with a billboard rotated to match its velocity.\n     * var position = new Cesium.SampledProperty();\n     * position.addSamples(...);\n     * var entity = viewer.entities.add({\n     *   position : position,\n     *   billboard : {\n     *     image : 'image.png',\n     *     alignedAxis : new Cesium.VelocityVectorProperty(position, true) // alignedAxis must be a unit vector\n     *   }\n     * }));\n     */\n    function VelocityVectorProperty(position, normalize) {\n        this._position = undefined;\n        this._subscription = undefined;\n        this._definitionChanged = new Event();\n        this._normalize = defaultValue(normalize, true);\n\n        this.position = position;\n    }\n\n    defineProperties(VelocityVectorProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._position);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the position property used to compute the velocity vector.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Property}\n         */\n        position : {\n            get : function() {\n                return this._position;\n            },\n            set : function(value) {\n                var oldValue = this._position;\n                if (oldValue !== value) {\n                    if (defined(oldValue)) {\n                        this._subscription();\n                    }\n\n                    this._position = value;\n\n                    if (defined(value)) {\n                        this._subscription = value._definitionChanged.addEventListener(function() {\n                            this._definitionChanged.raiseEvent(this);\n                        }, this);\n                    }\n\n                    this._definitionChanged.raiseEvent(this);\n                }\n            }\n        },\n        /**\n         * Gets or sets whether the vector produced by this property\n         * will be normalized or not.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Boolean}\n         */\n        normalize : {\n            get : function() {\n                return this._normalize;\n            },\n            set : function(value) {\n                if (this._normalize === value) {\n                    return;\n                }\n\n                this._normalize = value;\n                this._definitionChanged.raiseEvent(this);\n            }\n        }\n    });\n\n    var position1Scratch = new Cartesian3();\n    var position2Scratch = new Cartesian3();\n    var timeScratch = new JulianDate();\n    var step = 1.0 / 60.0;\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} [time] The time for which to retrieve the value.\n     * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    VelocityVectorProperty.prototype.getValue = function(time, result) {\n        return this._getValue(time, result);\n    };\n\n    /**\n     * @private\n     */\n    VelocityVectorProperty.prototype._getValue = function(time, velocityResult, positionResult) {\n        \n\n        if (!defined(velocityResult)) {\n            velocityResult = new Cartesian3();\n        }\n\n        var property = this._position;\n        if (Property.isConstant(property)) {\n            return this._normalize ? undefined : Cartesian3.clone(Cartesian3.ZERO, velocityResult);\n        }\n\n        var position1 = property.getValue(time, position1Scratch);\n        var position2 = property.getValue(JulianDate.addSeconds(time, step, timeScratch), position2Scratch);\n\n        //If we don't have a position for now, return undefined.\n        if (!defined(position1)) {\n            return undefined;\n        }\n\n        //If we don't have a position for now + step, see if we have a position for now - step.\n        if (!defined(position2)) {\n            position2 = position1;\n            position1 = property.getValue(JulianDate.addSeconds(time, -step, timeScratch), position2Scratch);\n\n            if (!defined(position1)) {\n                return undefined;\n            }\n        }\n\n        if (Cartesian3.equals(position1, position2)) {\n            return this._normalize ? undefined : Cartesian3.clone(Cartesian3.ZERO, velocityResult);\n        }\n\n        if (defined(positionResult)) {\n            position1.clone(positionResult);\n        }\n\n        var velocity = Cartesian3.subtract(position2, position1, velocityResult);\n        if (this._normalize) {\n            return Cartesian3.normalize(velocity, velocityResult);\n        }\n\n        return Cartesian3.divideByScalar(velocity, step, velocityResult);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    VelocityVectorProperty.prototype.equals = function(other) {\n        return this === other ||//\n               (other instanceof VelocityVectorProperty &&\n                Property.equals(this._position, other._position));\n    };\n\n    return VelocityVectorProperty;\n});\n","define([\n        './defaultValue',\n        './defined',\n        './DeveloperError',\n        './Math'\n    ], function(\n        defaultValue,\n        defined,\n        DeveloperError,\n        CesiumMath) {\n    'use strict';\n\n    var factorial = CesiumMath.factorial;\n\n    function calculateCoefficientTerm(x, zIndices, xTable, derivOrder, termOrder, reservedIndices) {\n        var result = 0;\n        var reserved;\n        var i;\n        var j;\n\n        if (derivOrder > 0) {\n            for (i = 0; i < termOrder; i++) {\n                reserved = false;\n                for (j = 0; j < reservedIndices.length && !reserved; j++) {\n                    if (i === reservedIndices[j]) {\n                        reserved = true;\n                    }\n                }\n\n                if (!reserved) {\n                    reservedIndices.push(i);\n                    result += calculateCoefficientTerm(x, zIndices, xTable, derivOrder - 1, termOrder, reservedIndices);\n                    reservedIndices.splice(reservedIndices.length - 1, 1);\n                }\n            }\n\n            return result;\n        }\n\n        result = 1;\n        for (i = 0; i < termOrder; i++) {\n            reserved = false;\n            for (j = 0; j < reservedIndices.length && !reserved; j++) {\n                if (i === reservedIndices[j]) {\n                    reserved = true;\n                }\n            }\n\n            if (!reserved) {\n                result *= x - xTable[zIndices[i]];\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * An {@link InterpolationAlgorithm} for performing Hermite interpolation.\n     *\n     * @exports HermitePolynomialApproximation\n     */\n    var HermitePolynomialApproximation = {\n        type : 'Hermite'\n    };\n\n    /**\n     * Given the desired degree, returns the number of data points required for interpolation.\n     *\n     * @param {Number} degree The desired degree of interpolation.\n     * @param {Number} [inputOrder=0]  The order of the inputs (0 means just the data, 1 means the data and its derivative, etc).\n     * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n     * @exception {DeveloperError} degree must be 0 or greater.\n     * @exception {DeveloperError} inputOrder must be 0 or greater.\n     */\n    HermitePolynomialApproximation.getRequiredDataPoints = function(degree, inputOrder) {\n        inputOrder = defaultValue(inputOrder, 0);\n\n        \n\n        return Math.max(Math.floor((degree + 1) / (inputOrder + 1)), 2);\n    };\n\n    /**\n     * Interpolates values using Hermite Polynomial Approximation.\n     *\n     * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n     * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n     * in this array must be in increasing order and the same value must not occur twice in the array.\n     * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n     * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n     * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n     * each independent variable value in xTable.\n     * @param {Number[]} [result] An existing array into which to store the result.\n     * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n     */\n    HermitePolynomialApproximation.interpolateOrderZero = function(x, xTable, yTable, yStride, result) {\n        if (!defined(result)) {\n            result = new Array(yStride);\n        }\n\n        var i;\n        var j;\n        var d;\n        var s;\n        var len;\n        var index;\n        var length = xTable.length;\n        var coefficients = new Array(yStride);\n\n        for (i = 0; i < yStride; i++) {\n            result[i] = 0;\n\n            var l = new Array(length);\n            coefficients[i] = l;\n            for (j = 0; j < length; j++) {\n                l[j] = [];\n            }\n        }\n\n        var zIndicesLength = length, zIndices = new Array(zIndicesLength);\n\n        for (i = 0; i < zIndicesLength; i++) {\n            zIndices[i] = i;\n        }\n\n        var highestNonZeroCoef = length - 1;\n        for (s = 0; s < yStride; s++) {\n            for (j = 0; j < zIndicesLength; j++) {\n                index = zIndices[j] * yStride + s;\n                coefficients[s][0].push(yTable[index]);\n            }\n\n            for (i = 1; i < zIndicesLength; i++) {\n                var nonZeroCoefficients = false;\n                for (j = 0; j < zIndicesLength - i; j++) {\n                    var zj = xTable[zIndices[j]];\n                    var zn = xTable[zIndices[j + i]];\n\n                    var numerator;\n                    if (zn - zj <= 0) {\n                        index = zIndices[j] * yStride + yStride * i + s;\n                        numerator = yTable[index];\n                        coefficients[s][i].push(numerator / factorial(i));\n                    } else {\n                        numerator = (coefficients[s][i - 1][j + 1] - coefficients[s][i - 1][j]);\n                        coefficients[s][i].push(numerator / (zn - zj));\n                    }\n                    nonZeroCoefficients = nonZeroCoefficients || (numerator !== 0);\n                }\n\n                if (!nonZeroCoefficients) {\n                    highestNonZeroCoef = i - 1;\n                }\n            }\n        }\n\n        for (d = 0, len = 0; d <= len; d++) {\n            for (i = d; i <= highestNonZeroCoef; i++) {\n                var tempTerm = calculateCoefficientTerm(x, zIndices, xTable, d, i, []);\n                for (s = 0; s < yStride; s++) {\n                    var coeff = coefficients[s][i][0];\n                    result[s + d * yStride] += coeff * tempTerm;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    var arrayScratch = [];\n\n    /**\n     * Interpolates values using Hermite Polynomial Approximation.\n     *\n     * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n     * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n     * in this array must be in increasing order and the same value must not occur twice in the array.\n     * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n     * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n     * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n     * each independent variable value in xTable.\n     * @param {Number} inputOrder The number of derivatives supplied for input.\n     * @param {Number} outputOrder The number of derivatives desired for output.\n     * @param {Number[]} [result] An existing array into which to store the result.\n     *\n     * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n     */\n    HermitePolynomialApproximation.interpolate = function(x, xTable, yTable, yStride, inputOrder, outputOrder, result) {\n        var resultLength = yStride * (outputOrder + 1);\n        if (!defined(result)) {\n            result = new Array(resultLength);\n        }\n        for (var r = 0; r < resultLength; r++) {\n            result[r] = 0;\n        }\n\n        var length = xTable.length;\n        // The zIndices array holds copies of the addresses of the xTable values\n        // in the range we're looking at. Even though this just holds information already\n        // available in xTable this is a much more convenient format.\n        var zIndices = new Array(length * (inputOrder + 1));\n        var i;\n        for (i = 0; i < length; i++) {\n            for (var j = 0; j < (inputOrder + 1); j++) {\n                zIndices[i * (inputOrder + 1) + j] = i;\n            }\n        }\n\n        var zIndiceslength = zIndices.length;\n        var coefficients = arrayScratch;\n        var highestNonZeroCoef = fillCoefficientList(coefficients, zIndices, xTable, yTable, yStride, inputOrder);\n        var reservedIndices = [];\n\n        var tmp = zIndiceslength * (zIndiceslength + 1) / 2;\n        var loopStop = Math.min(highestNonZeroCoef, outputOrder);\n        for (var d = 0; d <= loopStop; d++) {\n            for (i = d; i <= highestNonZeroCoef; i++) {\n                reservedIndices.length = 0;\n                var tempTerm = calculateCoefficientTerm(x, zIndices, xTable, d, i, reservedIndices);\n                var dimTwo = Math.floor(i * (1 - i) / 2) + (zIndiceslength * i);\n\n                for (var s = 0; s < yStride; s++) {\n                    var dimOne = Math.floor(s * tmp);\n                    var coef = coefficients[dimOne + dimTwo];\n                    result[s + d * yStride] += coef * tempTerm;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    function fillCoefficientList(coefficients, zIndices, xTable, yTable, yStride, inputOrder) {\n        var j;\n        var index;\n        var highestNonZero = -1;\n        var zIndiceslength = zIndices.length;\n        var tmp = zIndiceslength * (zIndiceslength + 1) / 2;\n\n        for (var s = 0; s < yStride; s++) {\n            var dimOne = Math.floor(s * tmp);\n\n            for (j = 0; j < zIndiceslength; j++) {\n                index = zIndices[j] * yStride * (inputOrder + 1) + s;\n                coefficients[dimOne + j] = yTable[index];\n            }\n\n            for (var i = 1; i < zIndiceslength; i++) {\n                var coefIndex = 0;\n                var dimTwo = Math.floor(i * (1 - i) / 2) + (zIndiceslength * i);\n                var nonZeroCoefficients = false;\n\n                for (j = 0; j < zIndiceslength - i; j++) {\n                    var zj = xTable[zIndices[j]];\n                    var zn = xTable[zIndices[j + i]];\n\n                    var numerator;\n                    var coefficient;\n                    if (zn - zj <= 0) {\n                        index = zIndices[j] * yStride * (inputOrder + 1) + yStride * i + s;\n                        numerator = yTable[index];\n                        coefficient = (numerator / CesiumMath.factorial(i));\n                        coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n                        coefIndex++;\n                    } else {\n                        var dimTwoMinusOne = Math.floor((i - 1) * (2 - i) / 2) + (zIndiceslength * (i - 1));\n                        numerator = coefficients[dimOne + dimTwoMinusOne + j + 1] - coefficients[dimOne + dimTwoMinusOne + j];\n                        coefficient = (numerator / (zn - zj));\n                        coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n                        coefIndex++;\n                    }\n                    nonZeroCoefficients = nonZeroCoefficients || (numerator !== 0.0);\n                }\n\n                if (nonZeroCoefficients) {\n                    highestNonZero = Math.max(highestNonZero, i);\n                }\n            }\n        }\n\n        return highestNonZero;\n    }\n\n    return HermitePolynomialApproximation;\n});\n","define([\n        './defined'\n    ], function(\n        defined) {\n    'use strict';\n\n    /**\n     * An {@link InterpolationAlgorithm} for performing Lagrange interpolation.\n     *\n     * @exports LagrangePolynomialApproximation\n     */\n    var LagrangePolynomialApproximation = {\n        type : 'Lagrange'\n    };\n\n    /**\n     * Given the desired degree, returns the number of data points required for interpolation.\n     *\n     * @param {Number} degree The desired degree of interpolation.\n     * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n     */\n    LagrangePolynomialApproximation.getRequiredDataPoints = function(degree) {\n        return Math.max(degree + 1.0, 2);\n    };\n\n    /**\n     * Interpolates values using Lagrange Polynomial Approximation.\n     *\n     * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n     * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n     * in this array must be in increasing order and the same value must not occur twice in the array.\n     * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n     * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n     * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n     * each independent variable value in xTable.\n     * @param {Number[]} [result] An existing array into which to store the result.\n     * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n     */\n    LagrangePolynomialApproximation.interpolateOrderZero = function(x, xTable, yTable, yStride, result) {\n        if (!defined(result)) {\n            result = new Array(yStride);\n        }\n\n        var i;\n        var j;\n        var length = xTable.length;\n\n        for (i = 0; i < yStride; i++) {\n            result[i] = 0;\n        }\n\n        for (i = 0; i < length; i++) {\n            var coefficient = 1;\n\n            for (j = 0; j < length; j++) {\n                if (j !== i) {\n                    var diffX = xTable[i] - xTable[j];\n                    coefficient *= (x - xTable[j]) / diffX;\n                }\n            }\n\n            for (j = 0; j < yStride; j++) {\n                result[j] += coefficient * yTable[i * yStride + j];\n            }\n        }\n\n        return result;\n    };\n\n    return LagrangePolynomialApproximation;\n});\n","define([\n        './Check',\n        './defaultValue',\n        './defined'\n    ], function(\n        Check,\n        defaultValue,\n        defined) {\n    'use strict';\n\n    /**\n     * A set of curvilinear 3-dimensional coordinates.\n     *\n     * @alias Spherical\n     * @constructor\n     *\n     * @param {Number} [clock=0.0] The angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.\n     * @param {Number} [cone=0.0] The angular coordinate measured from the positive z-axis and toward the negative z-axis.\n     * @param {Number} [magnitude=1.0] The linear coordinate measured from the origin.\n     */\n    function Spherical(clock, cone, magnitude) {\n        /**\n         * The clock component.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.clock = defaultValue(clock, 0.0);\n        /**\n         * The cone component.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.cone = defaultValue(cone, 0.0);\n        /**\n         * The magnitude component.\n         * @type {Number}\n         * @default 1.0\n         */\n        this.magnitude = defaultValue(magnitude, 1.0);\n    }\n\n    /**\n     * Converts the provided Cartesian3 into Spherical coordinates.\n     *\n     * @param {Cartesian3} cartesian3 The Cartesian3 to be converted to Spherical.\n     * @param {Spherical} [result] The object in which the result will be stored, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter, or a new instance if one was not provided.\n     */\n    Spherical.fromCartesian3 = function(cartesian3, result) {\n        \n\n        var x = cartesian3.x;\n        var y = cartesian3.y;\n        var z = cartesian3.z;\n        var radialSquared = x * x + y * y;\n\n        if (!defined(result)) {\n            result = new Spherical();\n        }\n\n        result.clock = Math.atan2(y, x);\n        result.cone = Math.atan2(Math.sqrt(radialSquared), z);\n        result.magnitude = Math.sqrt(radialSquared + z * z);\n        return result;\n    };\n\n    /**\n     * Creates a duplicate of a Spherical.\n     *\n     * @param {Spherical} spherical The spherical to clone.\n     * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter or a new instance if result was undefined. (Returns undefined if spherical is undefined)\n     */\n    Spherical.clone = function(spherical, result) {\n        if (!defined(spherical)) {\n            return undefined;\n        }\n\n        if (!defined(result)) {\n            return new Spherical(spherical.clock, spherical.cone, spherical.magnitude);\n        }\n\n        result.clock = spherical.clock;\n        result.cone = spherical.cone;\n        result.magnitude = spherical.magnitude;\n        return result;\n    };\n\n    /**\n     * Computes the normalized version of the provided spherical.\n     *\n     * @param {Spherical} spherical The spherical to be normalized.\n     * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n     */\n    Spherical.normalize = function(spherical, result) {\n      \n\n        if (!defined(result)) {\n            return new Spherical(spherical.clock, spherical.cone, 1.0);\n        }\n\n        result.clock = spherical.clock;\n        result.cone = spherical.cone;\n        result.magnitude = 1.0;\n        return result;\n    };\n\n    /**\n     * Returns true if the first spherical is equal to the second spherical, false otherwise.\n     *\n     * @param {Spherical} left The first Spherical to be compared.\n     * @param {Spherical} right The second Spherical to be compared.\n     * @returns {Boolean} true if the first spherical is equal to the second spherical, false otherwise.\n     */\n    Spherical.equals = function(left, right) {\n        return (left === right) ||\n               ((defined(left)) &&\n                (defined(right)) &&\n                (left.clock === right.clock) &&\n                (left.cone === right.cone) &&\n                (left.magnitude === right.magnitude));\n    };\n\n    /**\n     * Returns true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n     *\n     * @param {Spherical} left The first Spherical to be compared.\n     * @param {Spherical} right The second Spherical to be compared.\n     * @param {Number} [epsilon=0.0] The epsilon to compare against.\n     * @returns {Boolean} true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n     */\n    Spherical.equalsEpsilon = function(left, right, epsilon) {\n        epsilon = defaultValue(epsilon, 0.0);\n        return (left === right) ||\n               ((defined(left)) &&\n                (defined(right)) &&\n                (Math.abs(left.clock - right.clock) <= epsilon) &&\n                (Math.abs(left.cone - right.cone) <= epsilon) &&\n                (Math.abs(left.magnitude - right.magnitude) <= epsilon));\n    };\n\n    /**\n     * Returns true if this spherical is equal to the provided spherical, false otherwise.\n     *\n     * @param {Spherical} other The Spherical to be compared.\n     * @returns {Boolean} true if this spherical is equal to the provided spherical, false otherwise.\n     */\n    Spherical.prototype.equals = function(other) {\n        return Spherical.equals(this, other);\n    };\n\n    /**\n     * Creates a duplicate of this Spherical.\n     *\n     * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n     */\n    Spherical.prototype.clone = function(result) {\n        return Spherical.clone(this, result);\n    };\n\n    /**\n    * Returns true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n    *\n    * @param {Spherical} other The Spherical to be compared.\n    * @param {Number} epsilon The epsilon to compare against.\n    * @returns {Boolean} true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n    */\n    Spherical.prototype.equalsEpsilon = function(other, epsilon) {\n        return Spherical.equalsEpsilon(this, other, epsilon);\n    };\n\n    /**\n    * Returns a string representing this instance in the format (clock, cone, magnitude).\n    *\n    * @returns {String} A string representing this instance.\n    */\n    Spherical.prototype.toString = function() {\n        return '(' + this.clock + ', ' + this.cone + ', ' + this.magnitude + ')';\n    };\n\n    return Spherical;\n});\n","define([\n        '../Core/Cartesian2',\n        '../Core/Color',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Event',\n        './createPropertyDescriptor',\n        './Property'\n    ], function(\n        Cartesian2,\n        Color,\n        defaultValue,\n        defined,\n        defineProperties,\n        Event,\n        createPropertyDescriptor,\n        Property) {\n    'use strict';\n\n    var defaultEvenColor = Color.WHITE;\n    var defaultOddColor = Color.BLACK;\n    var defaultRepeat = new Cartesian2(2.0, 2.0);\n\n    /**\n     * A {@link MaterialProperty} that maps to checkerboard {@link Material} uniforms.\n     * @alias CheckerboardMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n     * @param {Property} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n     * @param {Property} [options.repeat=new Cartesian2(2.0, 2.0)] A {@link Cartesian2} Property specifying how many times the tiles repeat in each direction.\n     */\n    function CheckerboardMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._evenColor = undefined;\n        this._evenColorSubscription = undefined;\n        this._oddColor = undefined;\n        this._oddColorSubscription = undefined;\n        this._repeat = undefined;\n        this._repeatSubscription = undefined;\n\n        this.evenColor = options.evenColor;\n        this.oddColor = options.oddColor;\n        this.repeat = options.repeat;\n    }\n\n    defineProperties(CheckerboardMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CheckerboardMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._evenColor) && //\n                       Property.isConstant(this._oddColor) && //\n                       Property.isConstant(this._repeat);\n            }\n        },\n\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof CheckerboardMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n\n        /**\n         * Gets or sets the Property specifying the first {@link Color}.\n         * @memberof CheckerboardMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        evenColor : createPropertyDescriptor('evenColor'),\n\n        /**\n         * Gets or sets the Property specifying the second {@link Color}.\n         * @memberof CheckerboardMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.BLACK\n         */\n        oddColor : createPropertyDescriptor('oddColor'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying how many times the tiles repeat in each direction.\n         * @memberof CheckerboardMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(2.0, 2.0)\n         */\n        repeat : createPropertyDescriptor('repeat')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    CheckerboardMaterialProperty.prototype.getType = function(time) {\n        return 'Checkerboard';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CheckerboardMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.lightColor = Property.getValueOrClonedDefault(this._evenColor, time, defaultEvenColor, result.lightColor);\n        result.darkColor = Property.getValueOrClonedDefault(this._oddColor, time, defaultOddColor, result.darkColor);\n        result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CheckerboardMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CheckerboardMaterialProperty && //\n                       Property.equals(this._evenColor, other._evenColor) && //\n                       Property.equals(this._oddColor, other._oddColor) && //\n                       Property.equals(this._repeat, other._repeat));\n    };\n\n    return CheckerboardMaterialProperty;\n});\n","define([\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        './CompositeProperty',\n        './Property'\n    ], function(\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        CompositeProperty,\n        Property) {\n    'use strict';\n\n    /**\n     * A {@link CompositeProperty} which is also a {@link MaterialProperty}.\n     *\n     * @alias CompositeMaterialProperty\n     * @constructor\n     */\n    function CompositeMaterialProperty() {\n        this._definitionChanged = new Event();\n        this._composite = new CompositeProperty();\n        this._composite.definitionChanged.addEventListener(CompositeMaterialProperty.prototype._raiseDefinitionChanged, this);\n    }\n\n    defineProperties(CompositeMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CompositeMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return this._composite.isConstant;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value.\n         * @memberof CompositeMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the interval collection.\n         * @memberof CompositeMaterialProperty.prototype\n         *\n         * @type {TimeIntervalCollection}\n         */\n        intervals : {\n            get : function() {\n                return this._composite._intervals;\n            }\n        }\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    CompositeMaterialProperty.prototype.getType = function(time) {\n        \n\n        var innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getType(time);\n        }\n        return undefined;\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositeMaterialProperty.prototype.getValue = function(time, result) {\n        \n\n        var innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getValue(time, result);\n        }\n        return undefined;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CompositeMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CompositeMaterialProperty && //\n                this._composite.equals(other._composite, Property.equals));\n    };\n\n    /**\n     * @private\n     */\n    CompositeMaterialProperty.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    return CompositeMaterialProperty;\n});\n","define([\n        '../Core/Cartesian2',\n        '../Core/Color',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Event',\n        './createPropertyDescriptor',\n        './Property'\n    ], function(\n        Cartesian2,\n        Color,\n        defaultValue,\n        defined,\n        defineProperties,\n        Event,\n        createPropertyDescriptor,\n        Property) {\n    'use strict';\n\n    var defaultColor = Color.WHITE;\n    var defaultCellAlpha = 0.1;\n    var defaultLineCount = new Cartesian2(8, 8);\n    var defaultLineOffset = new Cartesian2(0, 0);\n    var defaultLineThickness = new Cartesian2(1, 1);\n\n    /**\n     * A {@link MaterialProperty} that maps to grid {@link Material} uniforms.\n     * @alias GridMaterialProperty\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.color=Color.WHITE] A Property specifying the grid {@link Color}.\n     * @param {Property} [options.cellAlpha=0.1] A numeric Property specifying cell alpha values.\n     * @param {Property} [options.lineCount=new Cartesian2(8, 8)] A {@link Cartesian2} Property specifying the number of grid lines along each axis.\n     * @param {Property} [options.lineThickness=new Cartesian2(1.0, 1.0)] A {@link Cartesian2} Property specifying the thickness of grid lines along each axis.\n     * @param {Property} [options.lineOffset=new Cartesian2(0.0, 0.0)] A {@link Cartesian2} Property specifying starting offset of grid lines along each axis.\n     *\n     * @constructor\n     */\n    function GridMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n        this._cellAlpha = undefined;\n        this._cellAlphaSubscription = undefined;\n        this._lineCount = undefined;\n        this._lineCountSubscription = undefined;\n        this._lineThickness = undefined;\n        this._lineThicknessSubscription = undefined;\n        this._lineOffset = undefined;\n        this._lineOffsetSubscription = undefined;\n\n        this.color = options.color;\n        this.cellAlpha = options.cellAlpha;\n        this.lineCount = options.lineCount;\n        this.lineThickness = options.lineThickness;\n        this.lineOffset = options.lineOffset;\n    }\n\n    defineProperties(GridMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof GridMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._color) &&\n                       Property.isConstant(this._cellAlpha) &&\n                       Property.isConstant(this._lineCount) &&\n                       Property.isConstant(this._lineThickness) &&\n                       Property.isConstant(this._lineOffset);\n            }\n        },\n\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof GridMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n\n        /**\n         * Gets or sets the Property specifying the grid {@link Color}.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        color : createPropertyDescriptor('color'),\n\n        /**\n         * Gets or sets the numeric Property specifying cell alpha values.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default 0.1\n         */\n        cellAlpha : createPropertyDescriptor('cellAlpha'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying the number of grid lines along each axis.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(8.0, 8.0)\n         */\n        lineCount : createPropertyDescriptor('lineCount'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying the thickness of grid lines along each axis.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(1.0, 1.0)\n         */\n        lineThickness : createPropertyDescriptor('lineThickness'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying the starting offset of grid lines along each axis.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(0.0, 0.0)\n         */\n        lineOffset : createPropertyDescriptor('lineOffset')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    GridMaterialProperty.prototype.getType = function(time) {\n        return 'Grid';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    GridMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n        result.cellAlpha = Property.getValueOrDefault(this._cellAlpha, time, defaultCellAlpha);\n        result.lineCount = Property.getValueOrClonedDefault(this._lineCount, time, defaultLineCount, result.lineCount);\n        result.lineThickness = Property.getValueOrClonedDefault(this._lineThickness, time, defaultLineThickness, result.lineThickness);\n        result.lineOffset = Property.getValueOrClonedDefault(this._lineOffset, time, defaultLineOffset, result.lineOffset);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    GridMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n        (other instanceof GridMaterialProperty && //\n        Property.equals(this._color, other._color) && //\n        Property.equals(this._cellAlpha, other._cellAlpha) && //\n        Property.equals(this._lineCount, other._lineCount) && //\n        Property.equals(this._lineThickness, other._lineThickness) && //\n        Property.equals(this._lineOffset, other._lineOffset));\n    };\n\n    return GridMaterialProperty;\n});\n","define([\n        '../Core/Color',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Event',\n        './createPropertyDescriptor',\n        './Property'\n    ], function(\n        Color,\n        defined,\n        defineProperties,\n        Event,\n        createPropertyDescriptor,\n        Property) {\n    'use strict';\n\n    /**\n     * A {@link MaterialProperty} that maps to PolylineArrow {@link Material} uniforms.\n     *\n     * @param {Property} [color=Color.WHITE] The {@link Color} Property to be used.\n     *\n     * @alias PolylineArrowMaterialProperty\n     * @constructor\n     */\n    function PolylineArrowMaterialProperty(color) {\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n\n        this.color = color;\n    }\n\n    defineProperties(PolylineArrowMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof PolylineArrowMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._color);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof PolylineArrowMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the {@link Color} {@link Property}.\n         * @memberof PolylineArrowMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        color : createPropertyDescriptor('color')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    PolylineArrowMaterialProperty.prototype.getType = function(time) {\n        return 'PolylineArrow';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PolylineArrowMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, Color.WHITE, result.color);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PolylineArrowMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PolylineArrowMaterialProperty && //\n                Property.equals(this._color, other._color));\n    };\n\n    return PolylineArrowMaterialProperty;\n});\n","define([\n        '../Core/Color',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Event',\n        './createPropertyDescriptor',\n        './Property'\n    ], function(\n        Color,\n        defaultValue,\n        defined,\n        defineProperties,\n        Event,\n        createPropertyDescriptor,\n        Property) {\n    'use strict';\n\n    var defaultColor = Color.WHITE;\n    var defaultGapColor = Color.TRANSPARENT;\n    var defaultDashLength = 16.0;\n    var defaultDashPattern = 255.0;\n\n    /**\n     * A {@link MaterialProperty} that maps to polyline dash {@link Material} uniforms.\n     * @alias PolylineDashMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n     * @param {Property} [options.gapColor=Color.TRANSPARENT] A Property specifying the {@link Color} of the gaps in the line.\n     * @param {Property} [options.dashLength=16.0] A numeric Property specifying the length of the dash pattern in pixel.s\n     * @param {Property} [options.dashPattern=255.0] A numeric Property specifying a 16 bit pattern for the dash\n     */\n    function PolylineDashMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n        this._gapColor = undefined;\n        this._gapColorSubscription = undefined;\n        this._dashLength = undefined;\n        this._dashLengthSubscription = undefined;\n        this._dashPattern = undefined;\n        this._dashPatternSubscription = undefined;\n\n        this.color = options.color;\n        this.gapColor = options.gapColor;\n        this.dashLength = options.dashLength;\n        this.dashPattern = options.dashPattern;\n    }\n\n    defineProperties(PolylineDashMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return (Property.isConstant(this._color) &&\n                        Property.isConstant(this._gapColor) &&\n                        Property.isConstant(this._dashLength) &&\n                        Property.isConstant(this._dashPattern));\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the line.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        color : createPropertyDescriptor('color'),\n\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the gaps in the line.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        gapColor : createPropertyDescriptor('gapColor'),\n\n        /**\n         * Gets or sets the numeric Property specifying the length of a dash cycle\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        dashLength : createPropertyDescriptor('dashLength'),\n\n        /**\n         * Gets or sets the numeric Property specifying a dash pattern\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        dashPattern : createPropertyDescriptor('dashPattern')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    PolylineDashMaterialProperty.prototype.getType = function(time) {\n        return 'PolylineDash';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PolylineDashMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n        result.gapColor = Property.getValueOrClonedDefault(this._gapColor, time, defaultGapColor, result.gapColor);\n        result.dashLength = Property.getValueOrDefault(this._dashLength, time, defaultDashLength, result.dashLength);\n        result.dashPattern = Property.getValueOrDefault(this._dashPattern, time, defaultDashPattern, result.dashPattern);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PolylineDashMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PolylineDashMaterialProperty &&\n                Property.equals(this._color, other._color) &&\n                Property.equals(this._gapColor, other._gapColor) &&\n                Property.equals(this._dashLength, other._dashLength) &&\n                Property.equals(this._dashPattern, other._dashPattern));\n    };\n\n    return PolylineDashMaterialProperty;\n});\n","define([\n        '../Core/Color',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Event',\n        './createPropertyDescriptor',\n        './Property'\n    ], function(\n        Color,\n        defaultValue,\n        defined,\n        defineProperties,\n        Event,\n        createPropertyDescriptor,\n        Property) {\n    'use strict';\n\n    var defaultColor = Color.WHITE;\n    var defaultOutlineColor = Color.BLACK;\n    var defaultOutlineWidth = 1.0;\n\n    /**\n     * A {@link MaterialProperty} that maps to polyline outline {@link Material} uniforms.\n     * @alias PolylineOutlineMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n     * @param {Property} [options.outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n     * @param {Property} [options.outlineWidth=1.0] A numeric Property specifying the width of the outline, in pixels.\n     */\n    function PolylineOutlineMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n        this._outlineColor = undefined;\n        this._outlineColorSubscription = undefined;\n        this._outlineWidth = undefined;\n        this._outlineWidthSubscription = undefined;\n\n        this.color = options.color;\n        this.outlineColor = options.outlineColor;\n        this.outlineWidth = options.outlineWidth;\n    }\n\n    defineProperties(PolylineOutlineMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._color) && Property.isConstant(this._outlineColor) && Property.isConstant(this._outlineWidth);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the line.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        color : createPropertyDescriptor('color'),\n\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the outline.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.BLACK\n         */\n        outlineColor : createPropertyDescriptor('outlineColor'),\n\n        /**\n         * Gets or sets the numeric Property specifying the width of the outline.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         * @type {Property}\n         * @default 1.0\n         */\n        outlineWidth : createPropertyDescriptor('outlineWidth')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    PolylineOutlineMaterialProperty.prototype.getType = function(time) {\n        return 'PolylineOutline';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PolylineOutlineMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n        result.outlineColor = Property.getValueOrClonedDefault(this._outlineColor, time, defaultOutlineColor, result.outlineColor);\n        result.outlineWidth = Property.getValueOrDefault(this._outlineWidth, time, defaultOutlineWidth);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PolylineOutlineMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PolylineOutlineMaterialProperty && //\n                Property.equals(this._color, other._color) && //\n                Property.equals(this._outlineColor, other._outlineColor) && //\n                Property.equals(this._outlineWidth, other._outlineWidth));\n    };\n\n    return PolylineOutlineMaterialProperty;\n});\n","define([\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Event',\n        '../Core/EventHelper',\n        './Property'\n    ], function(\n        defined,\n        defineProperties,\n        DeveloperError,\n        Event,\n        EventHelper,\n        Property) {\n    'use strict';\n\n    /**\n     * A {@link Property} whose value is an array whose items are the computed value\n     * of other property instances.\n     *\n     * @alias PropertyArray\n     * @constructor\n     *\n     * @param {Property[]} [value] An array of Property instances.\n     */\n    function PropertyArray(value) {\n        this._value = undefined;\n        this._definitionChanged = new Event();\n        this._eventHelper = new EventHelper();\n        this.setValue(value);\n    }\n\n    defineProperties(PropertyArray.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  This property\n         * is considered constant if all property items in the array are constant.\n         * @memberof PropertyArray.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                var value = this._value;\n                if (!defined(value)) {\n                    return true;\n                }\n                var length = value.length;\n                for (var i = 0; i < length; i++) {\n                    if (!Property.isConstant(value[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value or one of the properties in the array also changes.\n         * @memberof PropertyArray.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object[]} The modified result parameter, which is an array of values produced by evaluating each of the contained properties at the given time or a new instance if the result parameter was not supplied.\n     */\n    PropertyArray.prototype.getValue = function(time, result) {\n        \n\n        var value = this._value;\n        if (!defined(value)) {\n            return undefined;\n        }\n\n        var length = value.length;\n        if (!defined(result)) {\n            result = new Array(length);\n        }\n        var i = 0;\n        var x = 0;\n        while (i < length) {\n            var property = this._value[i];\n            var itemValue = property.getValue(time, result[i]);\n            if (defined(itemValue)) {\n                result[x] = itemValue;\n                x++;\n            }\n            i++;\n        }\n        result.length = x;\n        return result;\n    };\n\n    /**\n     * Sets the value of the property.\n     *\n     * @param {Property[]} value An array of Property instances.\n     */\n    PropertyArray.prototype.setValue = function(value) {\n        var eventHelper = this._eventHelper;\n        eventHelper.removeAll();\n\n        if (defined(value)) {\n            this._value = value.slice();\n            var length = value.length;\n            for (var i = 0; i < length; i++) {\n                var property = value[i];\n                if (defined(property)) {\n                    eventHelper.add(property.definitionChanged, PropertyArray.prototype._raiseDefinitionChanged, this);\n                }\n            }\n        } else {\n            this._value = undefined;\n        }\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PropertyArray.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PropertyArray && //\n                Property.arrayEquals(this._value, other._value));\n    };\n\n    PropertyArray.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    return PropertyArray;\n});\n","define([\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/DeveloperError',\n        '../Core/Math'\n    ], function(\n        defaultValue,\n        defined,\n        DeveloperError,\n        CesiumMath) {\n    'use strict';\n\n    /**\n     * Represents a {@link Packable} number that always interpolates values\n     * towards the shortest angle of rotation. This object is never used directly\n     * but is instead passed to the constructor of {@link SampledProperty}\n     * in order to represent a two-dimensional angle of rotation.\n     *\n     * @exports Rotation\n     *\n     *\n     * @example\n     * var time1 = Cesium.JulianDate.fromIso8601('2010-05-07T00:00:00');\n     * var time2 = Cesium.JulianDate.fromIso8601('2010-05-07T00:01:00');\n     * var time3 = Cesium.JulianDate.fromIso8601('2010-05-07T00:02:00');\n     *\n     * var property = new Cesium.SampledProperty(Cesium.Rotation);\n     * property.addSample(time1, 0);\n     * property.addSample(time3, Cesium.Math.toRadians(350));\n     *\n     * //Getting the value at time2 will equal 355 degrees instead\n     * //of 175 degrees (which is what you get if you construct\n     * //a SampledProperty(Number) instead.  Note, the actual\n     * //return value is in radians, not degrees.\n     * property.getValue(time2);\n     *\n     * @see PackableForInterpolation\n     */\n    var Rotation = {\n        /**\n         * The number of elements used to pack the object into an array.\n         * @type {Number}\n         */\n        packedLength : 1,\n\n        /**\n         * Stores the provided instance into the provided array.\n         *\n         * @param {Rotation} value The value to pack.\n         * @param {Number[]} array The array to pack into.\n         * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n         *\n         * @returns {Number[]} The array that was packed into\n         */\n        pack : function(value, array, startingIndex) {\n            \n\n            startingIndex = defaultValue(startingIndex, 0);\n            array[startingIndex] = value;\n\n            return array;\n        },\n\n        /**\n         * Retrieves an instance from a packed array.\n         *\n         * @param {Number[]} array The packed array.\n         * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n         * @param {Rotation} [result] The object into which to store the result.\n         * @returns {Rotation} The modified result parameter or a new Rotation instance if one was not provided.\n         */\n        unpack : function(array, startingIndex, result) {\n            \n\n            startingIndex = defaultValue(startingIndex, 0);\n            return array[startingIndex];\n        },\n\n        /**\n         * Converts a packed array into a form suitable for interpolation.\n         *\n         * @param {Number[]} packedArray The packed array.\n         * @param {Number} [startingIndex=0] The index of the first element to be converted.\n         * @param {Number} [lastIndex=packedArray.length] The index of the last element to be converted.\n         * @param {Number[]} result The object into which to store the result.\n         */\n        convertPackedArrayForInterpolation : function(packedArray, startingIndex, lastIndex, result) {\n            \n\n            startingIndex = defaultValue(startingIndex, 0);\n            lastIndex = defaultValue(lastIndex, packedArray.length);\n\n            var previousValue;\n            for (var i = 0, len = lastIndex - startingIndex + 1; i < len; i++) {\n                var value = packedArray[startingIndex + i];\n                if (i === 0 || Math.abs(previousValue - value) < Math.PI) {\n                    result[i] = value;\n                } else {\n                    result[i] = value - CesiumMath.TWO_PI;\n                }\n                previousValue = value;\n            }\n        },\n\n        /**\n         * Retrieves an instance from a packed array converted with {@link Rotation.convertPackedArrayForInterpolation}.\n         *\n         * @param {Number[]} array The array previously packed for interpolation.\n         * @param {Number[]} sourceArray The original packed array.\n         * @param {Number} [firstIndex=0] The firstIndex used to convert the array.\n         * @param {Number} [lastIndex=packedArray.length] The lastIndex used to convert the array.\n         * @param {Rotation} [result] The object into which to store the result.\n         * @returns {Rotation} The modified result parameter or a new Rotation instance if one was not provided.\n         */\n        unpackInterpolationResult : function(array, sourceArray, firstIndex, lastIndex, result) {\n            \n\n            result = array[0];\n            if (result < 0) {\n                return result + CesiumMath.TWO_PI;\n            }\n            return result;\n        }\n    };\n\n    return Rotation;\n});\n","define([\n        '../Core/Color',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Event',\n        './createPropertyDescriptor',\n        './Property',\n        './StripeOrientation'\n    ], function(\n        Color,\n        defaultValue,\n        defined,\n        defineProperties,\n        Event,\n        createPropertyDescriptor,\n        Property,\n        StripeOrientation) {\n    'use strict';\n\n    var defaultOrientation = StripeOrientation.HORIZONTAL;\n    var defaultEvenColor = Color.WHITE;\n    var defaultOddColor = Color.BLACK;\n    var defaultOffset = 0;\n    var defaultRepeat = 1;\n\n    /**\n     * A {@link MaterialProperty} that maps to stripe {@link Material} uniforms.\n     * @alias StripeMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.orientation=StripeOrientation.HORIZONTAL] A Property specifying the {@link StripeOrientation}.\n     * @param {Property} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n     * @param {Property} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n     * @param {Property} [options.offset=0] A numeric Property specifying how far into the pattern to start the material.\n     * @param {Property} [options.repeat=1] A numeric Property specifying how many times the stripes repeat.\n     */\n    function StripeMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._orientation = undefined;\n        this._orientationSubscription = undefined;\n        this._evenColor = undefined;\n        this._evenColorSubscription = undefined;\n        this._oddColor = undefined;\n        this._oddColorSubscription = undefined;\n        this._offset = undefined;\n        this._offsetSubscription = undefined;\n        this._repeat = undefined;\n        this._repeatSubscription = undefined;\n\n        this.orientation = options.orientation;\n        this.evenColor = options.evenColor;\n        this.oddColor = options.oddColor;\n        this.offset = options.offset;\n        this.repeat = options.repeat;\n    }\n\n    defineProperties(StripeMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof StripeMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._orientation) && //\n                       Property.isConstant(this._evenColor) && //\n                       Property.isConstant(this._oddColor) && //\n                       Property.isConstant(this._offset) && //\n                       Property.isConstant(this._repeat);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof StripeMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n\n        /**\n         * Gets or sets the Property specifying the {@link StripeOrientation}/\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default StripeOrientation.HORIZONTAL\n         */\n        orientation : createPropertyDescriptor('orientation'),\n\n        /**\n         * Gets or sets the Property specifying the first {@link Color}.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        evenColor : createPropertyDescriptor('evenColor'),\n\n        /**\n         * Gets or sets the Property specifying the second {@link Color}.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.BLACK\n         */\n        oddColor : createPropertyDescriptor('oddColor'),\n\n        /**\n         * Gets or sets the numeric Property specifying the point into the pattern\n         * to begin drawing; with 0.0 being the beginning of the even color, 1.0 the beginning\n         * of the odd color, 2.0 being the even color again, and any multiple or fractional values\n         * being in between.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default 0.0\n         */\n        offset : createPropertyDescriptor('offset'),\n\n        /**\n         * Gets or sets the numeric Property specifying how many times the stripes repeat.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default 1.0\n         */\n        repeat : createPropertyDescriptor('repeat')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    StripeMaterialProperty.prototype.getType = function(time) {\n        return 'Stripe';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    StripeMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.horizontal = Property.getValueOrDefault(this._orientation, time, defaultOrientation) === StripeOrientation.HORIZONTAL;\n        result.evenColor = Property.getValueOrClonedDefault(this._evenColor, time, defaultEvenColor, result.evenColor);\n        result.oddColor = Property.getValueOrClonedDefault(this._oddColor, time, defaultOddColor, result.oddColor);\n        result.offset = Property.getValueOrDefault(this._offset, time, defaultOffset);\n        result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    StripeMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof StripeMaterialProperty && //\n                       Property.equals(this._orientation, other._orientation) && //\n                       Property.equals(this._evenColor, other._evenColor) && //\n                       Property.equals(this._oddColor, other._oddColor) && //\n                       Property.equals(this._offset, other._offset) && //\n                       Property.equals(this._repeat, other._repeat));\n    };\n\n    return StripeMaterialProperty;\n});\n","define([\n        '../Core/Cartesian3',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/Ellipsoid',\n        '../Core/Event',\n        '../Core/Matrix3',\n        '../Core/Quaternion',\n        '../Core/Transforms',\n        './Property',\n        './VelocityVectorProperty'\n    ], function(\n        Cartesian3,\n        defaultValue,\n        defined,\n        defineProperties,\n        Ellipsoid,\n        Event,\n        Matrix3,\n        Quaternion,\n        Transforms,\n        Property,\n        VelocityVectorProperty) {\n    'use strict';\n\n    /**\n     * A {@link Property} which evaluates to a {@link Quaternion} rotation\n     * based on the velocity of the provided {@link PositionProperty}.\n     *\n     * @alias VelocityOrientationProperty\n     * @constructor\n     *\n     * @param {Property} [position] The position property used to compute the orientation.\n     * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid used to determine which way is up.\n     *\n     * @example\n     * //Create an entity with position and orientation.\n     * var position = new Cesium.SampledProperty();\n     * position.addSamples(...);\n     * var entity = viewer.entities.add({\n     *   position : position,\n     *   orientation : new Cesium.VelocityOrientationProperty(position)\n     * }));\n     */\n    function VelocityOrientationProperty(position, ellipsoid) {\n        this._velocityVectorProperty = new VelocityVectorProperty(position, true);\n        this._subscription = undefined;\n        this._ellipsoid = undefined;\n        this._definitionChanged = new Event();\n\n        this.ellipsoid = defaultValue(ellipsoid, Ellipsoid.WGS84);\n\n        var that = this;\n        this._velocityVectorProperty.definitionChanged.addEventListener(function() {\n            that._definitionChanged.raiseEvent(that);\n        });\n    }\n\n    defineProperties(VelocityOrientationProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._velocityVectorProperty);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the position property used to compute orientation.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Property}\n         */\n        position : {\n            get : function() {\n                return this._velocityVectorProperty.position;\n            },\n            set : function(value) {\n                this._velocityVectorProperty.position = value;\n            }\n        },\n        /**\n         * Gets or sets the ellipsoid used to determine which way is up.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Property}\n         */\n        ellipsoid : {\n            get : function() {\n                return this._ellipsoid;\n            },\n            set : function(value) {\n                var oldValue = this._ellipsoid;\n                if (oldValue !== value) {\n                    this._ellipsoid = value;\n                    this._definitionChanged.raiseEvent(this);\n                }\n            }\n        }\n    });\n\n    var positionScratch = new Cartesian3();\n    var velocityScratch = new Cartesian3();\n    var rotationScratch = new Matrix3();\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} [time] The time for which to retrieve the value.\n     * @param {Quaternion} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Quaternion} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    VelocityOrientationProperty.prototype.getValue = function(time, result) {\n        var velocity = this._velocityVectorProperty._getValue(time, velocityScratch, positionScratch);\n\n        if (!defined(velocity)) {\n            return undefined;\n        }\n\n        Transforms.rotationMatrixFromPositionVelocity(positionScratch, velocity, this._ellipsoid, rotationScratch);\n        return Quaternion.fromRotationMatrix(rotationScratch, result);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    VelocityOrientationProperty.prototype.equals = function(other) {\n        return this === other ||//\n               (other instanceof VelocityOrientationProperty &&\n                Property.equals(this._velocityVectorProperty, other._velocityVectorProperty) &&\n                (this._ellipsoid === other._ellipsoid ||\n                 this._ellipsoid.equals(other._ellipsoid)));\n    };\n\n    return VelocityOrientationProperty;\n});\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (root['Autolinker'] = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Autolinker'] = factory();\n  }\n}(this, function () {\n\n/*!\n * Autolinker.js\n * 0.17.1\n *\n * Copyright(c) 2015 Gregory Jacobs <greg@greg-jacobs.com>\n * MIT Licensed. http-colon-slashslash www.opensource.org/licenses/mit-license.php\n *\n * https-colon-slashslash github.com/gregjacobs/Autolinker.js\n */\n/**\n * @class Autolinker\n * @extends Object\n *\n * Utility class used to process a given string of text, and wrap the matches in\n * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n *\n * Any of the configuration options may be provided in an Object (map) provided\n * to the Autolinker constructor, which will configure how the {@link #link link()}\n * method will process the links.\n *\n * For example:\n *\n *     var autolinker = new Autolinker( {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *\n *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n *     // produces: 'Joe went to <a href=\"http-colon-slashslash www.yahoo.com\">yahoo.com</a>'\n *\n *\n * The {@link #static-link static link()} method may also be used to inline options into a single call, which may\n * be more convenient for one-off uses. For example:\n *\n *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *     // produces: 'Joe went to <a href=\"http-colon-slashslash www.yahoo.com\">yahoo.com</a>'\n *\n *\n * ## Custom Replacements of Links\n *\n * If the configuration options do not provide enough flexibility, a {@link #replaceFn}\n * may be provided to fully customize the output of Autolinker. This function is\n * called once for each URL/Email/Phone#/Twitter Handle/Hashtag match that is\n * encountered.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Twitter Handles, and Hashtags\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( autolinker, match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n *                         var tag = autolinker.getTagBuilder().build( match );  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n *                         tag.setAttr( 'rel', 'nofollow' );\n *                         tag.addClass( 'external-link' );\n *\n *                         return tag;\n *\n *                     } else {\n *                         return true;  // let Autolinker perform its normal anchor tag replacement\n *                     }\n *\n *                 case 'email' :\n *                     var email = match.getEmail();\n *                     console.log( \"email: \", email );\n *\n *                     if( email === \"my@own.address\" ) {\n *                         return false;  // don't auto-link this particular email address; leave as-is\n *                     } else {\n *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n *                     }\n *\n *                 case 'phone' :\n *                     var phoneNumber = match.getPhoneNumber();\n *                     console.log( phoneNumber );\n *\n *                     return '<a href=\"http-colon-slashslash newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';\n *\n *                 case 'twitter' :\n *                     var twitterHandle = match.getTwitterHandle();\n *                     console.log( twitterHandle );\n *\n *                     return '<a href=\"http-colon-slashslash newplace.to.link.twitter.handles.to/\">' + twitterHandle + '</a>';\n *\n *                 case 'hashtag' :\n *                     var hashtag = match.getHashtag();\n *                     console.log( hashtag );\n *\n *                     return '<a href=\"http-colon-slashslash newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';\n *             }\n *         }\n *     } );\n *\n *\n * The function may return the following values:\n *\n * - `true` (Boolean): Allow Autolinker to replace the match as it normally would.\n * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n * - Any String: If a string is returned from the function, the string will be used directly as the replacement HTML for\n *   the match.\n * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify an HTML tag before writing out its HTML text.\n *\n * @constructor\n * @param {Object} [config] The configuration options for the Autolinker instance, specified in an Object (map).\n */\nvar Autolinker = function( cfg ) {\n\tAutolinker.Util.assign( this, cfg );  // assign the properties of `cfg` onto the Autolinker instance. Prototype properties will be used for missing configs.\n\n\t// Validate the value of the `hashtag` cfg.\n\tvar hashtag = this.hashtag;\n\tif( hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' ) {\n\t\tthrow new Error( \"invalid `hashtag` cfg - see docs\" );\n\t}\n};\n\nAutolinker.prototype = {\n\tconstructor : Autolinker,  // fix constructor property\n\n\t/**\n\t * @cfg {Boolean} urls\n\t *\n\t * `true` if miscellaneous URLs should be automatically linked, `false` if they should not be.\n\t */\n\turls : true,\n\n\t/**\n\t * @cfg {Boolean} email\n\t *\n\t * `true` if email addresses should be automatically linked, `false` if they should not be.\n\t */\n\temail : true,\n\n\t/**\n\t * @cfg {Boolean} twitter\n\t *\n\t * `true` if Twitter handles (\"@example\") should be automatically linked, `false` if they should not be.\n\t */\n\ttwitter : true,\n\n\t/**\n\t * @cfg {Boolean} phone\n\t *\n\t * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked, `false` if they should not be.\n\t */\n\tphone: true,\n\n\t/**\n\t * @cfg {Boolean/String} hashtag\n\t *\n\t * A string for the service name to have hashtags (ex: \"#myHashtag\")\n\t * auto-linked to. The currently-supported values are:\n\t *\n\t * - 'twitter'\n\t * - 'facebook'\n\t *\n\t * Pass `false` to skip auto-linking of hashtags.\n\t */\n\thashtag : false,\n\n\t/**\n\t * @cfg {Boolean} newWindow\n\t *\n\t * `true` if the links should open in a new window, `false` otherwise.\n\t */\n\tnewWindow : true,\n\n\t/**\n\t * @cfg {Boolean} stripPrefix\n\t *\n\t * `true` if 'http-colon-slashslash ' or 'https-colon-slashslash ' and/or the 'www.' should be stripped\n\t * from the beginning of URL links' text, `false` otherwise.\n\t */\n\tstripPrefix : true,\n\n\t/**\n\t * @cfg {Number} truncate\n\t *\n\t * A number for how many characters long matched text should be truncated to inside the text of\n\t * a link. If the matched text is over this number of characters, it will be truncated to this length by\n\t * adding a two period ellipsis ('..') to the end of the string.\n\t *\n\t * For example: A url like 'http-colon-slashslash www.yahoo.com/some/long/path/to/a/file' truncated to 25 characters might look\n\t * something like this: 'yahoo.com/some/long/pat..'\n\t */\n\ttruncate : undefined,\n\n\t/**\n\t * @cfg {String} className\n\t *\n\t * A CSS class name to add to the generated links. This class will be added to all links, as well as this class\n\t * plus match suffixes for styling url/email/phone/twitter/hashtag links differently.\n\t *\n\t * For example, if this config is provided as \"myLink\", then:\n\t *\n\t * - URL links will have the CSS classes: \"myLink myLink-url\"\n\t * - Email links will have the CSS classes: \"myLink myLink-email\", and\n\t * - Twitter links will have the CSS classes: \"myLink myLink-twitter\"\n\t * - Phone links will have the CSS classes: \"myLink myLink-phone\"\n\t * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"\n\t */\n\tclassName : \"\",\n\n\t/**\n\t * @cfg {Function} replaceFn\n\t *\n\t * A function to individually process each match found in the input string.\n\t *\n\t * See the class's description for usage.\n\t *\n\t * This function is called with the following parameters:\n\t *\n\t * @cfg {Autolinker} replaceFn.autolinker The Autolinker instance, which may be used to retrieve child objects from (such\n\t *   as the instance's {@link #getTagBuilder tag builder}).\n\t * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which can be used to retrieve information about the\n\t *   match that the `replaceFn` is currently processing. See {@link Autolinker.match.Match} subclasses for details.\n\t */\n\n\n\t/**\n\t * @private\n\t * @property {Autolinker.htmlParser.HtmlParser} htmlParser\n\t *\n\t * The HtmlParser instance used to skip over HTML tags, while finding text nodes to process. This is lazily instantiated\n\t * in the {@link #getHtmlParser} method.\n\t */\n\thtmlParser : undefined,\n\n\t/**\n\t * @private\n\t * @property {Autolinker.matchParser.MatchParser} matchParser\n\t *\n\t * The MatchParser instance used to find matches in the text nodes of an input string passed to\n\t * {@link #link}. This is lazily instantiated in the {@link #getMatchParser} method.\n\t */\n\tmatchParser : undefined,\n\n\t/**\n\t * @private\n\t * @property {Autolinker.AnchorTagBuilder} tagBuilder\n\t *\n\t * The AnchorTagBuilder instance used to build match replacement anchor tags. Note: this is lazily instantiated\n\t * in the {@link #getTagBuilder} method.\n\t */\n\ttagBuilder : undefined,\n\n\t/**\n\t * Automatically links URLs, Email addresses, Phone numbers, Twitter\n\t * handles, and Hashtags found in the given chunk of HTML. Does not link\n\t * URLs found within HTML tags.\n\t *\n\t * For instance, if given the text: `You should go to http-colon-slashslash www.yahoo.com`,\n\t * then the result will be `You should go to\n\t * &lt;a href=\"http-colon-slashslash www.yahoo.com\"&gt;http-colon-slashslash www.yahoo.com&lt;/a&gt;`\n\t *\n\t * This method finds the text around any HTML elements in the input\n\t * `textOrHtml`, which will be the text that is processed. Any original HTML\n\t * elements will be left as-is, as well as the text that is already wrapped\n\t * in anchor (&lt;a&gt;) tags.\n\t *\n\t * @param {String} textOrHtml The HTML or text to autolink matches within\n\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n\t *   {@link #twitter}, and {@link #hashtag} options are enabled).\n\t * @return {String} The HTML, with matches automatically linked.\n\t */\n\tlink : function( textOrHtml ) {\n\t\tvar htmlParser = this.getHtmlParser(),\n\t\t    htmlNodes = htmlParser.parse( textOrHtml ),\n\t\t    anchorTagStackCount = 0,  // used to only process text around anchor tags, and any inner text/html they may have\n\t\t    resultHtml = [];\n\n\t\tfor( var i = 0, len = htmlNodes.length; i < len; i++ ) {\n\t\t\tvar node = htmlNodes[ i ],\n\t\t\t    nodeType = node.getType(),\n\t\t\t    nodeText = node.getText();\n\n\t\t\tif( nodeType === 'element' ) {\n\t\t\t\t// Process HTML nodes in the input `textOrHtml`\n\t\t\t\tif( node.getTagName() === 'a' ) {\n\t\t\t\t\tif( !node.isClosing() ) {  // it's the start <a> tag\n\t\t\t\t\t\tanchorTagStackCount++;\n\t\t\t\t\t} else {   // it's the end </a> tag\n\t\t\t\t\t\tanchorTagStackCount = Math.max( anchorTagStackCount - 1, 0 );  // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresultHtml.push( nodeText );  // now add the text of the tag itself verbatim\n\n\t\t\t} else if( nodeType === 'entity' || nodeType === 'comment' ) {\n\t\t\t\tresultHtml.push( nodeText );  // append HTML entity nodes (such as '&nbsp;') or HTML comments (such as '<!-- Comment -->') verbatim\n\n\t\t\t} else {\n\t\t\t\t// Process text nodes in the input `textOrHtml`\n\t\t\t\tif( anchorTagStackCount === 0 ) {\n\t\t\t\t\t// If we're not within an <a> tag, process the text node to linkify\n\t\t\t\t\tvar linkifiedStr = this.linkifyStr( nodeText );\n\t\t\t\t\tresultHtml.push( linkifiedStr );\n\n\t\t\t\t} else {\n\t\t\t\t\t// `text` is within an <a> tag, simply append the text - we do not want to autolink anything\n\t\t\t\t\t// already within an <a>...</a> tag\n\t\t\t\t\tresultHtml.push( nodeText );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn resultHtml.join( \"\" );\n\t},\n\n\t/**\n\t * Process the text that lies in between HTML tags, performing the anchor\n\t * tag replacements for the matches, and returns the string with the\n\t * replacements made.\n\t *\n\t * This method does the actual wrapping of matches with anchor tags.\n\t *\n\t * @private\n\t * @param {String} str The string of text to auto-link.\n\t * @return {String} The text with anchor tags auto-filled.\n\t */\n\tlinkifyStr : function( str ) {\n\t\treturn this.getMatchParser().replace( str, this.createMatchReturnVal, this );\n\t},\n\n\n\t/**\n\t * Creates the return string value for a given match in the input string,\n\t * for the {@link #linkifyStr} method.\n\t *\n\t * This method handles the {@link #replaceFn}, if one was provided.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match} match The Match object that represents the match.\n\t * @return {String} The string that the `match` should be replaced with. This is usually the anchor tag string, but\n\t *   may be the `matchStr` itself if the match is not to be replaced.\n\t */\n\tcreateMatchReturnVal : function( match ) {\n\t\t// Handle a custom `replaceFn` being provided\n\t\tvar replaceFnResult;\n\t\tif( this.replaceFn ) {\n\t\t\treplaceFnResult = this.replaceFn.call( this, this, match );  // Autolinker instance is the context, and the first arg\n\t\t}\n\n\t\tif( typeof replaceFnResult === 'string' ) {\n\t\t\treturn replaceFnResult;  // `replaceFn` returned a string, use that\n\n\t\t} else if( replaceFnResult === false ) {\n\t\t\treturn match.getMatchedText();  // no replacement for the match\n\n\t\t} else if( replaceFnResult instanceof Autolinker.HtmlTag ) {\n\t\t\treturn replaceFnResult.toAnchorString();\n\n\t\t} else {  // replaceFnResult === true, or no/unknown return value from function\n\t\t\t// Perform Autolinker's default anchor tag generation\n\t\t\tvar tagBuilder = this.getTagBuilder(),\n\t\t\t    anchorTag = tagBuilder.build( match );  // returns an Autolinker.HtmlTag instance\n\n\t\t\treturn anchorTag.toAnchorString();\n\t\t}\n\t},\n\n\n\t/**\n\t * Lazily instantiates and returns the {@link #htmlParser} instance for this Autolinker instance.\n\t *\n\t * @protected\n\t * @return {Autolinker.htmlParser.HtmlParser}\n\t */\n\tgetHtmlParser : function() {\n\t\tvar htmlParser = this.htmlParser;\n\n\t\tif( !htmlParser ) {\n\t\t\thtmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();\n\t\t}\n\n\t\treturn htmlParser;\n\t},\n\n\n\t/**\n\t * Lazily instantiates and returns the {@link #matchParser} instance for this Autolinker instance.\n\t *\n\t * @protected\n\t * @return {Autolinker.matchParser.MatchParser}\n\t */\n\tgetMatchParser : function() {\n\t\tvar matchParser = this.matchParser;\n\n\t\tif( !matchParser ) {\n\t\t\tmatchParser = this.matchParser = new Autolinker.matchParser.MatchParser( {\n\t\t\t\turls        : this.urls,\n\t\t\t\temail       : this.email,\n\t\t\t\ttwitter     : this.twitter,\n\t\t\t\tphone       : this.phone,\n\t\t\t\thashtag     : this.hashtag,\n\t\t\t\tstripPrefix : this.stripPrefix\n\t\t\t} );\n\t\t}\n\n\t\treturn matchParser;\n\t},\n\n\n\t/**\n\t * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it\n\t * if it does not yet exist.\n\t *\n\t * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that\n\t * Autolinker would normally generate, and then allow for modifications before returning it. For example:\n\t *\n\t *     var html = Autolinker.link( \"Test google.com\", {\n\t *         replaceFn : function( autolinker, match ) {\n\t *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n\t *             tag.setAttr( 'rel', 'nofollow' );\n\t *\n\t *             return tag;\n\t *         }\n\t *     } );\n\t *\n\t *     // generated html:\n\t *     //   Test <a href=\"http-colon-slashslash google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n\t *\n\t * @return {Autolinker.AnchorTagBuilder}\n\t */\n\tgetTagBuilder : function() {\n\t\tvar tagBuilder = this.tagBuilder;\n\n\t\tif( !tagBuilder ) {\n\t\t\ttagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder( {\n\t\t\t\tnewWindow   : this.newWindow,\n\t\t\t\ttruncate    : this.truncate,\n\t\t\t\tclassName   : this.className\n\t\t\t} );\n\t\t}\n\n\t\treturn tagBuilder;\n\t}\n\n};\n\n\n/**\n * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\n * and Hashtags found in the given chunk of HTML. Does not link URLs found\n * within HTML tags.\n *\n * For instance, if given the text: `You should go to http-colon-slashslash www.yahoo.com`,\n * then the result will be `You should go to &lt;a href=\"http-colon-slashslash www.yahoo.com\"&gt;http-colon-slashslash www.yahoo.com&lt;/a&gt;`\n *\n * Example:\n *\n *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n *     // Produces: \"Go to <a href=\"http-colon-slashslash google.com\">google.com</a>\"\n *\n * @static\n * @param {String} textOrHtml The HTML or text to find matches within (depending\n *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #twitter},\n *   and {@link #hashtag} options are enabled).\n * @param {Object} [options] Any of the configuration options for the Autolinker\n *   class, specified in an Object (map). See the class description for an\n *   example call.\n * @return {String} The HTML text, with matches automatically linked.\n */\nAutolinker.link = function( textOrHtml, options ) {\n\tvar autolinker = new Autolinker( options );\n\treturn autolinker.link( textOrHtml );\n};\n\n\n// Autolinker Namespaces\nAutolinker.match = {};\nAutolinker.htmlParser = {};\nAutolinker.matchParser = {};\n\n/*global Autolinker */\n/*jshint eqnull:true, boss:true */\n/**\n * @class Autolinker.Util\n * @singleton\n *\n * A few utility methods for Autolinker.\n */\nAutolinker.Util = {\n\n\t/**\n\t * @property {Function} abstractMethod\n\t *\n\t * A function object which represents an abstract method.\n\t */\n\tabstractMethod : function() { throw \"abstract\"; },\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} trimRegex\n\t *\n\t * The regular expression used to trim the leading and trailing whitespace\n\t * from a string.\n\t */\n\ttrimRegex : /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\n\t/**\n\t * Assigns (shallow copies) the properties of `src` onto `dest`.\n\t *\n\t * @param {Object} dest The destination object.\n\t * @param {Object} src The source object.\n\t * @return {Object} The destination object (`dest`)\n\t */\n\tassign : function( dest, src ) {\n\t\tfor( var prop in src ) {\n\t\t\tif( src.hasOwnProperty( prop ) ) {\n\t\t\t\tdest[ prop ] = src[ prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn dest;\n\t},\n\n\n\t/**\n\t * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.\n\t *\n\t * @param {Function} superclass The constructor function for the superclass.\n\t * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the\n\t *   special property `constructor`, which will be used as the new subclass's constructor function.\n\t * @return {Function} The new subclass function.\n\t */\n\textend : function( superclass, protoProps ) {\n\t\tvar superclassProto = superclass.prototype;\n\n\t\tvar F = function() {};\n\t\tF.prototype = superclassProto;\n\n\t\tvar subclass;\n\t\tif( protoProps.hasOwnProperty( 'constructor' ) ) {\n\t\t\tsubclass = protoProps.constructor;\n\t\t} else {\n\t\t\tsubclass = function() { superclassProto.constructor.apply( this, arguments ); };\n\t\t}\n\n\t\tvar subclassProto = subclass.prototype = new F();  // set up prototype chain\n\t\tsubclassProto.constructor = subclass;  // fix constructor property\n\t\tsubclassProto.superclass = superclassProto;\n\n\t\tdelete protoProps.constructor;  // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there\n\t\tAutolinker.Util.assign( subclassProto, protoProps );\n\n\t\treturn subclass;\n\t},\n\n\n\t/**\n\t * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n\t * end of the string (by default, two periods: '..'). If the `str` length does not exceed\n\t * `len`, the string will be returned unchanged.\n\t *\n\t * @param {String} str The string to truncate and add an ellipsis to.\n\t * @param {Number} truncateLen The length to truncate the string at.\n\t * @param {String} [ellipsisChars=..] The ellipsis character(s) to add to the end of `str`\n\t *   when truncated. Defaults to '..'\n\t */\n\tellipsis : function( str, truncateLen, ellipsisChars ) {\n\t\tif( str.length > truncateLen ) {\n\t\t\tellipsisChars = ( ellipsisChars == null ) ? '..' : ellipsisChars;\n\t\t\tstr = str.substring( 0, truncateLen - ellipsisChars.length ) + ellipsisChars;\n\t\t}\n\t\treturn str;\n\t},\n\n\n\t/**\n\t * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n\t *\n\t * @param {Array} arr The array to find an element of.\n\t * @param {*} element The element to find in the array, and return the index of.\n\t * @return {Number} The index of the `element`, or -1 if it was not found.\n\t */\n\tindexOf : function( arr, element ) {\n\t\tif( Array.prototype.indexOf ) {\n\t\t\treturn arr.indexOf( element );\n\n\t\t} else {\n\t\t\tfor( var i = 0, len = arr.length; i < len; i++ ) {\n\t\t\t\tif( arr[ i ] === element ) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t},\n\n\n\n\t/**\n\t * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n\t * with a regular expression that contains capturing parenthesis.\n\t *\n\t * For example:\n\t *\n\t *     // Modern browsers:\n\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n\t *\n\t *     // Old IE (including IE8):\n\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n\t *\n\t * This method emulates the functionality of modern browsers for the old IE case.\n\t *\n\t * @param {String} str The string to split.\n\t * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n\t *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the\n\t *   description of this method.\n\t *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n\t *   Note #2: for simplicity's sake, the regular expression does not need\n\t *   to contain capturing parenthesis - it will be assumed that any match has them.\n\t * @return {String[]} The split array of strings, with the splitting character(s) included.\n\t */\n\tsplitAndCapture : function( str, splitRegex ) {\n\t\tif( !splitRegex.global ) throw new Error( \"`splitRegex` must have the 'g' flag set\" );\n\n\t\tvar result = [],\n\t\t    lastIdx = 0,\n\t\t    match;\n\n\t\twhile( match = splitRegex.exec( str ) ) {\n\t\t\tresult.push( str.substring( lastIdx, match.index ) );\n\t\t\tresult.push( match[ 0 ] );  // push the splitting char(s)\n\n\t\t\tlastIdx = match.index + match[ 0 ].length;\n\t\t}\n\t\tresult.push( str.substring( lastIdx ) );\n\n\t\treturn result;\n\t},\n\n\n\t/**\n\t * Trims the leading and trailing whitespace from a string.\n\t *\n\t * @param {String} str The string to trim.\n\t * @return {String}\n\t */\n\ttrim : function( str ) {\n\t\treturn str.replace( this.trimRegex, '' );\n\t}\n\n};\n/*global Autolinker */\n/*jshint boss:true */\n/**\n * @class Autolinker.HtmlTag\n * @extends Object\n *\n * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n *\n * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n *\n * ## Examples\n *\n * Example instantiation:\n *\n *     var tag = new Autolinker.HtmlTag( {\n *         tagName : 'a',\n *         attrs   : { 'href': 'http-colon-slashslash google.com', 'class': 'external-link' },\n *         innerHtml : 'Google'\n *     } );\n *\n *     tag.toAnchorString();  // <a href=\"http-colon-slashslash google.com\" class=\"external-link\">Google</a>\n *\n *     // Individual accessor methods\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http-colon-slashslash google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *\n * Using mutator methods (which may be used in combination with instantiation config properties):\n *\n *     var tag = new Autolinker.HtmlTag();\n *     tag.setTagName( 'a' );\n *     tag.setAttr( 'href', 'http-colon-slashslash google.com' );\n *     tag.addClass( 'external-link' );\n *     tag.setInnerHtml( 'Google' );\n *\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http-colon-slashslash google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *     tag.toAnchorString();  // <a href=\"http-colon-slashslash google.com\" class=\"external-link\">Google</a>\n *\n *\n * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( autolinker, match ) {\n *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http-colon-slashslash google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n *\n *\n * ## Example use with a new tag for the replacement\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( autolinker, match ) {\n *             var tag = new Autolinker.HtmlTag( {\n *                 tagName : 'button',\n *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n *             } );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <button title=\"Load URL: http-colon-slashslash google.com\">Load URL: google.com</button>\n */\nAutolinker.HtmlTag = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {String} tagName\n\t *\n\t * The tag name. Ex: 'a', 'button', etc.\n\t *\n\t * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}\n\t * is executed.\n\t */\n\n\t/**\n\t * @cfg {Object.<String, String>} attrs\n\t *\n\t * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n\t * values are the attribute values.\n\t */\n\n\t/**\n\t * @cfg {String} innerHtml\n\t *\n\t * The inner HTML for the tag.\n\t *\n\t * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym\n\t * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}\n\t * if you prefer, but this one is recommended.\n\t */\n\n\t/**\n\t * @cfg {String} innerHTML\n\t *\n\t * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version\n\t * for acronym names.\n\t */\n\n\n\t/**\n\t * @protected\n\t * @property {RegExp} whitespaceRegex\n\t *\n\t * Regular expression used to match whitespace in a string of CSS classes.\n\t */\n\twhitespaceRegex : /\\s+/,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\n\t\tthis.innerHtml = this.innerHtml || this.innerHTML;  // accept either the camelCased form or the fully capitalized acronym\n\t},\n\n\n\t/**\n\t * Sets the tag name that will be used to generate the tag with.\n\t *\n\t * @param {String} tagName\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetTagName : function( tagName ) {\n\t\tthis.tagName = tagName;\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the tag name.\n\t *\n\t * @return {String}\n\t */\n\tgetTagName : function() {\n\t\treturn this.tagName || \"\";\n\t},\n\n\n\t/**\n\t * Sets an attribute on the HtmlTag.\n\t *\n\t * @param {String} attrName The attribute name to set.\n\t * @param {String} attrValue The attribute value to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetAttr : function( attrName, attrValue ) {\n\t\tvar tagAttrs = this.getAttrs();\n\t\ttagAttrs[ attrName ] = attrValue;\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n\t *\n\t * @param {String} name The attribute name to retrieve.\n\t * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n\t */\n\tgetAttr : function( attrName ) {\n\t\treturn this.getAttrs()[ attrName ];\n\t},\n\n\n\t/**\n\t * Sets one or more attributes on the HtmlTag.\n\t *\n\t * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetAttrs : function( attrs ) {\n\t\tvar tagAttrs = this.getAttrs();\n\t\tAutolinker.Util.assign( tagAttrs, attrs );\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the attributes Object (map) for the HtmlTag.\n\t *\n\t * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n\t */\n\tgetAttrs : function() {\n\t\treturn this.attrs || ( this.attrs = {} );\n\t},\n\n\n\t/**\n\t * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetClass : function( cssClass ) {\n\t\treturn this.setAttr( 'class', cssClass );\n\t},\n\n\n\t/**\n\t * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to add.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\taddClass : function( cssClass ) {\n\t\tvar classAttr = this.getClass(),\n\t\t    whitespaceRegex = this.whitespaceRegex,\n\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below\n\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),\n\t\t    newClasses = cssClass.split( whitespaceRegex ),\n\t\t    newClass;\n\n\t\twhile( newClass = newClasses.shift() ) {\n\t\t\tif( indexOf( classes, newClass ) === -1 ) {\n\t\t\t\tclasses.push( newClass );\n\t\t\t}\n\t\t}\n\n\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Convenience method to remove one or more CSS classes from the HtmlTag.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to remove.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tremoveClass : function( cssClass ) {\n\t\tvar classAttr = this.getClass(),\n\t\t    whitespaceRegex = this.whitespaceRegex,\n\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below\n\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),\n\t\t    removeClasses = cssClass.split( whitespaceRegex ),\n\t\t    removeClass;\n\n\t\twhile( classes.length && ( removeClass = removeClasses.shift() ) ) {\n\t\t\tvar idx = indexOf( classes, removeClass );\n\t\t\tif( idx !== -1 ) {\n\t\t\t\tclasses.splice( idx, 1 );\n\t\t\t}\n\t\t}\n\n\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n\t * there are multiple.\n\t *\n\t * @return {String}\n\t */\n\tgetClass : function() {\n\t\treturn this.getAttrs()[ 'class' ] || \"\";\n\t},\n\n\n\t/**\n\t * Convenience method to check if the tag has a CSS class or not.\n\t *\n\t * @param {String} cssClass The CSS class to check for.\n\t * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n\t */\n\thasClass : function( cssClass ) {\n\t\treturn ( ' ' + this.getClass() + ' ' ).indexOf( ' ' + cssClass + ' ' ) !== -1;\n\t},\n\n\n\t/**\n\t * Sets the inner HTML for the tag.\n\t *\n\t * @param {String} html The inner HTML to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetInnerHtml : function( html ) {\n\t\tthis.innerHtml = html;\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the inner HTML for the tag.\n\t *\n\t * @return {String}\n\t */\n\tgetInnerHtml : function() {\n\t\treturn this.innerHtml || \"\";\n\t},\n\n\n\t/**\n\t * Override of superclass method used to generate the HTML string for the tag.\n\t *\n\t * @return {String}\n\t */\n\ttoAnchorString : function() {\n\t\tvar tagName = this.getTagName(),\n\t\t    attrsStr = this.buildAttrsStr();\n\n\t\tattrsStr = ( attrsStr ) ? ' ' + attrsStr : '';  // prepend a space if there are actually attributes\n\n\t\treturn [ '<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>' ].join( \"\" );\n\t},\n\n\n\t/**\n\t * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate\n\t * the stringified HtmlTag.\n\t *\n\t * @protected\n\t * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n\t */\n\tbuildAttrsStr : function() {\n\t\tif( !this.attrs ) return \"\";  // no `attrs` Object (map) has been set, return empty string\n\n\t\tvar attrs = this.getAttrs(),\n\t\t    attrsArr = [];\n\n\t\tfor( var prop in attrs ) {\n\t\t\tif( attrs.hasOwnProperty( prop ) ) {\n\t\t\t\tattrsArr.push( prop + '=\"' + attrs[ prop ] + '\"' );\n\t\t\t}\n\t\t}\n\t\treturn attrsArr.join( \" \" );\n\t}\n\n} );\n\n/*global Autolinker */\n/*jshint sub:true */\n/**\n * @protected\n * @class Autolinker.AnchorTagBuilder\n * @extends Object\n *\n * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is found.\n *\n * Normally this class is instantiated, configured, and used internally by an {@link Autolinker} instance, but may\n * actually be retrieved in a {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag} instances\n * which may be modified before returning from the {@link Autolinker#replaceFn replaceFn}. For example:\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( autolinker, match ) {\n *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http-colon-slashslash google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n */\nAutolinker.AnchorTagBuilder = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Boolean} newWindow\n\t * @inheritdoc Autolinker#newWindow\n\t */\n\n\t/**\n\t * @cfg {Number} truncate\n\t * @inheritdoc Autolinker#truncate\n\t */\n\n\t/**\n\t * @cfg {String} className\n\t * @inheritdoc Autolinker#className\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\t},\n\n\n\t/**\n\t * Generates the actual anchor (&lt;a&gt;) tag to use in place of the\n\t * matched text, via its `match` object.\n\t *\n\t * @param {Autolinker.match.Match} match The Match instance to generate an\n\t *   anchor tag from.\n\t * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n\t */\n\tbuild : function( match ) {\n\t\tvar tag = new Autolinker.HtmlTag( {\n\t\t\ttagName   : 'a',\n\t\t\tattrs     : this.createAttrs( match.getType(), match.getAnchorHref() ),\n\t\t\tinnerHtml : this.processAnchorText( match.getAnchorText() )\n\t\t} );\n\n\t\treturn tag;\n\t},\n\n\n\t/**\n\t * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)\n\t *   tag being generated.\n\t *\n\t * @protected\n\t * @param {\"url\"/\"email\"/\"phone\"/\"twitter\"/\"hashtag\"} matchType The type of\n\t *   match that an anchor tag is being generated for.\n\t * @param {String} href The href for the anchor tag.\n\t * @return {Object} A key/value Object (map) of the anchor tag's attributes.\n\t */\n\tcreateAttrs : function( matchType, anchorHref ) {\n\t\tvar attrs = {\n\t\t\t'href' : anchorHref  // we'll always have the `href` attribute\n\t\t};\n\n\t\tvar cssClass = this.createCssClass( matchType );\n\t\tif( cssClass ) {\n\t\t\tattrs[ 'class' ] = cssClass;\n\t\t}\n\t\tif( this.newWindow ) {\n\t\t\tattrs[ 'target' ] = \"_blank\";\n\t\t}\n\n\t\treturn attrs;\n\t},\n\n\n\t/**\n\t * Creates the CSS class that will be used for a given anchor tag, based on\n\t * the `matchType` and the {@link #className} config.\n\t *\n\t * @private\n\t * @param {\"url\"/\"email\"/\"phone\"/\"twitter\"/\"hashtag\"} matchType The type of\n\t *   match that an anchor tag is being generated for.\n\t * @return {String} The CSS class string for the link. Example return:\n\t *   \"myLink myLink-url\". If no {@link #className} was configured, returns\n\t *   an empty string.\n\t */\n\tcreateCssClass : function( matchType ) {\n\t\tvar className = this.className;\n\n\t\tif( !className )\n\t\t\treturn \"\";\n\t\telse\n\t\t\treturn className + \" \" + className + \"-\" + matchType;  // ex: \"myLink myLink-url\", \"myLink myLink-email\", \"myLink myLink-phone\", \"myLink myLink-twitter\", or \"myLink myLink-hashtag\"\n\t},\n\n\n\t/**\n\t * Processes the `anchorText` by truncating the text according to the\n\t * {@link #truncate} config.\n\t *\n\t * @private\n\t * @param {String} anchorText The anchor tag's text (i.e. what will be\n\t *   displayed).\n\t * @return {String} The processed `anchorText`.\n\t */\n\tprocessAnchorText : function( anchorText ) {\n\t\tanchorText = this.doTruncate( anchorText );\n\n\t\treturn anchorText;\n\t},\n\n\n\t/**\n\t * Performs the truncation of the `anchorText`, if the `anchorText` is\n\t * longer than the {@link #truncate} option. Truncates the text to 2\n\t * characters fewer than the {@link #truncate} option, and adds \"..\" to the\n\t * end.\n\t *\n\t * @private\n\t * @param {String} text The anchor tag's text (i.e. what will be displayed).\n\t * @return {String} The truncated anchor text.\n\t */\n\tdoTruncate : function( anchorText ) {\n\t\treturn Autolinker.Util.ellipsis( anchorText, this.truncate || Number.POSITIVE_INFINITY );\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @private\n * @class Autolinker.htmlParser.HtmlParser\n * @extends Object\n *\n * An HTML parser implementation which simply walks an HTML string and returns an array of\n * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string.\n *\n * Autolinker uses this to only link URLs/emails/Twitter handles within text nodes, effectively ignoring / \"walking\n * around\" HTML tags.\n */\nAutolinker.htmlParser.HtmlParser = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @private\n\t * @property {RegExp} htmlRegex\n\t *\n\t * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and\n\t * attribute names, as specified by http-colon-slashslash www.w3.org/TR/html-markup/syntax.html.\n\t *\n\t * Capturing groups:\n\t *\n\t * 1. The \"!DOCTYPE\" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.\n\t * 2. If it is an end tag, this group will have the '/'.\n\t * 3. If it is a comment tag, this group will hold the comment text (i.e.\n\t *    the text inside the `&lt;!--` and `--&gt;`.\n\t * 4. The tag name for all tags (other than the &lt;!DOCTYPE&gt; tag)\n\t */\n\thtmlRegex : (function() {\n\t\tvar commentTagRegex = /!--([\\s\\S]+?)--/,\n\t\t    tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,\n\t\t    attrNameRegex = /[^\\s\\0\"'>\\/=\\x01-\\x1F\\x7F]+/,   // the unicode range accounts for excluding control chars, and the delete char\n\t\t    attrValueRegex = /(?:\"[^\"]*?\"|'[^']*?'|[^'\"=<>`\\s]+)/, // double quoted, single quoted, or unquoted attribute values\n\t\t    nameEqualsValueRegex = attrNameRegex.source + '(?:\\\\s*=\\\\s*' + attrValueRegex.source + ')?';  // optional '=[value]'\n\n\t\treturn new RegExp( [\n\t\t\t// for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n\t\t\t'(?:',\n\t\t\t\t'<(!DOCTYPE)',  // *** Capturing Group 1 - If it's a doctype tag\n\n\t\t\t\t\t// Zero or more attributes following the tag name\n\t\t\t\t\t'(?:',\n\t\t\t\t\t\t'\\\\s+',  // one or more whitespace chars before an attribute\n\n\t\t\t\t\t\t// Either:\n\t\t\t\t\t\t// A. attr=\"value\", or\n\t\t\t\t\t\t// B. \"value\" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n\t\t\t\t\t\t'(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')',\n\t\t\t\t\t')*',\n\t\t\t\t'>',\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t// All other HTML tags (i.e. tags that are not <!DOCTYPE>)\n\t\t\t'(?:',\n\t\t\t\t'<(/)?',  // Beginning of a tag or comment. Either '<' for a start tag, or '</' for an end tag.\n\t\t\t\t          // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.\n\n\t\t\t\t\t'(?:',\n\t\t\t\t\t\tcommentTagRegex.source,  // *** Capturing Group 3 - A Comment Tag's Text\n\n\t\t\t\t\t\t'|',\n\n\t\t\t\t\t\t'(?:',\n\n\t\t\t\t\t\t\t// *** Capturing Group 4 - The tag name\n\t\t\t\t\t\t\t'(' + tagNameRegex.source + ')',\n\n\t\t\t\t\t\t\t// Zero or more attributes following the tag name\n\t\t\t\t\t\t\t'(?:',\n\t\t\t\t\t\t\t\t'\\\\s+',                // one or more whitespace chars before an attribute\n\t\t\t\t\t\t\t\tnameEqualsValueRegex,  // attr=\"value\" (with optional =\"value\" part)\n\t\t\t\t\t\t\t')*',\n\n\t\t\t\t\t\t\t'\\\\s*/?',  // any trailing spaces and optional '/' before the closing '>'\n\n\t\t\t\t\t\t')',\n\t\t\t\t\t')',\n\t\t\t\t'>',\n\t\t\t')'\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\t/**\n\t * @private\n\t * @property {RegExp} htmlCharacterEntitiesRegex\n\t *\n\t * The regular expression that matches common HTML character entities.\n\t *\n\t * Ignoring &amp; as it could be part of a query string -- handling it separately.\n\t */\n\thtmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,\n\n\n\t/**\n\t * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes}\n\t * to represent the HTML structure of the input string.\n\t *\n\t * @param {String} html The HTML to parse.\n\t * @return {Autolinker.htmlParser.HtmlNode[]}\n\t */\n\tparse : function( html ) {\n\t\tvar htmlRegex = this.htmlRegex,\n\t\t    currentResult,\n\t\t    lastIndex = 0,\n\t\t    textAndEntityNodes,\n\t\t    nodes = [];  // will be the result of the method\n\n\t\twhile( ( currentResult = htmlRegex.exec( html ) ) !== null ) {\n\t\t\tvar tagText = currentResult[ 0 ],\n\t\t\t    commentText = currentResult[ 3 ], // if we've matched a comment\n\t\t\t    tagName = currentResult[ 1 ] || currentResult[ 4 ],  // The <!DOCTYPE> tag (ex: \"!DOCTYPE\"), or another tag (ex: \"a\" or \"img\")\n\t\t\t    isClosingTag = !!currentResult[ 2 ],\n\t\t\t    inBetweenTagsText = html.substring( lastIndex, currentResult.index );\n\n\t\t\t// Push TextNodes and EntityNodes for any text found between tags\n\t\t\tif( inBetweenTagsText ) {\n\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( inBetweenTagsText );\n\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );\n\t\t\t}\n\n\t\t\t// Push the CommentNode or ElementNode\n\t\t\tif( commentText ) {\n\t\t\t\tnodes.push( this.createCommentNode( tagText, commentText ) );\n\t\t\t} else {\n\t\t\t\tnodes.push( this.createElementNode( tagText, tagName, isClosingTag ) );\n\t\t\t}\n\n\t\t\tlastIndex = currentResult.index + tagText.length;\n\t\t}\n\n\t\t// Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.\n\t\tif( lastIndex < html.length ) {\n\t\t\tvar text = html.substring( lastIndex );\n\n\t\t\t// Push TextNodes and EntityNodes for any text found between tags\n\t\t\tif( text ) {\n\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( text );\n\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );\n\t\t\t}\n\t\t}\n\n\t\treturn nodes;\n\t},\n\n\n\t/**\n\t * Parses text and HTML entity nodes from a given string. The input string\n\t * should not have any HTML tags (elements) within it.\n\t *\n\t * @private\n\t * @param {String} text The text to parse.\n\t * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to\n\t *   represent the {@link Autolinker.htmlParser.TextNode TextNodes} and\n\t *   {@link Autolinker.htmlParser.EntityNode EntityNodes} found.\n\t */\n\tparseTextAndEntityNodes : function( text ) {\n\t\tvar nodes = [],\n\t\t    textAndEntityTokens = Autolinker.Util.splitAndCapture( text, this.htmlCharacterEntitiesRegex );  // split at HTML entities, but include the HTML entities in the results array\n\n\t\t// Every even numbered token is a TextNode, and every odd numbered token is an EntityNode\n\t\t// For example: an input `text` of \"Test &quot;this&quot; today\" would turn into the\n\t\t//   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]\n\t\tfor( var i = 0, len = textAndEntityTokens.length; i < len; i += 2 ) {\n\t\t\tvar textToken = textAndEntityTokens[ i ],\n\t\t\t    entityToken = textAndEntityTokens[ i + 1 ];\n\n\t\t\tif( textToken ) nodes.push( this.createTextNode( textToken ) );\n\t\t\tif( entityToken ) nodes.push( this.createEntityNode( entityToken ) );\n\t\t}\n\t\treturn nodes;\n\t},\n\n\n\t/**\n\t * Factory method to create an {@link Autolinker.htmlParser.CommentNode CommentNode}.\n\t *\n\t * @private\n\t * @param {String} tagText The full text of the tag (comment) that was\n\t *   matched, including its &lt;!-- and --&gt;.\n\t * @param {String} comment The full text of the comment that was matched.\n\t */\n\tcreateCommentNode : function( tagText, commentText ) {\n\t\treturn new Autolinker.htmlParser.CommentNode( {\n\t\t\ttext: tagText,\n\t\t\tcomment: Autolinker.Util.trim( commentText )\n\t\t} );\n\t},\n\n\n\t/**\n\t * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.\n\t *\n\t * @private\n\t * @param {String} tagText The full text of the tag (element) that was\n\t *   matched, including its attributes.\n\t * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would\n\t *   be passed to this method as \"img\".\n\t * @param {Boolean} isClosingTag `true` if it's a closing tag, false\n\t *   otherwise.\n\t * @return {Autolinker.htmlParser.ElementNode}\n\t */\n\tcreateElementNode : function( tagText, tagName, isClosingTag ) {\n\t\treturn new Autolinker.htmlParser.ElementNode( {\n\t\t\ttext    : tagText,\n\t\t\ttagName : tagName.toLowerCase(),\n\t\t\tclosing : isClosingTag\n\t\t} );\n\t},\n\n\n\t/**\n\t * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.\n\t *\n\t * @private\n\t * @param {String} text The text that was matched for the HTML entity (such\n\t *   as '&amp;nbsp;').\n\t * @return {Autolinker.htmlParser.EntityNode}\n\t */\n\tcreateEntityNode : function( text ) {\n\t\treturn new Autolinker.htmlParser.EntityNode( { text: text } );\n\t},\n\n\n\t/**\n\t * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.\n\t *\n\t * @private\n\t * @param {String} text The text that was matched.\n\t * @return {Autolinker.htmlParser.TextNode}\n\t */\n\tcreateTextNode : function( text ) {\n\t\treturn new Autolinker.htmlParser.TextNode( { text: text } );\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.htmlParser.HtmlNode\n * \n * Represents an HTML node found in an input string. An HTML node is one of the following:\n * \n * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents HTML tags.\n * 2. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text outside or within HTML tags.\n * 3. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents one of the known HTML\n *    entities that Autolinker looks for. This includes common ones such as &amp;quot; and &amp;nbsp;\n */\nAutolinker.htmlParser.HtmlNode = Autolinker.Util.extend( Object, {\n\t\n\t/**\n\t * @cfg {String} text (required)\n\t * \n\t * The original text that was matched for the HtmlNode. \n\t * \n\t * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode}, this will be the tag's\n\t *   text.\n\t * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this will be the text itself.\n\t * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode}, this will be the text of\n\t *   the HTML entity.\n\t */\n\ttext : \"\",\n\t\n\t\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\t},\n\n\t\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t * \n\t * @abstract\n\t * @return {String}\n\t */\n\tgetType : Autolinker.Util.abstractMethod,\n\t\n\t\n\t/**\n\t * Retrieves the {@link #text} for the HtmlNode.\n\t * \n\t * @return {String}\n\t */\n\tgetText : function() {\n\t\treturn this.text;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.CommentNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML comment node that has been parsed by the\n * {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.CommentNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * @cfg {String} comment (required)\n\t *\n\t * The text inside the comment tag. This text is stripped of any leading or\n\t * trailing whitespace.\n\t */\n\tcomment : '',\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'comment';\n\t},\n\n\n\t/**\n\t * Returns the comment inside the comment tag.\n\t *\n\t * @return {String}\n\t */\n\tgetComment : function() {\n\t\treturn this.comment;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.ElementNode\n * @extends Autolinker.htmlParser.HtmlNode\n * \n * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n * \n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.\n */\nAutolinker.htmlParser.ElementNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\t\n\t/**\n\t * @cfg {String} tagName (required)\n\t * \n\t * The name of the tag that was matched.\n\t */\n\ttagName : '',\n\t\n\t/**\n\t * @cfg {Boolean} closing (required)\n\t * \n\t * `true` if the element (tag) is a closing tag, `false` if its an opening tag.\n\t */\n\tclosing : false,\n\n\t\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'element';\n\t},\n\t\n\n\t/**\n\t * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag, returns \"img\".\n\t * \n\t * @return {String}\n\t */\n\tgetTagName : function() {\n\t\treturn this.tagName;\n\t},\n\t\n\t\n\t/**\n\t * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt; returns\n\t * `false`, while &lt;/div&gt; returns `true`.\n\t * \n\t * @return {Boolean}\n\t */\n\tisClosing : function() {\n\t\treturn this.closing;\n\t}\n\t\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.EntityNode\n * @extends Autolinker.htmlParser.HtmlNode\n * \n * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText} method.\n * \n * Note that this class will only be returned from the HtmlParser for the set of checked HTML entity nodes \n * defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}.\n * \n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.\n */\nAutolinker.htmlParser.EntityNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\t\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'entity';\n\t}\n\t\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.TextNode\n * @extends Autolinker.htmlParser.HtmlNode\n * \n * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n * \n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.\n */\nAutolinker.htmlParser.TextNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\t\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'text';\n\t}\n\t\n} );\n/*global Autolinker */\n/**\n * @private\n * @class Autolinker.matchParser.MatchParser\n * @extends Object\n *\n * Used by Autolinker to parse potential matches, given an input string of text.\n *\n * The MatchParser is fed a non-HTML string in order to search for matches.\n * Autolinker first uses the {@link Autolinker.htmlParser.HtmlParser} to \"walk\n * around\" HTML tags, and then the text around the HTML tags is passed into the\n * MatchParser in order to find the actual matches.\n */\nAutolinker.matchParser.MatchParser = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Boolean} urls\n\t * @inheritdoc Autolinker#urls\n\t */\n\turls : true,\n\n\t/**\n\t * @cfg {Boolean} email\n\t * @inheritdoc Autolinker#email\n\t */\n\temail : true,\n\n\t/**\n\t * @cfg {Boolean} twitter\n\t * @inheritdoc Autolinker#twitter\n\t */\n\ttwitter : true,\n\n\t/**\n\t * @cfg {Boolean} phone\n\t * @inheritdoc Autolinker#phone\n\t */\n\tphone: true,\n\n\t/**\n\t * @cfg {Boolean/String} hashtag\n\t * @inheritdoc Autolinker#hashtag\n\t */\n\thashtag : false,\n\n\t/**\n\t * @cfg {Boolean} stripPrefix\n\t * @inheritdoc Autolinker#stripPrefix\n\t */\n\tstripPrefix : true,\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t *\n\t * The regular expression that matches URLs, email addresses, phone #s,\n\t * Twitter handles, and Hashtags.\n\t *\n\t * This regular expression has the following capturing groups:\n\t *\n\t * 1.  Group that is used to determine if there is a Twitter handle match\n\t *     (i.e. \\@someTwitterUser). Simply check for its existence to determine\n\t *     if there is a Twitter handle match. The next couple of capturing\n\t *     groups give information about the Twitter handle match.\n\t * 2.  The whitespace character before the \\@sign in a Twitter handle. This\n\t *     is needed because there are no lookbehinds in JS regular expressions,\n\t *     and can be used to reconstruct the original string in a replace().\n\t * 3.  The Twitter handle itself in a Twitter match. If the match is\n\t *     '@someTwitterUser', the handle is 'someTwitterUser'.\n\t * 4.  Group that matches an email address. Used to determine if the match\n\t *     is an email address, as well as holding the full address. Ex:\n\t *     'me@my.com'\n\t * 5.  Group that matches a URL in the input text. Ex: 'http-colon-slashslash google.com',\n\t *     'www.google.com', or just 'google.com'. This also includes a path,\n\t *     url parameters, or hash anchors. Ex: google.com/path/to/file?q1=1&q2=2#myAnchor\n\t * 6.  Group that matches a protocol URL (i.e. 'http-colon-slashslash google.com'). This is\n\t *     used to match protocol URLs with just a single word, like 'http-colon-slashslash localhost',\n\t *     where we won't double check that the domain name has at least one '.'\n\t *     in it.\n\t * 7.  A protocol-relative ('//') match for the case of a 'www.' prefixed\n\t *     URL. Will be an empty string if it is not a protocol-relative match.\n\t *     We need to know the character before the '//' in order to determine\n\t *     if it is a valid match or the // was in a string we don't want to\n\t *     auto-link.\n\t * 8.  A protocol-relative ('//') match for the case of a known TLD prefixed\n\t *     URL. Will be an empty string if it is not a protocol-relative match.\n\t *     See #6 for more info.\n\t * 9.  Group that is used to determine if there is a phone number match. The\n\t *     next 3 groups give segments of the phone number.\n\t * 10. Group that is used to determine if there is a Hashtag match\n\t *     (i.e. \\#someHashtag). Simply check for its existence to determine if\n\t *     there is a Hashtag match. The next couple of capturing groups give\n\t *     information about the Hashtag match.\n\t * 11. The whitespace character before the #sign in a Hashtag handle. This\n\t *     is needed because there are no look-behinds in JS regular\n\t *     expressions, and can be used to reconstruct the original string in a\n\t *     replace().\n\t * 12. The Hashtag itself in a Hashtag match. If the match is\n\t *     '#someHashtag', the hashtag is 'someHashtag'.\n\t */\n\tmatcherRegex : (function() {\n\t\tvar twitterRegex = /(^|[^\\w])@(\\w{1,15})/,              // For matching a twitter handle. Ex: @gregory_jacobs\n\n\t\t    hashtagRegex = /(^|[^\\w])#(\\w{1,15})/,              // For matching a Hashtag. Ex: #games\n\n\t\t    emailRegex = /(?:[\\-;:&=\\+\\$,\\w\\.]+@)/,             // something@ for email addresses (a.k.a. local-part)\n\t\t    phoneRegex = /(?:\\+?\\d{1,3}[-\\s.])?\\(?\\d{3}\\)?[-\\s.]?\\d{3}[-\\s.]\\d{4}/,  // ex: (123) 456-7890, 123 456 7890, 123-456-7890, etc.\n\t\t    protocolRegex = /(?:[A-Za-z][-.+A-Za-z0-9]+:(?![A-Za-z][-.+A-Za-z0-9]+:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/,  // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n\t\t    wwwRegex = /(?:www\\.)/,                             // starting with 'www.'\n\t\t    domainNameRegex = /[A-Za-z0-9\\.\\-]*[A-Za-z0-9\\-]/,  // anything looking at all like a domain, non-unicode domains, not ending in a period\n\t\t    tldRegex = /\\.(?:international|construction|contractors|enterprises|photography|productions|foundation|immobilien|industries|management|properties|technology|christmas|community|directory|education|equipment|institute|marketing|solutions|vacations|bargains|boutique|builders|catering|cleaning|clothing|computer|democrat|diamonds|graphics|holdings|lighting|partners|plumbing|supplies|training|ventures|academy|careers|company|cruises|domains|exposed|flights|florist|gallery|guitars|holiday|kitchen|neustar|okinawa|recipes|rentals|reviews|shiksha|singles|support|systems|agency|berlin|camera|center|coffee|condos|dating|estate|events|expert|futbol|kaufen|luxury|maison|monash|museum|nagoya|photos|repair|report|social|supply|tattoo|tienda|travel|viajes|villas|vision|voting|voyage|actor|build|cards|cheap|codes|dance|email|glass|house|mango|ninja|parts|photo|shoes|solar|today|tokyo|tools|watch|works|aero|arpa|asia|best|bike|blue|buzz|camp|club|cool|coop|farm|fish|gift|guru|info|jobs|kiwi|kred|land|limo|link|menu|mobi|moda|name|pics|pink|post|qpon|rich|ruhr|sexy|tips|vote|voto|wang|wien|wiki|zone|bar|bid|biz|cab|cat|ceo|com|edu|gov|int|kim|mil|net|onl|org|pro|pub|red|tel|uno|wed|xxx|xyz|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)\\b/,   // match our known top level domains (TLDs)\n\n\t\t    // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n\t\t    // http://blog.codinghorror.com/the-problem-with-urls/\n\t\t    urlSuffixRegex = /[\\-A-Za-z0-9+&@#\\/%=~_()|'$*\\[\\]?!:,.;]*[\\-A-Za-z0-9+&@#\\/%=~_()|'$*\\[\\]]/;\n\n\t\treturn new RegExp( [\n\t\t\t'(',  // *** Capturing group $1, which can be used to check for a twitter handle match. Use group $3 for the actual twitter handle though. $2 may be used to reconstruct the original string in a replace()\n\t\t\t\t// *** Capturing group $2, which matches the whitespace character before the '@' sign (needed because of no lookbehinds), and\n\t\t\t\t// *** Capturing group $3, which matches the actual twitter handle\n\t\t\t\ttwitterRegex.source,\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t'(',  // *** Capturing group $4, which is used to determine an email match\n\t\t\t\temailRegex.source,\n\t\t\t\tdomainNameRegex.source,\n\t\t\t\ttldRegex.source,\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t'(',  // *** Capturing group $5, which is used to match a URL\n\t\t\t\t'(?:', // parens to cover match for protocol (optional), and domain\n\t\t\t\t\t'(',  // *** Capturing group $6, for a protocol-prefixed url (ex: http://google.com)\n\t\t\t\t\t\tprotocolRegex.source,\n\t\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t\t')',\n\n\t\t\t\t\t'|',\n\n\t\t\t\t\t'(?:',  // non-capturing paren for a 'www.' prefixed url (ex: www.google.com)\n\t\t\t\t\t\t'(.?//)?',  // *** Capturing group $7 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\n\t\t\t\t\t\twwwRegex.source,\n\t\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t\t')',\n\n\t\t\t\t\t'|',\n\n\t\t\t\t\t'(?:',  // non-capturing paren for known a TLD url (ex: google.com)\n\t\t\t\t\t\t'(.?//)?',  // *** Capturing group $8 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\n\t\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t\t\ttldRegex.source,\n\t\t\t\t\t')',\n\t\t\t\t')',\n\n\t\t\t\t'(?:' + urlSuffixRegex.source + ')?',  // match for path, query string, and/or hash anchor - optional\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t// this setup does not scale well for open extension :( Need to rethink design of autolinker...\n\t\t\t// ***  Capturing group $9, which matches a (USA for now) phone number\n\t\t\t'(',\n\t\t\t\tphoneRegex.source,\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t'(',  // *** Capturing group $10, which can be used to check for a Hashtag match. Use group $12 for the actual Hashtag though. $11 may be used to reconstruct the original string in a replace()\n\t\t\t\t// *** Capturing group $11, which matches the whitespace character before the '#' sign (needed because of no lookbehinds), and\n\t\t\t\t// *** Capturing group $12, which matches the actual Hashtag\n\t\t\t\thashtagRegex.source,\n\t\t\t')'\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\t/**\n\t * @private\n\t * @property {RegExp} charBeforeProtocolRelMatchRegex\n\t *\n\t * The regular expression used to retrieve the character before a\n\t * protocol-relative URL match.\n\t *\n\t * This is used in conjunction with the {@link #matcherRegex}, which needs\n\t * to grab the character before a protocol-relative '//' due to the lack of\n\t * a negative look-behind in JavaScript regular expressions. The character\n\t * before the match is stripped from the URL.\n\t */\n\tcharBeforeProtocolRelMatchRegex : /^(.)?\\/\\//,\n\n\t/**\n\t * @private\n\t * @property {Autolinker.MatchValidator} matchValidator\n\t *\n\t * The MatchValidator object, used to filter out any false positives from\n\t * the {@link #matcherRegex}. See {@link Autolinker.MatchValidator} for details.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration options for the AnchorTagBuilder\n\t * instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\n\t\tthis.matchValidator = new Autolinker.MatchValidator();\n\t},\n\n\n\t/**\n\t * Parses the input `text` to search for matches, and calls the `replaceFn`\n\t * to allow replacements of the matches. Returns the `text` with matches\n\t * replaced.\n\t *\n\t * @param {String} text The text to search and repace matches in.\n\t * @param {Function} replaceFn The iterator function to handle the\n\t *   replacements. The function takes a single argument, a {@link Autolinker.match.Match}\n\t *   object, and should return the text that should make the replacement.\n\t * @param {Object} [contextObj=window] The context object (\"scope\") to run\n\t *   the `replaceFn` in.\n\t * @return {String}\n\t */\n\treplace : function( text, replaceFn, contextObj ) {\n\t\tvar me = this;  // for closure\n\n\t\treturn text.replace( this.matcherRegex, function( matchStr, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12 ) {\n\t\t\tvar matchDescObj = me.processCandidateMatch( matchStr, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12 );  // \"match description\" object\n\n\t\t\t// Return out with no changes for match types that are disabled (url,\n\t\t\t// email, phone, etc.), or for matches that are invalid (false\n\t\t\t// positives from the matcherRegex, which can't use look-behinds\n\t\t\t// since they are unavailable in JS).\n\t\t\tif( !matchDescObj ) {\n\t\t\t\treturn matchStr;\n\n\t\t\t} else {\n\t\t\t\t// Generate replacement text for the match from the `replaceFn`\n\t\t\t\tvar replaceStr = replaceFn.call( contextObj, matchDescObj.match );\n\t\t\t\treturn matchDescObj.prefixStr + replaceStr + matchDescObj.suffixStr;\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/**\n\t * Processes a candidate match from the {@link #matcherRegex}.\n\t *\n\t * Not all matches found by the regex are actual URL/Email/Phone/Twitter/Hashtag\n\t * matches, as determined by the {@link #matchValidator}. In this case, the\n\t * method returns `null`. Otherwise, a valid Object with `prefixStr`,\n\t * `match`, and `suffixStr` is returned.\n\t *\n\t * @private\n\t * @param {String} matchStr The full match that was found by the\n\t *   {@link #matcherRegex}.\n\t * @param {String} twitterMatch The matched text of a Twitter handle, if the\n\t *   match is a Twitter match.\n\t * @param {String} twitterHandlePrefixWhitespaceChar The whitespace char\n\t *   before the @ sign in a Twitter handle match. This is needed because of\n\t *   no lookbehinds in JS regexes, and is need to re-include the character\n\t *   for the anchor tag replacement.\n\t * @param {String} twitterHandle The actual Twitter user (i.e the word after\n\t *   the @ sign in a Twitter match).\n\t * @param {String} emailAddressMatch The matched email address for an email\n\t *   address match.\n\t * @param {String} urlMatch The matched URL string for a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to match something like\n\t *   'http-colon-slashslash localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @param {String} wwwProtocolRelativeMatch The '//' for a protocol-relative\n\t *   match from a 'www' url, with the character that comes before the '//'.\n\t * @param {String} tldProtocolRelativeMatch The '//' for a protocol-relative\n\t *   match from a TLD (top level domain) match, with the character that\n\t *   comes before the '//'.\n\t * @param {String} phoneMatch The matched text of a phone number\n\t * @param {String} hashtagMatch The matched text of a Twitter\n\t *   Hashtag, if the match is a Hashtag match.\n\t * @param {String} hashtagPrefixWhitespaceChar The whitespace char\n\t *   before the # sign in a Hashtag match. This is needed because of no\n\t *   lookbehinds in JS regexes, and is need to re-include the character for\n\t *   the anchor tag replacement.\n\t * @param {String} hashtag The actual Hashtag (i.e the word\n\t *   after the # sign in a Hashtag match).\n\t *\n\t * @return {Object} A \"match description object\". This will be `null` if the\n\t *   match was invalid, or if a match type is disabled. Otherwise, this will\n\t *   be an Object (map) with the following properties:\n\t * @return {String} return.prefixStr The char(s) that should be prepended to\n\t *   the replacement string. These are char(s) that were needed to be\n\t *   included from the regex match that were ignored by processing code, and\n\t *   should be re-inserted into the replacement stream.\n\t * @return {String} return.suffixStr The char(s) that should be appended to\n\t *   the replacement string. These are char(s) that were needed to be\n\t *   included from the regex match that were ignored by processing code, and\n\t *   should be re-inserted into the replacement stream.\n\t * @return {Autolinker.match.Match} return.match The Match object that\n\t *   represents the match that was found.\n\t */\n\tprocessCandidateMatch : function(\n\t\tmatchStr, twitterMatch, twitterHandlePrefixWhitespaceChar, twitterHandle,\n\t\temailAddressMatch, urlMatch, protocolUrlMatch, wwwProtocolRelativeMatch,\n\t\ttldProtocolRelativeMatch, phoneMatch, hashtagMatch,\n\t\thashtagPrefixWhitespaceChar, hashtag\n\t) {\n\t\t// Note: The `matchStr` variable wil be fixed up to remove characters that are no longer needed (which will\n\t\t// be added to `prefixStr` and `suffixStr`).\n\n\t\tvar protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,\n\t\t    match,  // Will be an Autolinker.match.Match object\n\n\t\t    prefixStr = \"\",  // A string to use to prefix the anchor tag that is created. This is needed for the Twitter and Hashtag matches.\n\t\t    suffixStr = \"\";  // A string to suffix the anchor tag that is created. This is used if there is a trailing parenthesis that should not be auto-linked.\n\n\t\t// Return out with `null` for match types that are disabled (url, email,\n\t\t// twitter, hashtag), or for matches that are invalid (false positives\n\t\t// from the matcherRegex, which can't use look-behinds since they are\n\t\t// unavailable in JS).\n\t\tif(\n\t\t\t( urlMatch && !this.urls ) ||\n\t\t\t( emailAddressMatch && !this.email ) ||\n\t\t\t( phoneMatch && !this.phone ) ||\n\t\t\t( twitterMatch && !this.twitter ) ||\n\t\t\t( hashtagMatch && !this.hashtag ) ||\n\t\t\t!this.matchValidator.isValidMatch( urlMatch, protocolUrlMatch, protocolRelativeMatch )\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Handle a closing parenthesis at the end of the match, and exclude it\n\t\t// if there is not a matching open parenthesis\n\t\t// in the match itself.\n\t\tif( this.matchHasUnbalancedClosingParen( matchStr ) ) {\n\t\t\tmatchStr = matchStr.substr( 0, matchStr.length - 1 );  // remove the trailing \")\"\n\t\t\tsuffixStr = \")\";  // this will be added after the generated <a> tag\n\t\t}\n\n\t\tif( emailAddressMatch ) {\n\t\t\tmatch = new Autolinker.match.Email( { matchedText: matchStr, email: emailAddressMatch } );\n\n\t\t} else if( twitterMatch ) {\n\t\t\t// fix up the `matchStr` if there was a preceding whitespace char,\n\t\t\t// which was needed to determine the match itself (since there are\n\t\t\t// no look-behinds in JS regexes)\n\t\t\tif( twitterHandlePrefixWhitespaceChar ) {\n\t\t\t\tprefixStr = twitterHandlePrefixWhitespaceChar;\n\t\t\t\tmatchStr = matchStr.slice( 1 );  // remove the prefixed whitespace char from the match\n\t\t\t}\n\t\t\tmatch = new Autolinker.match.Twitter( { matchedText: matchStr, twitterHandle: twitterHandle } );\n\n\t\t} else if( phoneMatch ) {\n\t\t\t// remove non-numeric values from phone number string\n\t\t\tvar cleanNumber = matchStr.replace( /\\D/g, '' );\n \t\t\tmatch = new Autolinker.match.Phone( { matchedText: matchStr, number: cleanNumber } );\n\n\t\t} else if( hashtagMatch ) {\n\t\t\t// fix up the `matchStr` if there was a preceding whitespace char,\n\t\t\t// which was needed to determine the match itself (since there are\n\t\t\t// no look-behinds in JS regexes)\n\t\t\tif( hashtagPrefixWhitespaceChar ) {\n\t\t\t\tprefixStr = hashtagPrefixWhitespaceChar;\n\t\t\t\tmatchStr = matchStr.slice( 1 );  // remove the prefixed whitespace char from the match\n\t\t\t}\n\t\t\tmatch = new Autolinker.match.Hashtag( { matchedText: matchStr, serviceName: this.hashtag, hashtag: hashtag } );\n\n\t\t} else {  // url match\n\t\t\t// If it's a protocol-relative '//' match, remove the character\n\t\t\t// before the '//' (which the matcherRegex needed to match due to\n\t\t\t// the lack of a negative look-behind in JavaScript regular\n\t\t\t// expressions)\n\t\t\tif( protocolRelativeMatch ) {\n\t\t\t\tvar charBeforeMatch = protocolRelativeMatch.match( this.charBeforeProtocolRelMatchRegex )[ 1 ] || \"\";\n\n\t\t\t\tif( charBeforeMatch ) {  // fix up the `matchStr` if there was a preceding char before a protocol-relative match, which was needed to determine the match itself (since there are no look-behinds in JS regexes)\n\t\t\t\t\tprefixStr = charBeforeMatch;\n\t\t\t\t\tmatchStr = matchStr.slice( 1 );  // remove the prefixed char from the match\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmatch = new Autolinker.match.Url( {\n\t\t\t\tmatchedText : matchStr,\n\t\t\t\turl : matchStr,\n\t\t\t\tprotocolUrlMatch : !!protocolUrlMatch,\n\t\t\t\tprotocolRelativeMatch : !!protocolRelativeMatch,\n\t\t\t\tstripPrefix : this.stripPrefix\n\t\t\t} );\n\t\t}\n\n\t\treturn {\n\t\t\tprefixStr : prefixStr,\n\t\t\tsuffixStr : suffixStr,\n\t\t\tmatch     : match\n\t\t};\n\t},\n\n\n\t/**\n\t * Determines if a match found has an unmatched closing parenthesis. If so,\n\t * this parenthesis will be removed from the match itself, and appended\n\t * after the generated anchor tag in {@link #processCandidateMatch}.\n\t *\n\t * A match may have an extra closing parenthesis at the end of the match\n\t * because the regular expression must include parenthesis for URLs such as\n\t * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.\n\t *\n\t * However, an extra parenthesis *will* be included when the URL itself is\n\t * wrapped in parenthesis, such as in the case of \"(wikipedia.com/something_(disambiguation))\".\n\t * In this case, the last closing parenthesis should *not* be part of the\n\t * URL itself, and this method will return `true`.\n\t *\n\t * @private\n\t * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n\t * @return {Boolean} `true` if there is an unbalanced closing parenthesis at\n\t *   the end of the `matchStr`, `false` otherwise.\n\t */\n\tmatchHasUnbalancedClosingParen : function( matchStr ) {\n\t\tvar lastChar = matchStr.charAt( matchStr.length - 1 );\n\n\t\tif( lastChar === ')' ) {\n\t\t\tvar openParensMatch = matchStr.match( /\\(/g ),\n\t\t\t    closeParensMatch = matchStr.match( /\\)/g ),\n\t\t\t    numOpenParens = ( openParensMatch && openParensMatch.length ) || 0,\n\t\t\t    numCloseParens = ( closeParensMatch && closeParensMatch.length ) || 0;\n\n\t\t\tif( numOpenParens < numCloseParens ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n} );\n/*global Autolinker */\n/*jshint scripturl:true */\n/**\n * @private\n * @class Autolinker.MatchValidator\n * @extends Object\n *\n * Used by Autolinker to filter out false positives from the\n * {@link Autolinker.matchParser.MatchParser#matcherRegex}.\n *\n * Due to the limitations of regular expressions (including the missing feature\n * of look-behinds in JS regular expressions), we cannot always determine the\n * validity of a given match. This class applies a bit of additional logic to\n * filter out any false positives that have been matched by the\n * {@link Autolinker.matchParser.MatchParser#matcherRegex}.\n */\nAutolinker.MatchValidator = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @private\n\t * @property {RegExp} invalidProtocolRelMatchRegex\n\t *\n\t * The regular expression used to check a potential protocol-relative URL\n\t * match, coming from the {@link Autolinker.matchParser.MatchParser#matcherRegex}.\n\t * A protocol-relative URL is, for example, \"//yahoo.com\"\n\t *\n\t * This regular expression checks to see if there is a word character before\n\t * the '//' match in order to determine if we should actually autolink a\n\t * protocol-relative URL. This is needed because there is no negative\n\t * look-behind in JavaScript regular expressions.\n\t *\n\t * For instance, we want to autolink something like \"Go to: //google.com\",\n\t * but we don't want to autolink something like \"abc//google.com\"\n\t */\n\tinvalidProtocolRelMatchRegex : /^[\\w]\\/\\//,\n\n\t/**\n\t * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http-colon-slashslash '\n\t *\n\t * @private\n\t * @property {RegExp} hasFullProtocolRegex\n\t */\n\thasFullProtocolRegex : /^[A-Za-z][-.+A-Za-z0-9]+:\\/\\//,\n\n\t/**\n\t * Regex to find the URI scheme, such as 'mailto:'.\n\t *\n\t * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n\t *\n\t * @private\n\t * @property {RegExp} uriSchemeRegex\n\t */\n\turiSchemeRegex : /^[A-Za-z][-.+A-Za-z0-9]+:/,\n\n\t/**\n\t * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n\t *\n\t * @private\n\t * @property {RegExp} hasWordCharAfterProtocolRegex\n\t */\n\thasWordCharAfterProtocolRegex : /:[^\\s]*?[A-Za-z]/,\n\n\n\t/**\n\t * Determines if a given match found by the {@link Autolinker.matchParser.MatchParser}\n\t * is valid. Will return `false` for:\n\t *\n\t * 1) URL matches which do not have at least have one period ('.') in the\n\t *    domain name (effectively skipping over matches like \"abc:def\").\n\t *    However, URL matches with a protocol will be allowed (ex: 'http-colon-slashslash localhost')\n\t * 2) URL matches which do not have at least one word character in the\n\t *    domain name (effectively skipping over matches like \"git:1.0\").\n\t * 3) A protocol-relative url match (a URL beginning with '//') whose\n\t *    previous character is a word character (effectively skipping over\n\t *    strings like \"abc//google.com\")\n\t *\n\t * Otherwise, returns `true`.\n\t *\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to match something like\n\t *   'http-colon-slashslash localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @param {String} protocolRelativeMatch The protocol-relative string for a\n\t *   URL match (i.e. '//'), possibly with a preceding character (ex, a\n\t *   space, such as: ' //', or a letter, such as: 'a//'). The match is\n\t *   invalid if there is a word character preceding the '//'.\n\t * @return {Boolean} `true` if the match given is valid and should be\n\t *   processed, or `false` if the match is invalid and/or should just not be\n\t *   processed.\n\t */\n\tisValidMatch : function( urlMatch, protocolUrlMatch, protocolRelativeMatch ) {\n\t\tif(\n\t\t\t( protocolUrlMatch && !this.isValidUriScheme( protocolUrlMatch ) ) ||\n\t\t\tthis.urlMatchDoesNotHaveProtocolOrDot( urlMatch, protocolUrlMatch ) ||       // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n\t\t\tthis.urlMatchDoesNotHaveAtLeastOneWordChar( urlMatch, protocolUrlMatch ) ||  // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n\t\t\tthis.isInvalidProtocolRelativeMatch( protocolRelativeMatch )                 // A protocol-relative match which has a word character in front of it (so we can skip something like \"abc//google.com\")\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\n\t/**\n\t * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n\t * `false` if the scheme is 'javascript:' or 'vbscript:'\n\t *\n\t * @private\n\t * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n\t *   match. Ex: 'http-colon-slashslash yahoo.com' or 'mailto:a@a.com'.\n\t * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n\t */\n\tisValidUriScheme : function( uriSchemeMatch ) {\n\t\tvar uriScheme = uriSchemeMatch.match( this.uriSchemeRegex )[ 0 ].toLowerCase();\n\n\t\treturn ( uriScheme !== 'javascript:' && uriScheme !== 'vbscript:' );\n\t},\n\n\n\t/**\n\t * Determines if a URL match does not have either:\n\t *\n\t * a) a full protocol (i.e. 'http-colon-slashslash '), or\n\t * b) at least one dot ('.') in the domain name (for a non-full-protocol\n\t *    match).\n\t *\n\t * Either situation is considered an invalid URL (ex: 'git:d' does not have\n\t * either the '://' part, or at least one dot in the domain name. If the\n\t * match was 'git:abc.com', we would consider this valid.)\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to match something like\n\t *   'http-colon-slashslash localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Boolean} `true` if the URL match does not have a full protocol,\n\t *   or at least one dot ('.') in a non-full-protocol match.\n\t */\n\turlMatchDoesNotHaveProtocolOrDot : function( urlMatch, protocolUrlMatch ) {\n\t\treturn ( !!urlMatch && ( !protocolUrlMatch || !this.hasFullProtocolRegex.test( protocolUrlMatch ) ) && urlMatch.indexOf( '.' ) === -1 );\n\t},\n\n\n\t/**\n\t * Determines if a URL match does not have at least one word character after\n\t * the protocol (i.e. in the domain name).\n\t *\n\t * At least one letter character must exist in the domain name after a\n\t * protocol match. Ex: skip over something like \"git:1.0\"\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to know whether or not we\n\t *   have a protocol in the URL string, in order to check for a word\n\t *   character after the protocol separator (':').\n\t * @return {Boolean} `true` if the URL match does not have at least one word\n\t *   character in it after the protocol, `false` otherwise.\n\t */\n\turlMatchDoesNotHaveAtLeastOneWordChar : function( urlMatch, protocolUrlMatch ) {\n\t\tif( urlMatch && protocolUrlMatch ) {\n\t\t\treturn !this.hasWordCharAfterProtocolRegex.test( urlMatch );\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\n\t/**\n\t * Determines if a protocol-relative match is an invalid one. This method\n\t * returns `true` if there is a `protocolRelativeMatch`, and that match\n\t * contains a word character before the '//' (i.e. it must contain\n\t * whitespace or nothing before the '//' in order to be considered valid).\n\t *\n\t * @private\n\t * @param {String} protocolRelativeMatch The protocol-relative string for a\n\t *   URL match (i.e. '//'), possibly with a preceding character (ex, a\n\t *   space, such as: ' //', or a letter, such as: 'a//'). The match is\n\t *   invalid if there is a word character preceding the '//'.\n\t * @return {Boolean} `true` if it is an invalid protocol-relative match,\n\t *   `false` otherwise.\n\t */\n\tisInvalidProtocolRelativeMatch : function( protocolRelativeMatch ) {\n\t\treturn ( !!protocolRelativeMatch && this.invalidProtocolRelMatchRegex.test( protocolRelativeMatch ) );\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.match.Match\n * \n * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a \n * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n * \n * For example:\n * \n *     var input = \"...\";  // string with URLs, Email Addresses, and Twitter Handles\n *     \n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( autolinker, match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *         \n *             switch( match.getType() ) {\n *                 case 'url' : \n *                     console.log( \"url: \", match.getUrl() );\n *                     \n *                 case 'email' :\n *                     console.log( \"email: \", match.getEmail() );\n *                     \n *                 case 'twitter' :\n *                     console.log( \"twitter: \", match.getTwitterHandle() );\n *             }\n *         }\n *     } );\n *     \n * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n */\nAutolinker.match.Match = Autolinker.Util.extend( Object, {\n\t\n\t/**\n\t * @cfg {String} matchedText (required)\n\t * \n\t * The original text that was matched.\n\t */\n\t\n\t\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\t},\n\n\t\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t * \n\t * @abstract\n\t * @return {String}\n\t */\n\tgetType : Autolinker.Util.abstractMethod,\n\t\n\t\n\t/**\n\t * Returns the original text that was matched.\n\t * \n\t * @return {String}\n\t */\n\tgetMatchedText : function() {\n\t\treturn this.matchedText;\n\t},\n\t\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t * \n\t * @abstract\n\t * @return {String}\n\t */\n\tgetAnchorHref : Autolinker.Util.abstractMethod,\n\t\n\t\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t * \n\t * @abstract\n\t * @return {String}\n\t */\n\tgetAnchorText : Autolinker.Util.abstractMethod\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Email\n * @extends Autolinker.match.Match\n * \n * Represents a Email match found in an input string which should be Autolinked.\n * \n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Email = Autolinker.Util.extend( Autolinker.match.Match, {\n\t\n\t/**\n\t * @cfg {String} email (required)\n\t * \n\t * The email address that was matched.\n\t */\n\t\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'email';\n\t},\n\t\n\t\n\t/**\n\t * Returns the email address that was matched.\n\t * \n\t * @return {String}\n\t */\n\tgetEmail : function() {\n\t\treturn this.email;\n\t},\n\t\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t * \n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'mailto:' + this.email;\n\t},\n\t\n\t\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t * \n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn this.email;\n\t}\n\t\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Hashtag\n * @extends Autolinker.match.Match\n *\n * Represents a Hashtag match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nAutolinker.match.Hashtag = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} serviceName (required)\n\t *\n\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n\t * for available values.\n\t */\n\n\t/**\n\t * @cfg {String} hashtag (required)\n\t *\n\t * The Hashtag that was matched, without the '#'.\n\t */\n\n\n\t/**\n\t * Returns the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'hashtag';\n\t},\n\n\n\t/**\n\t * Returns the matched hashtag.\n\t *\n\t * @return {String}\n\t */\n\tgetHashtag : function() {\n\t\treturn this.hashtag;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tvar serviceName = this.serviceName,\n\t\t    hashtag = this.hashtag;\n\n\t\tswitch( serviceName ) {\n\t\t\tcase 'twitter' :\n\t\t\t\treturn 'https://twitter.com/hashtag/' + hashtag;\n\t\t\tcase 'facebook' :\n\t\t\t\treturn 'https://www.facebook.com/hashtag/' + hashtag;\n\n\t\t\tdefault :  // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n\t\t\t\tthrow new Error( 'Unknown service name to point hashtag to: ', serviceName );\n\t\t}\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn '#' + this.hashtag;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Phone\n * @extends Autolinker.match.Match\n *\n * Represents a Phone number match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nAutolinker.match.Phone = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} number (required)\n\t *\n\t * The phone number that was matched.\n\t */\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'phone';\n\t},\n\n\n\t/**\n\t * Returns the phone number that was matched.\n\t *\n\t * @return {String}\n\t */\n\tgetNumber: function() {\n\t\treturn this.number;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'tel:' + this.number;\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn this.matchedText;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Twitter\n * @extends Autolinker.match.Match\n * \n * Represents a Twitter match found in an input string which should be Autolinked.\n * \n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Twitter = Autolinker.Util.extend( Autolinker.match.Match, {\n\t\n\t/**\n\t * @cfg {String} twitterHandle (required)\n\t * \n\t * The Twitter handle that was matched.\n\t */\n\t\n\n\t/**\n\t * Returns the type of match that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'twitter';\n\t},\n\t\n\t\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetTwitterHandle : function() {\n\t\treturn this.twitterHandle;\n\t},\n\t\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t * \n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'https://twitter.com/' + this.twitterHandle;\n\t},\n\t\n\t\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t * \n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn '@' + this.twitterHandle;\n\t}\n\t\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Url\n * @extends Autolinker.match.Match\n * \n * Represents a Url match found in an input string which should be Autolinked.\n * \n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Url = Autolinker.Util.extend( Autolinker.match.Match, {\n\t\n\t/**\n\t * @cfg {String} url (required)\n\t * \n\t * The url that was matched.\n\t */\n\t\n\t/**\n\t * @cfg {Boolean} protocolUrlMatch (required)\n\t * \n\t * `true` if the URL is a match which already has a protocol (i.e. 'http-colon-slashslash '), `false` if the match was from a 'www' or\n\t * known TLD match.\n\t */\n\t\n\t/**\n\t * @cfg {Boolean} protocolRelativeMatch (required)\n\t * \n\t * `true` if the URL is a protocol-relative match. A protocol-relative match is a URL that starts with '//',\n\t * and will be either http-colon-slashslash  or https-colon-slashslash  based on the protocol that the site is loaded under.\n\t */\n\t\n\t/**\n\t * @cfg {Boolean} stripPrefix (required)\n\t * @inheritdoc Autolinker#stripPrefix\n\t */\n\t\n\n\t/**\n\t * @private\n\t * @property {RegExp} urlPrefixRegex\n\t * \n\t * A regular expression used to remove the 'http-colon-slashslash ' or 'https-colon-slashslash ' and/or the 'www.' from URLs.\n\t */\n\turlPrefixRegex: /^(https?:\\/\\/)?(www\\.)?/i,\n\t\n\t/**\n\t * @private\n\t * @property {RegExp} protocolRelativeRegex\n\t * \n\t * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n\t * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n\t */\n\tprotocolRelativeRegex : /^\\/\\//,\n\t\n\t/**\n\t * @private\n\t * @property {Boolean} protocolPrepended\n\t * \n\t * Will be set to `true` if the 'http-colon-slashslash ' protocol has been prepended to the {@link #url} (because the\n\t * {@link #url} did not have a protocol)\n\t */\n\tprotocolPrepended : false,\n\t\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t * \n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'url';\n\t},\n\t\n\t\n\t/**\n\t * Returns the url that was matched, assuming the protocol to be 'http-colon-slashslash ' if the original\n\t * match was missing a protocol.\n\t * \n\t * @return {String}\n\t */\n\tgetUrl : function() {\n\t\tvar url = this.url;\n\t\t\n\t\t// if the url string doesn't begin with a protocol, assume 'http://'\n\t\tif( !this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended ) {\n\t\t\turl = this.url = 'http://' + url;\n\t\t\t\n\t\t\tthis.protocolPrepended = true;\n\t\t}\n\t\t\n\t\treturn url;\n\t},\n\t\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t * \n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tvar url = this.getUrl();\n\t\t\n\t\treturn url.replace( /&amp;/g, '&' );  // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html \n\t},\n\t\n\t\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t * \n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\tvar anchorText = this.getUrl();\n\t\t\n\t\tif( this.protocolRelativeMatch ) {\n\t\t\t// Strip off any protocol-relative '//' from the anchor text\n\t\t\tanchorText = this.stripProtocolRelativePrefix( anchorText );\n\t\t}\n\t\tif( this.stripPrefix ) {\n\t\t\tanchorText = this.stripUrlPrefix( anchorText );\n\t\t}\n\t\tanchorText = this.removeTrailingSlash( anchorText );  // remove trailing slash, if there is one\n\t\t\n\t\treturn anchorText;\n\t},\n\t\n\t\n\t// ---------------------------------------\n\t\n\t// Utility Functionality\n\t\n\t/**\n\t * Strips the URL prefix (such as \"http-colon-slashslash \" or \"https-colon-slashslash \") from the given text.\n\t * \n\t * @private\n\t * @param {String} text The text of the anchor that is being generated, for which to strip off the\n\t *   url prefix (such as stripping off \"http-colon-slashslash \")\n\t * @return {String} The `anchorText`, with the prefix stripped.\n\t */\n\tstripUrlPrefix : function( text ) {\n\t\treturn text.replace( this.urlPrefixRegex, '' );\n\t},\n\t\n\t\n\t/**\n\t * Strips any protocol-relative '//' from the anchor text.\n\t * \n\t * @private\n\t * @param {String} text The text of the anchor that is being generated, for which to strip off the\n\t *   protocol-relative prefix (such as stripping off \"//\")\n\t * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n\t */\n\tstripProtocolRelativePrefix : function( text ) {\n\t\treturn text.replace( this.protocolRelativeRegex, '' );\n\t},\n\t\n\t\n\t/**\n\t * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n\t * \n\t * @private\n\t * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n\t *   slash ('/') that may exist.\n\t * @return {String} The `anchorText`, with the trailing slash removed.\n\t */\n\tremoveTrailingSlash : function( anchorText ) {\n\t\tif( anchorText.charAt( anchorText.length - 1 ) === '/' ) {\n\t\t\tanchorText = anchorText.slice( 0, -1 );\n\t\t}\n\t\treturn anchorText;\n\t}\n\t\n} );\nreturn Autolinker;\n\n}));\n","define([], function() {\n    'use strict';\n    /**\n     * Representation of <Camera> from KML\n     * @alias KmlCamera\n     * @constructor\n     *\n     * @param {Cartesian3} position camera position\n     * @param {HeadingPitchRoll} headingPitchRoll camera orientation\n     */\n    function KmlCamera(position, headingPitchRoll) {\n        this.position = position;\n        this.headingPitchRoll = headingPitchRoll;\n    }\n\n    return KmlCamera;\n});\n","define([], function() {\n    'use strict';\n    /**\n     * @alias KmlLookAt\n     * @constructor\n     *\n     * @param {Cartesian3} position camera position\n     * @param {HeadingPitchRange} headingPitchRange camera orientation\n     */\n    function KmlLookAt(position, headingPitchRange) {\n        this.position = position;\n        this.headingPitchRange = headingPitchRange;\n    }\n\n    return KmlLookAt;\n});\n","define([\n        '../Core/defined',\n        '../Core/Event'\n    ], function(\n        defined,\n        Event) {\n    'use strict';\n    /**\n     * @alias KmlTour\n     * @constructor\n     *\n     * @param {String} name name parsed from KML\n     * @param {String} id id parsed from KML\n     * @param {Array} playlist array with KMLTourFlyTos, KMLTourWaits and KMLTourSoundCues\n     */\n    function KmlTour(name, id) {\n        /**\n         * Id of kml gx:Tour entry\n         * @type String\n         */\n        this.id = id;\n        /**\n         * Tour name\n         * @type String\n         */\n        this.name = name;\n        /**\n         * Index of current entry from playlist\n         * @type Number\n         */\n        this.playlistIndex = 0;\n        /**\n         * Array of playlist entries\n         * @type Array\n         */\n        this.playlist = [];\n        /**\n         * Event will be called when tour starts to play,\n         * before any playlist entry starts to play.\n         * @type Event\n         */\n        this.tourStart = new Event();\n        /**\n         * Event will be called when all playlist entries are\n         * played, or tour playback being canceled.\n         *\n         * If tour playback was terminated, event callback will\n         * be called with terminated=true parameter.\n         * @type Event\n         */\n        this.tourEnd = new Event();\n        /**\n         * Event will be called when entry from playlist starts to play.\n         *\n         * Event callback will be called with curent entry as first parameter.\n         * @type Event\n         */\n        this.entryStart = new Event();\n        /**\n         * Event will be called when entry from playlist ends to play.\n         *\n         * Event callback will be called with following parameters:\n         * 1. entry - entry\n         * 2. terminated - true if playback was terminated by calling {@link KmlTour#stop}\n         * @type Event\n         */\n        this.entryEnd = new Event();\n\n        this._activeEntries = [];\n    }\n\n    /**\n     * Add entry to this tour playlist.\n     *\n     * @param {KmlTourFlyTo|KmlTourWait} entry an entry to add to the playlist.\n     */\n    KmlTour.prototype.addPlaylistEntry = function(entry) {\n        this.playlist.push(entry);\n    };\n\n    /**\n     * Play this tour.\n     *\n     * @param {Viewer} viewer viewer widget.\n     * @param {Object} [cameraOptions] these options will be merged with {@link Camera#flyTo}\n     * options for FlyTo playlist entries.\n     */\n    KmlTour.prototype.play = function(viewer, cameraOptions) {\n        this.tourStart.raiseEvent();\n\n        var tour = this;\n        playEntry.call(this, viewer, cameraOptions, function(terminated) {\n            tour.playlistIndex = 0;\n            // Stop nonblocking entries\n            if (!terminated) {\n                cancelAllEntries(tour._activeEntries);\n            }\n            tour.tourEnd.raiseEvent(terminated);\n        });\n    };\n\n    /**\n     * Stop curently playing tour.\n     */\n    KmlTour.prototype.stop = function() {\n        cancelAllEntries(this._activeEntries);\n    };\n\n    // Stop all activeEntries.\n    function cancelAllEntries(activeEntries) {\n        for(var entry = activeEntries.pop(); entry !== undefined; entry = activeEntries.pop()) {\n            entry.stop();\n        }\n    }\n\n    // Play playlist entry.\n    // This function is called recursevly with playNext and iterates over all entries from playlist.\n    function playEntry(viewer, cameraOptions, allDone) {\n        var entry = this.playlist[this.playlistIndex];\n        if (entry) {\n            var _playNext = playNext.bind(this, viewer, cameraOptions, allDone);\n            this._activeEntries.push(entry);\n            this.entryStart.raiseEvent(entry);\n            if (entry.blocking) {\n                entry.play(_playNext, viewer.scene.camera, cameraOptions);\n            }\n            else {\n                var tour = this;\n                entry.play(function() {\n                    tour.entryEnd.raiseEvent(entry);\n                    var indx = tour._activeEntries.indexOf(entry);\n                    if (indx >= 0) {\n                        tour._activeEntries.splice(indx, 1);\n                    }\n                });\n                _playNext(viewer, cameraOptions, allDone);\n            }\n        }\n        else if(defined(allDone)) {\n            allDone(false);\n        }\n    }\n\n    // Increment playlistIndex and call playEntry if terminated isn't true.\n    function playNext(viewer, cameraOptions, allDone, terminated) {\n        var entry = this.playlist[this.playlistIndex];\n        this.entryEnd.raiseEvent(entry, terminated);\n\n        if (terminated) {\n            allDone(terminated);\n        }\n        else {\n            var indx = this._activeEntries.indexOf(entry);\n            if (indx >= 0) {\n                this._activeEntries.splice(indx, 1);\n            }\n            this.playlistIndex++;\n            playEntry.call(this, viewer, cameraOptions, allDone);\n        }\n    }\n\n    return KmlTour;\n});\n","define([\n        '../Core/BoundingSphere',\n        '../Core/combine',\n        '../Core/defined',\n        '../Core/EasingFunction'\n    ], function(\n        BoundingSphere,\n        combine,\n        defined,\n        EasingFunction) {\n    'use strict';\n    /**\n     * @alias KmlTourFlyTo\n     * @constructor\n     *\n     * @param {Number} duration entry duration\n     * @param {String} flyToMode KML fly to mode: bounce, smooth, etc\n     * @param {KmlCamera|KmlLookAt} view KmlCamera or KmlLookAt\n     */\n    function KmlTourFlyTo(duration, flyToMode, view) {\n        this.type = 'KmlTourFlyTo';\n        this.blocking = true;\n        this.activeCamera = null;\n        this.activeCallback = null;\n\n        this.duration = duration;\n        this.view = view;\n        this.flyToMode = flyToMode;\n    }\n\n    /**\n     * Play this playlist entry\n     *\n     * @param {KmlTourFlyTo~DoneCallback} done function which will be called when playback ends\n     * @param {Camera} camera Cesium camera\n     * @param {Object} [cameraOptions] which will be merged with camera flyTo options. See {@link Camera#flyTo}\n     */\n    KmlTourFlyTo.prototype.play = function(done, camera, cameraOptions) {\n        this.activeCamera = camera;\n        if (defined(done) && done !== null) {\n            var self = this;\n            this.activeCallback = function(terminated) {\n                delete self.activeCallback;\n                delete self.activeCamera;\n                done(defined(terminated) ? false : terminated);\n            };\n        }\n\n        var options = this.getCameraOptions(cameraOptions);\n        if (this.view.headingPitchRoll) {\n            camera.flyTo(options);\n        }\n        else if (this.view.headingPitchRange) {\n            var target = new BoundingSphere(this.view.position);\n            camera.flyToBoundingSphere(target, options);\n        }\n    };\n\n    /**\n     * Stop execution of curent entry. Cancel camera flyTo\n     */\n    KmlTourFlyTo.prototype.stop = function() {\n        if (defined(this.activeCamera)) {\n            this.activeCamera.cancelFlight();\n        }\n        if (defined(this.activeCallback)) {\n            this.activeCallback(true);\n        }\n    };\n\n    /**\n     * Returns options for {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere}\n     * depends on this.view type.\n     *\n     * @param {Object} cameraOptions options to merge with generated. See {@link Camera#flyTo}\n     * @returns {Object} {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere} options\n     */\n    KmlTourFlyTo.prototype.getCameraOptions = function(cameraOptions) {\n        var options = {\n            duration: this.duration\n        };\n\n        if (defined(this.activeCallback)) {\n            options.complete = this.activeCallback;\n        }\n\n        if (this.flyToMode === 'smooth' ) {\n            options.easingFunction = EasingFunction.LINEAR_NONE;\n        }\n\n        if (this.view.headingPitchRoll) {\n            options.destination = this.view.position;\n            options.orientation = this.view.headingPitchRoll;\n        }\n        else if (this.view.headingPitchRange) {\n            options.offset = this.view.headingPitchRange;\n        }\n\n        if (defined(cameraOptions)) {\n            options = combine(options, cameraOptions);\n        }\n        return options;\n    };\n\n    /**\n     * A function that will be executed when the flight completes.\n     * @callback KmlTourFlyTo~DoneCallback\n     *\n     * @param {Boolean} terminated true if {@link KmlTourFlyTo#stop} was\n     * called before entry done playback.\n     */\n\n    return KmlTourFlyTo;\n});\n","define([\n        '../Core/defined'\n    ], function(\n        defined) {\n    'use strict';\n    /**\n     * @alias KmlTourWait\n     * @constructor\n     *\n     * @param {Number} duration entry duration\n     */\n    function KmlTourWait(duration) {\n        this.type = 'KmlTourWait';\n        this.blocking = true;\n        this.duration = duration;\n\n        this.timeout = null;\n    }\n\n    /**\n     * Play this playlist entry\n     *\n     * @param {KmlTourWait~DoneCallback} done function which will be called when playback ends\n     */\n    KmlTourWait.prototype.play = function(done) {\n        var self = this;\n        this.activeCallback = done;\n        this.timeout = setTimeout(function() {\n            delete self.activeCallback;\n            done(false);\n        }, this.duration * 1000);\n    };\n\n    /**\n     * Stop execution of curent entry, cancel curent timeout\n     */\n    KmlTourWait.prototype.stop = function() {\n        clearTimeout(this.timeout);\n        if (defined(this.activeCallback)) {\n            this.activeCallback(true);\n        }\n    };\n\n    /**\n     * A function which will be called when playback ends.\n     *\n     * @callback KmlTourWait~DoneCallback\n     * @param {Boolean} terminated true if {@link KmlTourWait#stop} was\n     * called before entry done playback.\n     */\n\n    return KmlTourWait;\n});\n","define([\n        '../Core/ArcType',\n        '../Core/BoundingRectangle',\n        '../Core/Cartesian2',\n        '../Core/Cartesian3',\n        '../Core/Cartographic',\n        '../Core/ClockRange',\n        '../Core/ClockStep',\n        '../Core/Color',\n        '../Core/CornerType',\n        '../Core/createGuid',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/DistanceDisplayCondition',\n        '../Core/Ellipsoid',\n        '../Core/Event',\n        '../Core/ExtrapolationType',\n        '../Core/getFilenameFromUri',\n        '../Core/HermitePolynomialApproximation',\n        '../Core/isArray',\n        '../Core/Iso8601',\n        '../Core/JulianDate',\n        '../Core/LagrangePolynomialApproximation',\n        '../Core/LinearApproximation',\n        '../Core/Math',\n        '../Core/NearFarScalar',\n        '../Core/PolygonHierarchy',\n        '../Core/Quaternion',\n        '../Core/Rectangle',\n        '../Core/ReferenceFrame',\n        '../Core/Resource',\n        '../Core/RuntimeError',\n        '../Core/Spherical',\n        '../Core/TimeInterval',\n        '../Core/TimeIntervalCollection',\n        '../Scene/ClassificationType',\n        '../Scene/ColorBlendMode',\n        '../Scene/HeightReference',\n        '../Scene/HorizontalOrigin',\n        '../Scene/LabelStyle',\n        '../Scene/ShadowMode',\n        '../Scene/VerticalOrigin',\n        '../ThirdParty/Uri',\n        '../ThirdParty/when',\n        './BillboardGraphics',\n        './BoxGraphics',\n        './CallbackProperty',\n        './CheckerboardMaterialProperty',\n        './ColorMaterialProperty',\n        './CompositeMaterialProperty',\n        './CompositePositionProperty',\n        './CompositeProperty',\n        './ConstantPositionProperty',\n        './ConstantProperty',\n        './CorridorGraphics',\n        './CylinderGraphics',\n        './DataSource',\n        './DataSourceClock',\n        './EllipseGraphics',\n        './EllipsoidGraphics',\n        './EntityCluster',\n        './EntityCollection',\n        './GridMaterialProperty',\n        './ImageMaterialProperty',\n        './LabelGraphics',\n        './ModelGraphics',\n        './NodeTransformationProperty',\n        './PathGraphics',\n        './PointGraphics',\n        './PolygonGraphics',\n        './PolylineArrowMaterialProperty',\n        './PolylineDashMaterialProperty',\n        './PolylineGlowMaterialProperty',\n        './PolylineGraphics',\n        './PolylineOutlineMaterialProperty',\n        './PositionPropertyArray',\n        './Property',\n        './PropertyArray',\n        './PropertyBag',\n        './RectangleGraphics',\n        './ReferenceProperty',\n        './Rotation',\n        './SampledPositionProperty',\n        './SampledProperty',\n        './StripeMaterialProperty',\n        './StripeOrientation',\n        './TimeIntervalCollectionPositionProperty',\n        './TimeIntervalCollectionProperty',\n        './VelocityOrientationProperty',\n        './VelocityVectorProperty',\n        './WallGraphics'\n    ], function(\n        ArcType,\n        BoundingRectangle,\n        Cartesian2,\n        Cartesian3,\n        Cartographic,\n        ClockRange,\n        ClockStep,\n        Color,\n        CornerType,\n        createGuid,\n        defaultValue,\n        defined,\n        defineProperties,\n        DeveloperError,\n        DistanceDisplayCondition,\n        Ellipsoid,\n        Event,\n        ExtrapolationType,\n        getFilenameFromUri,\n        HermitePolynomialApproximation,\n        isArray,\n        Iso8601,\n        JulianDate,\n        LagrangePolynomialApproximation,\n        LinearApproximation,\n        CesiumMath,\n        NearFarScalar,\n        PolygonHierarchy,\n        Quaternion,\n        Rectangle,\n        ReferenceFrame,\n        Resource,\n        RuntimeError,\n        Spherical,\n        TimeInterval,\n        TimeIntervalCollection,\n        ClassificationType,\n        ColorBlendMode,\n        HeightReference,\n        HorizontalOrigin,\n        LabelStyle,\n        ShadowMode,\n        VerticalOrigin,\n        Uri,\n        when,\n        BillboardGraphics,\n        BoxGraphics,\n        CallbackProperty,\n        CheckerboardMaterialProperty,\n        ColorMaterialProperty,\n        CompositeMaterialProperty,\n        CompositePositionProperty,\n        CompositeProperty,\n        ConstantPositionProperty,\n        ConstantProperty,\n        CorridorGraphics,\n        CylinderGraphics,\n        DataSource,\n        DataSourceClock,\n        EllipseGraphics,\n        EllipsoidGraphics,\n        EntityCluster,\n        EntityCollection,\n        GridMaterialProperty,\n        ImageMaterialProperty,\n        LabelGraphics,\n        ModelGraphics,\n        NodeTransformationProperty,\n        PathGraphics,\n        PointGraphics,\n        PolygonGraphics,\n        PolylineArrowMaterialProperty,\n        PolylineDashMaterialProperty,\n        PolylineGlowMaterialProperty,\n        PolylineGraphics,\n        PolylineOutlineMaterialProperty,\n        PositionPropertyArray,\n        Property,\n        PropertyArray,\n        PropertyBag,\n        RectangleGraphics,\n        ReferenceProperty,\n        Rotation,\n        SampledPositionProperty,\n        SampledProperty,\n        StripeMaterialProperty,\n        StripeOrientation,\n        TimeIntervalCollectionPositionProperty,\n        TimeIntervalCollectionProperty,\n        VelocityOrientationProperty,\n        VelocityVectorProperty,\n        WallGraphics) {\n    'use strict';\n\n    // A marker type to distinguish CZML properties where we need to end up with a unit vector.\n    // The data is still loaded into Cartesian3 objects but they are normalized.\n    function UnitCartesian3() {}\n    UnitCartesian3.packedLength = Cartesian3.packedLength;\n    UnitCartesian3.unpack = Cartesian3.unpack;\n    UnitCartesian3.pack = Cartesian3.pack;\n\n    // As a side note, for the purposes of CZML, Quaternion always indicates a unit quaternion.\n\n    var currentId;\n\n    function createReferenceProperty(entityCollection, referenceString) {\n        if (referenceString[0] === '#') {\n            referenceString = currentId + referenceString;\n        }\n        return ReferenceProperty.fromString(entityCollection, referenceString);\n    }\n\n    function createSpecializedProperty(type, entityCollection, packetData) {\n        if (defined(packetData.reference)) {\n            return createReferenceProperty(entityCollection, packetData.reference);\n        }\n\n        if (defined(packetData.velocityReference)) {\n            var referenceProperty = createReferenceProperty(entityCollection, packetData.velocityReference);\n            switch (type) {\n                case Cartesian3:\n                case UnitCartesian3:\n                    return new VelocityVectorProperty(referenceProperty, type === UnitCartesian3);\n                case Quaternion:\n                    return new VelocityOrientationProperty(referenceProperty);\n            }\n        }\n\n        throw new RuntimeError(JSON.stringify(packetData) + ' is not valid CZML.');\n    }\n\n    function createAdapterProperty(property, adapterFunction) {\n        return new CallbackProperty(function(time, result) {\n            return adapterFunction(property.getValue(time, result));\n        }, property.isConstant);\n    }\n\n    var scratchCartesian = new Cartesian3();\n    var scratchSpherical = new Spherical();\n    var scratchCartographic = new Cartographic();\n    var scratchTimeInterval = new TimeInterval();\n    var scratchQuaternion = new Quaternion();\n\n    function unwrapColorInterval(czmlInterval) {\n        var rgbaf = czmlInterval.rgbaf;\n        if (defined(rgbaf)) {\n            return rgbaf;\n        }\n\n        var rgba = czmlInterval.rgba;\n        if (!defined(rgba)) {\n            return undefined;\n        }\n\n        var length = rgba.length;\n        if (length === Color.packedLength) {\n            return [Color.byteToFloat(rgba[0]), Color.byteToFloat(rgba[1]), Color.byteToFloat(rgba[2]), Color.byteToFloat(rgba[3])];\n        }\n\n        rgbaf = new Array(length);\n        for (var i = 0; i < length; i += 5) {\n            rgbaf[i] = rgba[i];\n            rgbaf[i + 1] = Color.byteToFloat(rgba[i + 1]);\n            rgbaf[i + 2] = Color.byteToFloat(rgba[i + 2]);\n            rgbaf[i + 3] = Color.byteToFloat(rgba[i + 3]);\n            rgbaf[i + 4] = Color.byteToFloat(rgba[i + 4]);\n        }\n        return rgbaf;\n    }\n\n    function unwrapUriInterval(czmlInterval, sourceUri) {\n        var uri = defaultValue(czmlInterval.uri, czmlInterval);\n        if (defined(sourceUri)) {\n            return sourceUri.getDerivedResource({\n                url: uri\n            });\n        }\n\n        return Resource.createIfNeeded(uri);\n    }\n\n    function unwrapRectangleInterval(czmlInterval) {\n        var wsen = czmlInterval.wsen;\n        if (defined(wsen)) {\n            return wsen;\n        }\n\n        var wsenDegrees = czmlInterval.wsenDegrees;\n        if (!defined(wsenDegrees)) {\n            return undefined;\n        }\n\n        var length = wsenDegrees.length;\n        if (length === Rectangle.packedLength) {\n            return [CesiumMath.toRadians(wsenDegrees[0]), CesiumMath.toRadians(wsenDegrees[1]), CesiumMath.toRadians(wsenDegrees[2]), CesiumMath.toRadians(wsenDegrees[3])];\n        }\n\n        wsen = new Array(length);\n        for (var i = 0; i < length; i += 5) {\n            wsen[i] = wsenDegrees[i];\n            wsen[i + 1] = CesiumMath.toRadians(wsenDegrees[i + 1]);\n            wsen[i + 2] = CesiumMath.toRadians(wsenDegrees[i + 2]);\n            wsen[i + 3] = CesiumMath.toRadians(wsenDegrees[i + 3]);\n            wsen[i + 4] = CesiumMath.toRadians(wsenDegrees[i + 4]);\n        }\n        return wsen;\n    }\n\n    function convertUnitSphericalToCartesian(unitSpherical) {\n        var length = unitSpherical.length;\n        scratchSpherical.magnitude = 1.0;\n        if (length === 2) {\n            scratchSpherical.clock = unitSpherical[0];\n            scratchSpherical.cone = unitSpherical[1];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length / 3 * 4);\n        for (var i = 0, j = 0; i < length; i += 3, j += 4) {\n            result[j] = unitSpherical[i];\n\n            scratchSpherical.clock = unitSpherical[i + 1];\n            scratchSpherical.cone = unitSpherical[i + 2];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n\n            result[j + 1] = scratchCartesian.x;\n            result[j + 2] = scratchCartesian.y;\n            result[j + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function convertSphericalToCartesian(spherical) {\n        var length = spherical.length;\n        if (length === 3) {\n            scratchSpherical.clock = spherical[0];\n            scratchSpherical.cone = spherical[1];\n            scratchSpherical.magnitude = spherical[2];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length);\n        for (var i = 0; i < length; i += 4) {\n            result[i] = spherical[i];\n\n            scratchSpherical.clock = spherical[i + 1];\n            scratchSpherical.cone = spherical[i + 2];\n            scratchSpherical.magnitude = spherical[i + 3];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n\n            result[i + 1] = scratchCartesian.x;\n            result[i + 2] = scratchCartesian.y;\n            result[i + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function convertCartographicRadiansToCartesian(cartographicRadians) {\n        var length = cartographicRadians.length;\n        if (length === 3) {\n            scratchCartographic.longitude = cartographicRadians[0];\n            scratchCartographic.latitude = cartographicRadians[1];\n            scratchCartographic.height = cartographicRadians[2];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length);\n        for (var i = 0; i < length; i += 4) {\n            result[i] = cartographicRadians[i];\n\n            scratchCartographic.longitude = cartographicRadians[i + 1];\n            scratchCartographic.latitude = cartographicRadians[i + 2];\n            scratchCartographic.height = cartographicRadians[i + 3];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n\n            result[i + 1] = scratchCartesian.x;\n            result[i + 2] = scratchCartesian.y;\n            result[i + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function convertCartographicDegreesToCartesian(cartographicDegrees) {\n        var length = cartographicDegrees.length;\n        if (length === 3) {\n            scratchCartographic.longitude = CesiumMath.toRadians(cartographicDegrees[0]);\n            scratchCartographic.latitude = CesiumMath.toRadians(cartographicDegrees[1]);\n            scratchCartographic.height = cartographicDegrees[2];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length);\n        for (var i = 0; i < length; i += 4) {\n            result[i] = cartographicDegrees[i];\n\n            scratchCartographic.longitude = CesiumMath.toRadians(cartographicDegrees[i + 1]);\n            scratchCartographic.latitude = CesiumMath.toRadians(cartographicDegrees[i + 2]);\n            scratchCartographic.height = cartographicDegrees[i + 3];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n\n            result[i + 1] = scratchCartesian.x;\n            result[i + 2] = scratchCartesian.y;\n            result[i + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function unwrapCartesianInterval(czmlInterval) {\n        var cartesian = czmlInterval.cartesian;\n        if (defined(cartesian)) {\n            return cartesian;\n        }\n\n        var cartesianVelocity = czmlInterval.cartesianVelocity;\n        if (defined(cartesianVelocity)) {\n            return cartesianVelocity;\n        }\n\n        var unitCartesian = czmlInterval.unitCartesian;\n        if (defined(unitCartesian)) {\n            return unitCartesian;\n        }\n\n        var unitSpherical = czmlInterval.unitSpherical;\n        if (defined(unitSpherical)) {\n            return convertUnitSphericalToCartesian(unitSpherical);\n        }\n\n        var spherical = czmlInterval.spherical;\n        if (defined(spherical)) {\n            return convertSphericalToCartesian(spherical);\n        }\n\n        var cartographicRadians = czmlInterval.cartographicRadians;\n        if (defined(cartographicRadians)) {\n            return convertCartographicRadiansToCartesian(cartographicRadians);\n        }\n\n        var cartographicDegrees = czmlInterval.cartographicDegrees;\n        if (defined(cartographicDegrees)) {\n            return convertCartographicDegreesToCartesian(cartographicDegrees);\n        }\n\n        throw new RuntimeError(JSON.stringify(czmlInterval) + ' is not a valid CZML interval.');\n    }\n\n    function normalizePackedCartesianArray(array, startingIndex) {\n        Cartesian3.unpack(array, startingIndex, scratchCartesian);\n        Cartesian3.normalize(scratchCartesian, scratchCartesian);\n        Cartesian3.pack(scratchCartesian, array, startingIndex);\n    }\n\n    function unwrapUnitCartesianInterval(czmlInterval) {\n        var cartesian = unwrapCartesianInterval(czmlInterval);\n        if (cartesian.length === 3) {\n            normalizePackedCartesianArray(cartesian, 0);\n            return cartesian;\n        }\n\n        for (var i = 1; i < cartesian.length; i += 4) {\n            normalizePackedCartesianArray(cartesian, i);\n        }\n\n        return cartesian;\n    }\n\n    function normalizePackedQuaternionArray(array, startingIndex) {\n        Quaternion.unpack(array, startingIndex, scratchQuaternion);\n        Quaternion.normalize(scratchQuaternion, scratchQuaternion);\n        Quaternion.pack(scratchQuaternion, array, startingIndex);\n    }\n\n    function unwrapQuaternionInterval(czmlInterval) {\n        var unitQuaternion = czmlInterval.unitQuaternion;\n        if (defined(unitQuaternion)) {\n            if (unitQuaternion.length === 4) {\n                normalizePackedQuaternionArray(unitQuaternion, 0);\n                return unitQuaternion;\n            }\n\n            for (var i = 1; i < unitQuaternion.length; i += 5) {\n                normalizePackedQuaternionArray(unitQuaternion, i);\n            }\n        }\n        return unitQuaternion;\n    }\n\n    function getPropertyType(czmlInterval) {\n        // The associations in this function need to be kept in sync with the\n        // associations in unwrapInterval.\n\n        // Intentionally omitted due to conficts in CZML property names:\n        // * Image (conflicts with Uri)\n        // * Rotation (conflicts with Number)\n        //\n        // cartesianVelocity is also omitted due to incomplete support for\n        // derivative information in CZML properties.\n        // (Currently cartesianVelocity is hacked directly into the position processing code)\n        if (typeof czmlInterval === 'boolean') {\n            return Boolean;\n        } else if (typeof czmlInterval === 'number') {\n            return Number;\n        } else if (typeof czmlInterval === 'string') {\n            return String;\n        } else if (czmlInterval.hasOwnProperty('array')) {\n            return Array;\n        } else if (czmlInterval.hasOwnProperty('boolean')) {\n            return Boolean;\n        } else if (czmlInterval.hasOwnProperty('boundingRectangle')) {\n            return BoundingRectangle;\n        } else if (czmlInterval.hasOwnProperty('cartesian2')) {\n            return Cartesian2;\n        } else if (czmlInterval.hasOwnProperty('cartesian') ||\n                   czmlInterval.hasOwnProperty('spherical') ||\n                   czmlInterval.hasOwnProperty('cartographicRadians') ||\n                   czmlInterval.hasOwnProperty('cartographicDegrees')) {\n            return Cartesian3;\n        } else if (czmlInterval.hasOwnProperty('unitCartesian') ||\n                   czmlInterval.hasOwnProperty('unitSpherical')) {\n            return UnitCartesian3;\n        } else if (czmlInterval.hasOwnProperty('rgba') ||\n                   czmlInterval.hasOwnProperty('rgbaf')) {\n            return Color;\n        } else if (czmlInterval.hasOwnProperty('arcType')) {\n            return ArcType;\n        } else if (czmlInterval.hasOwnProperty('classificationType')) {\n            return ClassificationType;\n        } else if (czmlInterval.hasOwnProperty('colorBlendMode')) {\n            return ColorBlendMode;\n        } else if (czmlInterval.hasOwnProperty('cornerType')) {\n            return CornerType;\n        } else if (czmlInterval.hasOwnProperty('heightReference')) {\n            return HeightReference;\n        } else if (czmlInterval.hasOwnProperty('horizontalOrigin')) {\n            return HorizontalOrigin;\n        } else if (czmlInterval.hasOwnProperty('date')) {\n            return JulianDate;\n        } else if (czmlInterval.hasOwnProperty('labelStyle')) {\n            return LabelStyle;\n        } else if (czmlInterval.hasOwnProperty('number')) {\n            return Number;\n        } else if (czmlInterval.hasOwnProperty('nearFarScalar')) {\n            return NearFarScalar;\n        } else if (czmlInterval.hasOwnProperty('distanceDisplayCondition')) {\n            return DistanceDisplayCondition;\n        } else if (czmlInterval.hasOwnProperty('object') ||\n                   czmlInterval.hasOwnProperty('value')) {\n            return Object;\n        } else if (czmlInterval.hasOwnProperty('unitQuaternion')) {\n            return Quaternion;\n        } else if (czmlInterval.hasOwnProperty('shadowMode')) {\n            return ShadowMode;\n        } else if (czmlInterval.hasOwnProperty('string')) {\n            return String;\n        } else if (czmlInterval.hasOwnProperty('stripeOrientation')) {\n            return StripeOrientation;\n        } else if (czmlInterval.hasOwnProperty('wsen') ||\n                   czmlInterval.hasOwnProperty('wsenDegrees')) {\n            return Rectangle;\n        } else if (czmlInterval.hasOwnProperty('uri')) {\n            return Uri;\n        } else if (czmlInterval.hasOwnProperty('verticalOrigin')) {\n            return VerticalOrigin;\n        }\n        // fallback case\n        return Object;\n    }\n\n    function unwrapInterval(type, czmlInterval, sourceUri) {\n        // The associations in this function need to be kept in sync with the\n        // associations in getPropertyType\n        switch (type) {\n            case ArcType:\n                return ArcType[defaultValue(czmlInterval.arcType, czmlInterval)];\n            case Array:\n                return czmlInterval.array;\n            case Boolean:\n                return defaultValue(czmlInterval['boolean'], czmlInterval);\n            case BoundingRectangle:\n                return czmlInterval.boundingRectangle;\n            case Cartesian2:\n                return czmlInterval.cartesian2;\n            case Cartesian3:\n                return unwrapCartesianInterval(czmlInterval);\n            case UnitCartesian3:\n                return unwrapUnitCartesianInterval(czmlInterval);\n            case Color:\n                return unwrapColorInterval(czmlInterval);\n            case ClassificationType:\n                return ClassificationType[defaultValue(czmlInterval.classificationType, czmlInterval)];\n            case ColorBlendMode:\n                return ColorBlendMode[defaultValue(czmlInterval.colorBlendMode, czmlInterval)];\n            case CornerType:\n                return CornerType[defaultValue(czmlInterval.cornerType, czmlInterval)];\n            case HeightReference:\n                return HeightReference[defaultValue(czmlInterval.heightReference, czmlInterval)];\n            case HorizontalOrigin:\n                return HorizontalOrigin[defaultValue(czmlInterval.horizontalOrigin, czmlInterval)];\n            case Image:\n                return unwrapUriInterval(czmlInterval, sourceUri);\n            case JulianDate:\n                return JulianDate.fromIso8601(defaultValue(czmlInterval.date, czmlInterval));\n            case LabelStyle:\n                return LabelStyle[defaultValue(czmlInterval.labelStyle, czmlInterval)];\n            case Number:\n                return defaultValue(czmlInterval.number, czmlInterval);\n            case NearFarScalar:\n                return czmlInterval.nearFarScalar;\n            case DistanceDisplayCondition:\n                return czmlInterval.distanceDisplayCondition;\n            case Object:\n                return defaultValue(defaultValue(czmlInterval.object, czmlInterval.value), czmlInterval);\n            case Quaternion:\n                return unwrapQuaternionInterval(czmlInterval);\n            case Rectangle:\n                return unwrapRectangleInterval(czmlInterval);\n            case Rotation:\n                return defaultValue(czmlInterval.number, czmlInterval);\n            case ShadowMode:\n                return ShadowMode[defaultValue(defaultValue(czmlInterval.shadowMode, czmlInterval.shadows), czmlInterval)];\n            case String:\n                return defaultValue(czmlInterval.string, czmlInterval);\n            case StripeOrientation:\n                return StripeOrientation[defaultValue(czmlInterval.stripeOrientation, czmlInterval)];\n            case Uri:\n                return unwrapUriInterval(czmlInterval, sourceUri);\n            case VerticalOrigin:\n                return VerticalOrigin[defaultValue(czmlInterval.verticalOrigin, czmlInterval)];\n            default:\n                throw new RuntimeError(type);\n        }\n    }\n\n    var interpolators = {\n        HERMITE : HermitePolynomialApproximation,\n        LAGRANGE : LagrangePolynomialApproximation,\n        LINEAR : LinearApproximation\n    };\n\n    function updateInterpolationSettings(packetData, property) {\n        var interpolationAlgorithm = packetData.interpolationAlgorithm;\n        var interpolationDegree = packetData.interpolationDegree;\n        if (defined(interpolationAlgorithm) || defined(interpolationDegree)) {\n            property.setInterpolationOptions({\n                interpolationAlgorithm : interpolators[interpolationAlgorithm],\n                interpolationDegree : interpolationDegree\n            });\n        }\n\n        var forwardExtrapolationType = packetData.forwardExtrapolationType;\n        if (defined(forwardExtrapolationType)) {\n            property.forwardExtrapolationType = ExtrapolationType[forwardExtrapolationType];\n        }\n\n        var forwardExtrapolationDuration = packetData.forwardExtrapolationDuration;\n        if (defined(forwardExtrapolationDuration)) {\n            property.forwardExtrapolationDuration = forwardExtrapolationDuration;\n        }\n\n        var backwardExtrapolationType = packetData.backwardExtrapolationType;\n        if (defined(backwardExtrapolationType)) {\n            property.backwardExtrapolationType = ExtrapolationType[backwardExtrapolationType];\n        }\n\n        var backwardExtrapolationDuration = packetData.backwardExtrapolationDuration;\n        if (defined(backwardExtrapolationDuration)) {\n            property.backwardExtrapolationDuration = backwardExtrapolationDuration;\n        }\n    }\n\n    var iso8601Scratch = {\n        iso8601 : undefined\n    };\n\n    function intervalFromString(intervalString) {\n        if (!defined(intervalString)) {\n            return undefined;\n        }\n        iso8601Scratch.iso8601 = intervalString;\n        return TimeInterval.fromIso8601(iso8601Scratch);\n    }\n\n    function wrapPropertyInInfiniteInterval(property) {\n        var interval = Iso8601.MAXIMUM_INTERVAL.clone();\n        interval.data = property;\n        return interval;\n    }\n\n    function convertPropertyToComposite(property) {\n        // Create the composite and add the old property, wrapped in an infinite interval.\n        var composite = new CompositeProperty();\n        composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n        return composite;\n    }\n\n    function convertPositionPropertyToComposite(property) {\n        // Create the composite and add the old property, wrapped in an infinite interval.\n        var composite = new CompositePositionProperty(property.referenceFrame);\n        composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n        return composite;\n    }\n\n    function processProperty(type, object, propertyName, packetData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(packetData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var packedLength;\n        var unwrappedInterval;\n        var unwrappedIntervalLength;\n\n        // CZML properties can be defined in many ways.  Most ways represent a structure for\n        // encoding a single value (number, string, cartesian, etc.)  Regardless of the value type,\n        // if it encodes a single value it will get loaded into a ConstantProperty eventually.\n        // Alternatively, there are ways of defining a property that require specialized\n        // client-side representation. Currently, these are ReferenceProperty,\n        // and client-side velocity computation properties such as VelocityVectorProperty.\n        var isValue = !defined(packetData.reference) && !defined(packetData.velocityReference);\n        var hasInterval = defined(combinedInterval) && !combinedInterval.equals(Iso8601.MAXIMUM_INTERVAL);\n\n        if (packetData.delete === true) {\n            // If deleting this property for all time, we can simply set to undefined and return.\n            if (!hasInterval) {\n                object[propertyName] = undefined;\n                return;\n            }\n\n            // Deleting depends on the type of property we have.\n            return removePropertyData(object[propertyName], combinedInterval);\n        }\n\n        var isSampled = false;\n\n        if (isValue) {\n            unwrappedInterval = unwrapInterval(type, packetData, sourceUri);\n            if (!defined(unwrappedInterval)) {\n                // not a known value type, bail\n                return;\n            }\n            packedLength = defaultValue(type.packedLength, 1);\n            unwrappedIntervalLength = defaultValue(unwrappedInterval.length, 1);\n            isSampled = !defined(packetData.array) && (typeof unwrappedInterval !== 'string') && (unwrappedIntervalLength > packedLength) && (type !== Object);\n        }\n\n        // Rotation is a special case because it represents a native type (Number)\n        // and therefore does not need to be unpacked when loaded as a constant value.\n        var needsUnpacking = typeof type.unpack === 'function' && type !== Rotation;\n\n        // Any time a constant value is assigned, it completely blows away anything else.\n        if (!isSampled && !hasInterval) {\n            if (isValue) {\n                object[propertyName] = new ConstantProperty(needsUnpacking ? type.unpack(unwrappedInterval, 0) : unwrappedInterval);\n            } else {\n                object[propertyName] = createSpecializedProperty(type, entityCollection, packetData);\n            }\n            return;\n        }\n\n        var property = object[propertyName];\n\n        var epoch;\n        var packetEpoch = packetData.epoch;\n        if (defined(packetEpoch)) {\n            epoch = JulianDate.fromIso8601(packetEpoch);\n        }\n\n        // Without an interval, any sampled value is infinite, meaning it completely\n        // replaces any non-sampled property that may exist.\n        if (isSampled && !hasInterval) {\n            if (!(property instanceof SampledProperty)) {\n                object[propertyName] = property = new SampledProperty(type);\n            }\n            property.addSamplesPackedArray(unwrappedInterval, epoch);\n            updateInterpolationSettings(packetData, property);\n            return;\n        }\n\n        var interval;\n\n        // A constant value with an interval is normally part of a TimeIntervalCollection,\n        // However, if the current property is not a time-interval collection, we need\n        // to turn it into a Composite, preserving the old data with the new interval.\n        if (!isSampled && hasInterval) {\n            // Create a new interval for the constant value.\n            combinedInterval = combinedInterval.clone();\n            if (isValue) {\n                combinedInterval.data = needsUnpacking ? type.unpack(unwrappedInterval, 0) : unwrappedInterval;\n            } else {\n                combinedInterval.data = createSpecializedProperty(type, entityCollection, packetData);\n            }\n\n            // If no property exists, simply use a new interval collection\n            if (!defined(property)) {\n                object[propertyName] = property = isValue ? new TimeIntervalCollectionProperty() : new CompositeProperty();\n            }\n\n            if (isValue && property instanceof TimeIntervalCollectionProperty) {\n                // If we created a collection, or it already was one, use it.\n                property.intervals.addInterval(combinedInterval);\n            } else if (property instanceof CompositeProperty) {\n                // If the collection was already a CompositeProperty, use it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantProperty(combinedInterval.data);\n                }\n                property.intervals.addInterval(combinedInterval);\n            } else {\n                // Otherwise, create a CompositeProperty but preserve the existing data.\n                object[propertyName] = property = convertPropertyToComposite(property);\n\n                // Change the new data to a ConstantProperty and add it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantProperty(combinedInterval.data);\n                }\n                property.intervals.addInterval(combinedInterval);\n            }\n\n            return;\n        }\n\n        // isSampled && hasInterval\n        if (!defined(property)) {\n            object[propertyName] = property = new CompositeProperty();\n        }\n\n        // Create a CompositeProperty but preserve the existing data.\n        if (!(property instanceof CompositeProperty)) {\n            object[propertyName] = property = convertPropertyToComposite(property);\n        }\n\n        // Check if the interval already exists in the composite.\n        var intervals = property.intervals;\n        interval = intervals.findInterval(combinedInterval);\n        if (!defined(interval) || !(interval.data instanceof SampledProperty)) {\n            // If not, create a SampledProperty for it.\n            interval = combinedInterval.clone();\n            interval.data = new SampledProperty(type);\n            intervals.addInterval(interval);\n        }\n        interval.data.addSamplesPackedArray(unwrappedInterval, epoch);\n        updateInterpolationSettings(packetData, interval.data);\n    }\n\n    function removePropertyData(property, interval) {\n        if (property instanceof SampledProperty) {\n            property.removeSamples(interval);\n            return;\n        } else if (property instanceof TimeIntervalCollectionProperty) {\n            property.intervals.removeInterval(interval);\n            return;\n        } else if (property instanceof CompositeProperty) {\n            var intervals = property.intervals;\n            for (var i = 0; i < intervals.length; ++i) {\n                var intersection = TimeInterval.intersect(intervals.get(i), interval, scratchTimeInterval);\n                if (!intersection.isEmpty) {\n                    // remove data from the contained properties\n                    removePropertyData(intersection.data, interval);\n                }\n            }\n            // remove the intervals from the composite\n            intervals.removeInterval(interval);\n            return;\n        }\n    }\n\n    function processPacketData(type, object, propertyName, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                processProperty(type, object, propertyName, packetData[i], interval, sourceUri, entityCollection);\n            }\n        } else {\n            processProperty(type, object, propertyName, packetData, interval, sourceUri, entityCollection);\n        }\n    }\n\n    function processPositionProperty(object, propertyName, packetData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(packetData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var numberOfDerivatives = defined(packetData.cartesianVelocity) ? 1 : 0;\n        var packedLength = Cartesian3.packedLength * (numberOfDerivatives + 1);\n        var unwrappedInterval;\n        var unwrappedIntervalLength;\n        var isValue = !defined(packetData.reference);\n        var hasInterval = defined(combinedInterval) && !combinedInterval.equals(Iso8601.MAXIMUM_INTERVAL);\n\n        if (packetData.delete === true) {\n            // If deleting this property for all time, we can simply set to undefined and return.\n            if (!hasInterval) {\n                object[propertyName] = undefined;\n                return;\n            }\n\n            // Deleting depends on the type of property we have.\n            return removePositionPropertyData(object[propertyName], combinedInterval);\n        }\n\n        var referenceFrame;\n        var isSampled = false;\n\n        if (isValue) {\n            if (defined(packetData.referenceFrame)) {\n                referenceFrame = ReferenceFrame[packetData.referenceFrame];\n            }\n            referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n            unwrappedInterval = unwrapCartesianInterval(packetData);\n            unwrappedIntervalLength = defaultValue(unwrappedInterval.length, 1);\n            isSampled = unwrappedIntervalLength > packedLength;\n        }\n\n        // Any time a constant value is assigned, it completely blows away anything else.\n        if (!isSampled && !hasInterval) {\n            if (isValue) {\n                object[propertyName] = new ConstantPositionProperty(Cartesian3.unpack(unwrappedInterval), referenceFrame);\n            } else {\n                object[propertyName] = createReferenceProperty(entityCollection, packetData.reference);\n            }\n            return;\n        }\n\n        var property = object[propertyName];\n\n        var epoch;\n        var packetEpoch = packetData.epoch;\n        if (defined(packetEpoch)) {\n            epoch = JulianDate.fromIso8601(packetEpoch);\n        }\n\n        // Without an interval, any sampled value is infinite, meaning it completely\n        // replaces any non-sampled property that may exist.\n        if (isSampled && !hasInterval) {\n            if (!(property instanceof SampledPositionProperty) || (defined(referenceFrame) && property.referenceFrame !== referenceFrame)) {\n                object[propertyName] = property = new SampledPositionProperty(referenceFrame, numberOfDerivatives);\n            }\n            property.addSamplesPackedArray(unwrappedInterval, epoch);\n            updateInterpolationSettings(packetData, property);\n            return;\n        }\n\n        var interval;\n\n        // A constant value with an interval is normally part of a TimeIntervalCollection,\n        // However, if the current property is not a time-interval collection, we need\n        // to turn it into a Composite, preserving the old data with the new interval.\n        if (!isSampled && hasInterval) {\n            // Create a new interval for the constant value.\n            combinedInterval = combinedInterval.clone();\n            if (isValue) {\n                combinedInterval.data = Cartesian3.unpack(unwrappedInterval);\n            } else {\n                combinedInterval.data = createReferenceProperty(entityCollection, packetData.reference);\n            }\n\n            // If no property exists, simply use a new interval collection\n            if (!defined(property)) {\n                if (isValue) {\n                    property = new TimeIntervalCollectionPositionProperty(referenceFrame);\n                } else {\n                    property = new CompositePositionProperty(referenceFrame);\n                }\n                object[propertyName] = property;\n            }\n\n            if (isValue && property instanceof TimeIntervalCollectionPositionProperty && (defined(referenceFrame) && property.referenceFrame === referenceFrame)) {\n                // If we create a collection, or it already existed, use it.\n                property.intervals.addInterval(combinedInterval);\n            } else if (property instanceof CompositePositionProperty) {\n                // If the collection was already a CompositePositionProperty, use it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantPositionProperty(combinedInterval.data, referenceFrame);\n                }\n                property.intervals.addInterval(combinedInterval);\n            } else {\n                // Otherwise, create a CompositePositionProperty but preserve the existing data.\n                object[propertyName] = property = convertPositionPropertyToComposite(property);\n\n                // Change the new data to a ConstantPositionProperty and add it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantPositionProperty(combinedInterval.data, referenceFrame);\n                }\n                property.intervals.addInterval(combinedInterval);\n            }\n\n            return;\n        }\n\n        // isSampled && hasInterval\n        if (!defined(property)) {\n            object[propertyName] = property = new CompositePositionProperty(referenceFrame);\n        } else if (!(property instanceof CompositePositionProperty)) {\n            // Create a CompositeProperty but preserve the existing data.\n            object[propertyName] = property = convertPositionPropertyToComposite(property);\n        }\n\n        // Check if the interval already exists in the composite.\n        var intervals = property.intervals;\n        interval = intervals.findInterval(combinedInterval);\n        if (!defined(interval) || !(interval.data instanceof SampledPositionProperty) || (defined(referenceFrame) && interval.data.referenceFrame !== referenceFrame)) {\n            // If not, create a SampledPositionProperty for it.\n            interval = combinedInterval.clone();\n            interval.data = new SampledPositionProperty(referenceFrame, numberOfDerivatives);\n            intervals.addInterval(interval);\n        }\n        interval.data.addSamplesPackedArray(unwrappedInterval, epoch);\n        updateInterpolationSettings(packetData, interval.data);\n    }\n\n    function removePositionPropertyData(property, interval) {\n        if (property instanceof SampledPositionProperty) {\n            property.removeSamples(interval);\n            return;\n        } else if (property instanceof TimeIntervalCollectionPositionProperty) {\n            property.intervals.removeInterval(interval);\n            return;\n        } else if (property instanceof CompositePositionProperty) {\n            var intervals = property.intervals;\n            for (var i = 0; i < intervals.length; ++i) {\n                var intersection = TimeInterval.intersect(intervals.get(i), interval, scratchTimeInterval);\n                if (!intersection.isEmpty) {\n                    // remove data from the contained properties\n                    removePositionPropertyData(intersection.data, interval);\n                }\n            }\n            // remove the intervals from the composite\n            intervals.removeInterval(interval);\n            return;\n        }\n    }\n\n    function processPositionPacketData(object, propertyName, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                processPositionProperty(object, propertyName, packetData[i], interval, sourceUri, entityCollection);\n            }\n        } else {\n            processPositionProperty(object, propertyName, packetData, interval, sourceUri, entityCollection);\n        }\n    }\n\n    function processMaterialProperty(object, propertyName, packetData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(packetData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var property = object[propertyName];\n        var existingMaterial;\n        var existingInterval;\n\n        if (defined(combinedInterval)) {\n            if (!(property instanceof CompositeMaterialProperty)) {\n                property = new CompositeMaterialProperty();\n                object[propertyName] = property;\n            }\n            //See if we already have data at that interval.\n            var thisIntervals = property.intervals;\n            existingInterval = thisIntervals.findInterval({\n                start : combinedInterval.start,\n                stop : combinedInterval.stop\n            });\n            if (defined(existingInterval)) {\n                //We have an interval, but we need to make sure the\n                //new data is the same type of material as the old data.\n                existingMaterial = existingInterval.data;\n            } else {\n                //If not, create it.\n                existingInterval = combinedInterval.clone();\n                thisIntervals.addInterval(existingInterval);\n            }\n        } else {\n            existingMaterial = property;\n        }\n\n        var materialData;\n        if (defined(packetData.solidColor)) {\n            if (!(existingMaterial instanceof ColorMaterialProperty)) {\n                existingMaterial = new ColorMaterialProperty();\n            }\n            materialData = packetData.solidColor;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, undefined, entityCollection);\n        } else if (defined(packetData.grid)) {\n            if (!(existingMaterial instanceof GridMaterialProperty)) {\n                existingMaterial = new GridMaterialProperty();\n            }\n            materialData = packetData.grid;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'cellAlpha', materialData.cellAlpha, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'lineCount', materialData.lineCount, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'lineThickness', materialData.lineThickness, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'lineOffset', materialData.lineOffset, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.image)) {\n            if (!(existingMaterial instanceof ImageMaterialProperty)) {\n                existingMaterial = new ImageMaterialProperty();\n            }\n            materialData = packetData.image;\n            processPacketData(Image, existingMaterial, 'image', materialData.image, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'repeat', materialData.repeat, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Boolean, existingMaterial, 'transparent', materialData.transparent, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.stripe)) {\n            if (!(existingMaterial instanceof StripeMaterialProperty)) {\n                existingMaterial = new StripeMaterialProperty();\n            }\n            materialData = packetData.stripe;\n            processPacketData(StripeOrientation, existingMaterial, 'orientation', materialData.orientation, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'evenColor', materialData.evenColor, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'oddColor', materialData.oddColor, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'offset', materialData.offset, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'repeat', materialData.repeat, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.polylineOutline)) {\n            if (!(existingMaterial instanceof PolylineOutlineMaterialProperty)) {\n                existingMaterial = new PolylineOutlineMaterialProperty();\n            }\n            materialData = packetData.polylineOutline;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'outlineColor', materialData.outlineColor, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'outlineWidth', materialData.outlineWidth, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.polylineGlow)) {\n            if (!(existingMaterial instanceof PolylineGlowMaterialProperty)) {\n                existingMaterial = new PolylineGlowMaterialProperty();\n            }\n            materialData = packetData.polylineGlow;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'glowPower', materialData.glowPower, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'taperPower', materialData.taperPower, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.polylineArrow)) {\n            if (!(existingMaterial instanceof PolylineArrowMaterialProperty)) {\n                existingMaterial = new PolylineArrowMaterialProperty();\n            }\n            materialData = packetData.polylineArrow;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, undefined, entityCollection);\n        } else if (defined(packetData.polylineDash)) {\n            if (!(existingMaterial instanceof PolylineDashMaterialProperty)) {\n                existingMaterial = new PolylineDashMaterialProperty();\n            }\n            materialData = packetData.polylineDash;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, undefined, entityCollection);\n            processPacketData(Color, existingMaterial, 'gapColor', materialData.gapColor, undefined, undefined, entityCollection);\n            processPacketData(Number, existingMaterial, 'dashLength', materialData.dashLength, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'dashPattern', materialData.dashPattern, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.checkerboard)) {\n            if (!(existingMaterial instanceof CheckerboardMaterialProperty)) {\n                existingMaterial = new CheckerboardMaterialProperty();\n            }\n            materialData = packetData.checkerboard;\n            processPacketData(Color, existingMaterial, 'evenColor', materialData.evenColor, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'oddColor', materialData.oddColor, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'repeat', materialData.repeat, undefined, sourceUri, entityCollection);\n        }\n\n        if (defined(existingInterval)) {\n            existingInterval.data = existingMaterial;\n        } else {\n            object[propertyName] = existingMaterial;\n        }\n    }\n\n    function processMaterialPacketData(object, propertyName, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                processMaterialProperty(object, propertyName, packetData[i], interval, sourceUri, entityCollection);\n            }\n        } else {\n            processMaterialProperty(object, propertyName, packetData, interval, sourceUri, entityCollection);\n        }\n    }\n\n    function processName(entity, packet, entityCollection, sourceUri) {\n        var nameData = packet.name;\n        if (defined(nameData)) {\n            entity.name = packet.name;\n        }\n    }\n\n    function processDescription(entity, packet, entityCollection, sourceUri) {\n        var descriptionData = packet.description;\n        if (defined(descriptionData)) {\n            processPacketData(String, entity, 'description', descriptionData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processPosition(entity, packet, entityCollection, sourceUri) {\n        var positionData = packet.position;\n        if (defined(positionData)) {\n            processPositionPacketData(entity, 'position', positionData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processViewFrom(entity, packet, entityCollection, sourceUri) {\n        var viewFromData = packet.viewFrom;\n        if (defined(viewFromData)) {\n            processPacketData(Cartesian3, entity, 'viewFrom', viewFromData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processOrientation(entity, packet, entityCollection, sourceUri) {\n        var orientationData = packet.orientation;\n        if (defined(orientationData)) {\n            processPacketData(Quaternion, entity, 'orientation', orientationData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processProperties(entity, packet, entityCollection, sourceUri) {\n        var propertiesData = packet.properties;\n        if (defined(propertiesData)) {\n            if (!defined(entity.properties)) {\n                entity.properties = new PropertyBag();\n            }\n\n            // We cannot simply call processPacketData(entity, 'properties', propertyData, undefined, sourceUri, entityCollection)\n            // because each property of \"properties\" may vary separately.\n            // The properties will be accessible as entity.properties.myprop.getValue(time).\n\n            for (var key in propertiesData) {\n                if (propertiesData.hasOwnProperty(key)) {\n                    if (!entity.properties.hasProperty(key)) {\n                        entity.properties.addProperty(key);\n                    }\n\n                    var propertyData = propertiesData[key];\n                    if (isArray(propertyData)) {\n                        for (var i = 0, len = propertyData.length; i < len; ++i) {\n                            processProperty(getPropertyType(propertyData[i]), entity.properties, key, propertyData[i], undefined, sourceUri, entityCollection);\n                        }\n                    } else {\n                        processProperty(getPropertyType(propertyData), entity.properties, key, propertyData, undefined, sourceUri, entityCollection);\n                    }\n                }\n            }\n        }\n    }\n\n    function processReferencesArrayPacketData(object, propertyName, references, interval, entityCollection, PropertyArrayType, CompositePropertyArrayType) {\n        var properties = references.map(function(reference) {\n            return createReferenceProperty(entityCollection, reference);\n        });\n\n        if (defined(interval)) {\n            interval = intervalFromString(interval);\n            var property = object[propertyName];\n            if (!(property instanceof CompositePropertyArrayType)) {\n                // If the property was not already a CompositeProperty,\n                // create a CompositeProperty but preserve the existing data.\n\n                // Create the composite and add the old property, wrapped in an infinite interval.\n                var composite = new CompositePropertyArrayType();\n                composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n\n                object[propertyName] = property = composite;\n            }\n\n            interval.data = new PropertyArrayType(properties);\n            property.intervals.addInterval(interval);\n        } else {\n            object[propertyName] = new PropertyArrayType(properties);\n        }\n    }\n\n    function processArrayPacketData(object, propertyName, packetData, entityCollection) {\n        var references = packetData.references;\n        if (defined(references)) {\n            processReferencesArrayPacketData(object, propertyName, references, packetData.interval, entityCollection, PropertyArray, CompositeProperty);\n        } else {\n            processPacketData(Array, object, propertyName, packetData, undefined, undefined, entityCollection);\n        }\n    }\n\n    function processArray(object, propertyName, packetData, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, length = packetData.length; i < length; ++i) {\n                processArrayPacketData(object, propertyName, packetData[i], entityCollection);\n            }\n        } else {\n            processArrayPacketData(object, propertyName, packetData, entityCollection);\n        }\n    }\n\n    function processPositionArrayPacketData(object, propertyName, packetData, entityCollection) {\n        var references = packetData.references;\n        if (defined(references)) {\n            processReferencesArrayPacketData(object, propertyName, references, packetData.interval, entityCollection, PositionPropertyArray, CompositePositionProperty);\n        } else {\n            if (defined(packetData.cartesian)) {\n                packetData.array = Cartesian3.unpackArray(packetData.cartesian);\n            } else if (defined(packetData.cartographicRadians)) {\n                packetData.array = Cartesian3.fromRadiansArrayHeights(packetData.cartographicRadians);\n            } else if (defined(packetData.cartographicDegrees)) {\n                packetData.array = Cartesian3.fromDegreesArrayHeights(packetData.cartographicDegrees);\n            }\n\n            if (defined(packetData.array)) {\n                processPacketData(Array, object, propertyName, packetData, undefined, undefined, entityCollection);\n            }\n        }\n    }\n\n    function processPositionArray(object, propertyName, packetData, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, length = packetData.length; i < length; ++i) {\n                processPositionArrayPacketData(object, propertyName, packetData[i], entityCollection);\n            }\n        } else {\n            processPositionArrayPacketData(object, propertyName, packetData, entityCollection);\n        }\n    }\n\n    function unpackCartesianArray(array) {\n        return Cartesian3.unpackArray(array);\n    }\n\n    function unpackCartographicRadiansArray(array) {\n        return Cartesian3.fromRadiansArrayHeights(array);\n    }\n\n    function unpackCartographicDegreesArray(array) {\n        return Cartesian3.fromDegreesArrayHeights(array);\n    }\n\n    function processPositionArrayOfArraysPacketData(object, propertyName, packetData, entityCollection) {\n        var references = packetData.references;\n        if (defined(references)) {\n            var properties = references.map(function(referenceArray) {\n                var tempObj = {};\n                processReferencesArrayPacketData(tempObj, 'positions', referenceArray, packetData.interval, entityCollection, PositionPropertyArray, CompositePositionProperty);\n                return tempObj.positions;\n            });\n            object[propertyName] = new PositionPropertyArray(properties);\n        } else {\n            if (defined(packetData.cartesian)) {\n                packetData.array = packetData.cartesian.map(unpackCartesianArray);\n            } else if (defined(packetData.cartographicRadians)) {\n                packetData.array = packetData.cartographicRadians.map(unpackCartographicRadiansArray);\n            } else if (defined(packetData.cartographicDegrees)) {\n                packetData.array = packetData.cartographicDegrees.map(unpackCartographicDegreesArray);\n            }\n\n            if (defined(packetData.array)) {\n                processPacketData(Array, object, propertyName, packetData, undefined, undefined, entityCollection);\n            }\n        }\n    }\n\n    function processPositionArrayOfArrays(object, propertyName, packetData, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, length = packetData.length; i < length; ++i) {\n                processPositionArrayOfArraysPacketData(object, propertyName, packetData[i], entityCollection);\n            }\n        } else {\n            processPositionArrayOfArraysPacketData(object, propertyName, packetData, entityCollection);\n        }\n    }\n\n    function processAvailability(entity, packet, entityCollection, sourceUri) {\n        var packetData = packet.availability;\n        if (!defined(packetData)) {\n            return;\n        }\n\n        var intervals;\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                if (!defined(intervals)) {\n                    intervals = new TimeIntervalCollection();\n                }\n                intervals.addInterval(intervalFromString(packetData[i]));\n            }\n        } else {\n            intervals = new TimeIntervalCollection();\n            intervals.addInterval(intervalFromString(packetData));\n        }\n        entity.availability = intervals;\n    }\n\n    function processAlignedAxis(billboard, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        processPacketData(UnitCartesian3, billboard, 'alignedAxis', packetData, interval, sourceUri, entityCollection);\n    }\n\n    function processBillboard(entity, packet, entityCollection, sourceUri) {\n        var billboardData = packet.billboard;\n        if (!defined(billboardData)) {\n            return;\n        }\n\n        var interval = intervalFromString(billboardData.interval);\n        var billboard = entity.billboard;\n        if (!defined(billboard)) {\n            entity.billboard = billboard = new BillboardGraphics();\n        }\n\n        processPacketData(Boolean, billboard, 'show', billboardData.show, interval, sourceUri, entityCollection);\n        processPacketData(Image, billboard, 'image', billboardData.image, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'scale', billboardData.scale, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian2, billboard, 'pixelOffset', billboardData.pixelOffset, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, billboard, 'eyeOffset', billboardData.eyeOffset, interval, sourceUri, entityCollection);\n        processPacketData(HorizontalOrigin, billboard, 'horizontalOrigin', billboardData.horizontalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(VerticalOrigin, billboard, 'verticalOrigin', billboardData.verticalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, billboard, 'heightReference', billboardData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, billboard, 'color', billboardData.color, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, billboard, 'rotation', billboardData.rotation, interval, sourceUri, entityCollection);\n        processAlignedAxis(billboard, billboardData.alignedAxis, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, billboard, 'sizeInMeters', billboardData.sizeInMeters, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'width', billboardData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'height', billboardData.height, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, billboard, 'scaleByDistance', billboardData.scaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, billboard, 'translucencyByDistance', billboardData.translucencyByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, billboard, 'pixelOffsetScaleByDistance', billboardData.pixelOffsetScaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(BoundingRectangle, billboard, 'imageSubRegion', billboardData.imageSubRegion, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, billboard, 'distanceDisplayCondition', billboardData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'disableDepthTestDistance', billboardData.disableDepthTestDistance, interval, sourceUri, entityCollection);\n    }\n\n    function processBox(entity, packet, entityCollection, sourceUri) {\n        var boxData = packet.box;\n        if (!defined(boxData)) {\n            return;\n        }\n\n        var interval = intervalFromString(boxData.interval);\n        var box = entity.box;\n        if (!defined(box)) {\n            entity.box = box = new BoxGraphics();\n        }\n\n        processPacketData(Boolean, box, 'show', boxData.show, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, box, 'dimensions', boxData.dimensions, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, box, 'heightReference', boxData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, box, 'fill', boxData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(box, 'material', boxData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, box, 'outline', boxData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, box, 'outlineColor', boxData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, box, 'outlineWidth', boxData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, box, 'shadows', boxData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, box, 'distanceDisplayCondition', boxData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processCorridor(entity, packet, entityCollection, sourceUri) {\n        var corridorData = packet.corridor;\n        if (!defined(corridorData)) {\n            return;\n        }\n\n        var interval = intervalFromString(corridorData.interval);\n        var corridor = entity.corridor;\n        if (!defined(corridor)) {\n            entity.corridor = corridor = new CorridorGraphics();\n        }\n\n        processPacketData(Boolean, corridor, 'show', corridorData.show, interval, sourceUri, entityCollection);\n        processPositionArray(corridor, 'positions', corridorData.positions, entityCollection);\n        processPacketData(Number, corridor, 'width', corridorData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'height', corridorData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, corridor, 'heightReference', corridorData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'extrudedHeight', corridorData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, corridor, 'extrudedHeightReference', corridorData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(CornerType, corridor, 'cornerType', corridorData.cornerType, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'granularity', corridorData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, corridor, 'fill', corridorData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(corridor, 'material', corridorData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, corridor, 'outline', corridorData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, corridor, 'outlineColor', corridorData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'outlineWidth', corridorData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, corridor, 'shadows', corridorData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, corridor, 'distanceDisplayCondition', corridorData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, corridor, 'classificationType', corridorData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'zIndex', corridorData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function processCylinder(entity, packet, entityCollection, sourceUri) {\n        var cylinderData = packet.cylinder;\n        if (!defined(cylinderData)) {\n            return;\n        }\n\n        var interval = intervalFromString(cylinderData.interval);\n        var cylinder = entity.cylinder;\n        if (!defined(cylinder)) {\n            entity.cylinder = cylinder = new CylinderGraphics();\n        }\n\n        processPacketData(Boolean, cylinder, 'show', cylinderData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'length', cylinderData.length, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'topRadius', cylinderData.topRadius, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'bottomRadius', cylinderData.bottomRadius, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, cylinder, 'heightReference', cylinderData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, cylinder, 'fill', cylinderData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(cylinder, 'material', cylinderData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, cylinder, 'outline', cylinderData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, cylinder, 'outlineColor', cylinderData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'outlineWidth', cylinderData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'numberOfVerticalLines', cylinderData.numberOfVerticalLines, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'slices', cylinderData.slices, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, cylinder, 'shadows', cylinderData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, cylinder, 'distanceDisplayCondition', cylinderData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processDocument(packet, dataSource) {\n        var version = packet.version;\n        if (defined(version)) {\n            if (typeof version === 'string') {\n                var tokens = version.split('.');\n                if (tokens.length === 2) {\n                    if (tokens[0] !== '1') {\n                        throw new RuntimeError('Cesium only supports CZML version 1.');\n                    }\n                    dataSource._version = version;\n                }\n            }\n        }\n\n        if (!defined(dataSource._version)) {\n            throw new RuntimeError('CZML version information invalid.  It is expected to be a property on the document object in the <Major>.<Minor> version format.');\n        }\n\n        var documentPacket = dataSource._documentPacket;\n\n        if (defined(packet.name)) {\n            documentPacket.name = packet.name;\n        }\n\n        var clockPacket = packet.clock;\n        if (defined(clockPacket)) {\n            var clock = documentPacket.clock;\n            if (!defined(clock)) {\n                documentPacket.clock = {\n                    interval : clockPacket.interval,\n                    currentTime : clockPacket.currentTime,\n                    range : clockPacket.range,\n                    step : clockPacket.step,\n                    multiplier : clockPacket.multiplier\n                };\n            } else {\n                clock.interval = defaultValue(clockPacket.interval, clock.interval);\n                clock.currentTime = defaultValue(clockPacket.currentTime, clock.currentTime);\n                clock.range = defaultValue(clockPacket.range, clock.range);\n                clock.step = defaultValue(clockPacket.step, clock.step);\n                clock.multiplier = defaultValue(clockPacket.multiplier, clock.multiplier);\n            }\n        }\n    }\n\n    function processEllipse(entity, packet, entityCollection, sourceUri) {\n        var ellipseData = packet.ellipse;\n        if (!defined(ellipseData)) {\n            return;\n        }\n\n        var interval = intervalFromString(ellipseData.interval);\n        var ellipse = entity.ellipse;\n        if (!defined(ellipse)) {\n            entity.ellipse = ellipse = new EllipseGraphics();\n        }\n\n        processPacketData(Boolean, ellipse, 'show', ellipseData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'semiMajorAxis', ellipseData.semiMajorAxis, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'semiMinorAxis', ellipseData.semiMinorAxis, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'height', ellipseData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, ellipse, 'heightReference', ellipseData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'extrudedHeight', ellipseData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, ellipse, 'extrudedHeightReference', ellipseData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, ellipse, 'rotation', ellipseData.rotation, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, ellipse, 'stRotation', ellipseData.stRotation, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'granularity', ellipseData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipse, 'fill', ellipseData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(ellipse, 'material', ellipseData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipse, 'outline', ellipseData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, ellipse, 'outlineColor', ellipseData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'outlineWidth', ellipseData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'numberOfVerticalLines', ellipseData.numberOfVerticalLines, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, ellipse, 'shadows', ellipseData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, ellipse, 'distanceDisplayCondition', ellipseData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, ellipse, 'classificationType', ellipseData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'zIndex', ellipseData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function processEllipsoid(entity, packet, entityCollection, sourceUri) {\n        var ellipsoidData = packet.ellipsoid;\n        if (!defined(ellipsoidData)) {\n            return;\n        }\n\n        var interval = intervalFromString(ellipsoidData.interval);\n        var ellipsoid = entity.ellipsoid;\n        if (!defined(ellipsoid)) {\n            entity.ellipsoid = ellipsoid = new EllipsoidGraphics();\n        }\n\n        processPacketData(Boolean, ellipsoid, 'show', ellipsoidData.show, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, ellipsoid, 'radii', ellipsoidData.radii, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, ellipsoid, 'heightReference', ellipsoidData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipsoid, 'fill', ellipsoidData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(ellipsoid, 'material', ellipsoidData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipsoid, 'outline', ellipsoidData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, ellipsoid, 'outlineColor', ellipsoidData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'outlineWidth', ellipsoidData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'stackPartitions', ellipsoidData.stackPartitions, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'slicePartitions', ellipsoidData.slicePartitions, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'subdivisions', ellipsoidData.subdivisions, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, ellipsoid, 'shadows', ellipsoidData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, ellipsoid, 'distanceDisplayCondition', ellipsoidData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processLabel(entity, packet, entityCollection, sourceUri) {\n        var labelData = packet.label;\n        if (!defined(labelData)) {\n            return;\n        }\n\n        var interval = intervalFromString(labelData.interval);\n        var label = entity.label;\n        if (!defined(label)) {\n            entity.label = label = new LabelGraphics();\n        }\n\n        processPacketData(Boolean, label, 'show', labelData.show, interval, sourceUri, entityCollection);\n        processPacketData(String, label, 'text', labelData.text, interval, sourceUri, entityCollection);\n        processPacketData(String, label, 'font', labelData.font, interval, sourceUri, entityCollection);\n        processPacketData(LabelStyle, label, 'style', labelData.style, interval, sourceUri, entityCollection);\n        processPacketData(Number, label, 'scale', labelData.scale, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, label, 'showBackground', labelData.showBackground, interval, sourceUri, entityCollection);\n        processPacketData(Color, label, 'backgroundColor', labelData.backgroundColor, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian2, label, 'backgroundPadding', labelData.backgroundPadding, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian2, label, 'pixelOffset', labelData.pixelOffset, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, label, 'eyeOffset', labelData.eyeOffset, interval, sourceUri, entityCollection);\n        processPacketData(HorizontalOrigin, label, 'horizontalOrigin', labelData.horizontalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(VerticalOrigin, label, 'verticalOrigin', labelData.verticalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, label, 'heightReference', labelData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, label, 'fillColor', labelData.fillColor, interval, sourceUri, entityCollection);\n        processPacketData(Color, label, 'outlineColor', labelData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, label, 'outlineWidth', labelData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, label, 'translucencyByDistance', labelData.translucencyByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, label, 'pixelOffsetScaleByDistance', labelData.pixelOffsetScaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, label, 'scaleByDistance', labelData.scaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, label, 'distanceDisplayCondition', labelData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(Number, label, 'disableDepthTestDistance', labelData.disableDepthTestDistance, interval, sourceUri, entityCollection);\n    }\n\n    function processModel(entity, packet, entityCollection, sourceUri) {\n        var modelData = packet.model;\n        if (!defined(modelData)) {\n            return;\n        }\n\n        var interval = intervalFromString(modelData.interval);\n        var model = entity.model;\n        if (!defined(model)) {\n            entity.model = model = new ModelGraphics();\n        }\n\n        processPacketData(Boolean, model, 'show', modelData.show, interval, sourceUri, entityCollection);\n        processPacketData(Uri, model, 'uri', modelData.gltf, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'scale', modelData.scale, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'minimumPixelSize', modelData.minimumPixelSize, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'maximumScale', modelData.maximumScale, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, model, 'incrementallyLoadTextures', modelData.incrementallyLoadTextures, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, model, 'runAnimations', modelData.runAnimations, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, model, 'clampAnimations', modelData.clampAnimations, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, model, 'shadows', modelData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, model, 'heightReference', modelData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, model, 'silhouetteColor', modelData.silhouetteColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'silhouetteSize', modelData.silhouetteSize, interval, sourceUri, entityCollection);\n        processPacketData(Color, model, 'color', modelData.color, interval, sourceUri, entityCollection);\n        processPacketData(ColorBlendMode, model, 'colorBlendMode', modelData.colorBlendMode, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'colorBlendAmount', modelData.colorBlendAmount, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, model, 'distanceDisplayCondition', modelData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n\n        var i, len;\n        var nodeTransformationsData = modelData.nodeTransformations;\n        if (defined(nodeTransformationsData)) {\n            if (isArray(nodeTransformationsData)) {\n                for (i = 0, len = nodeTransformationsData.length; i < len; ++i) {\n                    processNodeTransformations(model, nodeTransformationsData[i], interval, sourceUri, entityCollection);\n                }\n            } else {\n                processNodeTransformations(model, nodeTransformationsData, interval, sourceUri, entityCollection);\n            }\n        }\n\n        var articulationsData = modelData.articulations;\n        if (defined(articulationsData)) {\n            if (isArray(articulationsData)) {\n                for (i = 0, len = articulationsData.length; i < len; ++i) {\n                    processArticulations(model, articulationsData[i], interval, sourceUri, entityCollection);\n                }\n            } else {\n                processArticulations(model, articulationsData, interval, sourceUri, entityCollection);\n            }\n        }\n    }\n\n    function processNodeTransformations(model, nodeTransformationsData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(nodeTransformationsData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var nodeTransformations = model.nodeTransformations;\n        var nodeNames = Object.keys(nodeTransformationsData);\n        for (var i = 0, len = nodeNames.length; i < len; ++i) {\n            var nodeName = nodeNames[i];\n            if (nodeName === 'interval') {\n                continue;\n            }\n\n            var nodeTransformationData = nodeTransformationsData[nodeName];\n            if (!defined(nodeTransformationData)) {\n                continue;\n            }\n\n            if (!defined(nodeTransformations)) {\n                model.nodeTransformations = nodeTransformations = new PropertyBag();\n            }\n\n            if (!nodeTransformations.hasProperty(nodeName)) {\n                nodeTransformations.addProperty(nodeName);\n            }\n\n            var nodeTransformation = nodeTransformations[nodeName];\n            if (!defined(nodeTransformation)) {\n                nodeTransformations[nodeName] = nodeTransformation = new NodeTransformationProperty();\n            }\n\n            processPacketData(Cartesian3, nodeTransformation, 'translation', nodeTransformationData.translation, combinedInterval, sourceUri, entityCollection);\n            processPacketData(Quaternion, nodeTransformation, 'rotation', nodeTransformationData.rotation, combinedInterval, sourceUri, entityCollection);\n            processPacketData(Cartesian3, nodeTransformation, 'scale', nodeTransformationData.scale, combinedInterval, sourceUri, entityCollection);\n        }\n    }\n\n    function processArticulations(model, articulationsData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(articulationsData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var articulations = model.articulations;\n        var keys = Object.keys(articulationsData);\n        for (var i = 0, len = keys.length; i < len; ++i) {\n            var key = keys[i];\n            if (key === 'interval') {\n                continue;\n            }\n\n            var articulationStageData = articulationsData[key];\n            if (!defined(articulationStageData)) {\n                continue;\n            }\n\n            if (!defined(articulations)) {\n                model.articulations = articulations = new PropertyBag();\n            }\n\n            if (!articulations.hasProperty(key)) {\n                articulations.addProperty(key);\n            }\n\n            processPacketData(Number, articulations, key, articulationStageData, combinedInterval, sourceUri, entityCollection);\n        }\n    }\n\n    function processPath(entity, packet, entityCollection, sourceUri) {\n        var pathData = packet.path;\n        if (!defined(pathData)) {\n            return;\n        }\n\n        var interval = intervalFromString(pathData.interval);\n        var path = entity.path;\n        if (!defined(path)) {\n            entity.path = path = new PathGraphics();\n        }\n\n        processPacketData(Boolean, path, 'show', pathData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'leadTime', pathData.leadTime, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'trailTime', pathData.trailTime, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'width', pathData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'resolution', pathData.resolution, interval, sourceUri, entityCollection);\n        processMaterialPacketData(path, 'material', pathData.material, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, path, 'distanceDisplayCondition', pathData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processPoint(entity, packet, entityCollection, sourceUri) {\n        var pointData = packet.point;\n        if (!defined(pointData)) {\n            return;\n        }\n\n        var interval = intervalFromString(pointData.interval);\n        var point = entity.point;\n        if (!defined(point)) {\n            entity.point = point = new PointGraphics();\n        }\n\n        processPacketData(Boolean, point, 'show', pointData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, point, 'pixelSize', pointData.pixelSize, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, point, 'heightReference', pointData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, point, 'color', pointData.color, interval, sourceUri, entityCollection);\n        processPacketData(Color, point, 'outlineColor', pointData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, point, 'outlineWidth', pointData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, point, 'scaleByDistance', pointData.scaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, point, 'translucencyByDistance', pointData.translucencyByDistance, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, point, 'distanceDisplayCondition', pointData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(Number, point, 'disableDepthTestDistance', pointData.disableDepthTestDistance, interval, sourceUri, entityCollection);\n    }\n\n    function PolygonHierarchyProperty(polygon) {\n        this.polygon = polygon;\n        this._definitionChanged = new Event();\n    }\n\n    defineProperties(PolygonHierarchyProperty.prototype, {\n        isConstant : {\n            get : function() {\n                var positions = this.polygon._positions;\n                var holes = this.polygon._holes;\n                return (!defined(positions) || positions.isConstant) &&\n                       (!defined(holes) || holes.isConstant);\n            }\n        },\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        }\n    });\n\n    PolygonHierarchyProperty.prototype.getValue = function(time, result) {\n        var positions;\n        if (defined(this.polygon._positions)) {\n            positions = this.polygon._positions.getValue(time);\n        }\n\n        var holes;\n        if (defined(this.polygon._holes)) {\n            holes = this.polygon._holes.getValue(time);\n            if (defined(holes)) {\n                holes = holes.map(function(holePositions) {\n                    return new PolygonHierarchy(holePositions);\n                });\n            }\n        }\n\n        if (!defined(result)) {\n            return new PolygonHierarchy(positions, holes);\n        }\n\n        result.positions = positions;\n        result.holes = holes;\n        return result;\n    };\n\n    PolygonHierarchyProperty.prototype.equals = function(other) {\n        return this === other ||\n               (other instanceof PolygonHierarchyProperty &&\n                Property.equals(this.polygon._positions, other.polygon._positions) &&\n                Property.equals(this.polygon._holes, other.polygon._holes));\n    };\n\n    function processPolygon(entity, packet, entityCollection, sourceUri) {\n        var polygonData = packet.polygon;\n        if (!defined(polygonData)) {\n            return;\n        }\n\n        var interval = intervalFromString(polygonData.interval);\n        var polygon = entity.polygon;\n        if (!defined(polygon)) {\n            entity.polygon = polygon = new PolygonGraphics();\n        }\n\n        processPacketData(Boolean, polygon, 'show', polygonData.show, interval, sourceUri, entityCollection);\n\n        // adapt 'position' property producing Cartesian[]\n        // and 'holes' property producing Cartesian[][]\n        // to a single property producing PolygonHierarchy\n        processPositionArray(polygon, '_positions', polygonData.positions, entityCollection);\n        processPositionArrayOfArrays(polygon, '_holes', polygonData.holes, entityCollection);\n        if (defined(polygon._positions) || defined(polygon._holes)) {\n            polygon.hierarchy = new PolygonHierarchyProperty(polygon);\n        }\n\n        processPacketData(Number, polygon, 'height', polygonData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, polygon, 'heightReference', polygonData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'extrudedHeight', polygonData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, polygon, 'extrudedHeightReference', polygonData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, polygon, 'stRotation', polygonData.stRotation, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'granularity', polygonData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'fill', polygonData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(polygon, 'material', polygonData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'outline', polygonData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, polygon, 'outlineColor', polygonData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'outlineWidth', polygonData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'perPositionHeight', polygonData.perPositionHeight, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'closeTop', polygonData.closeTop, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'closeBottom', polygonData.closeBottom, interval, sourceUri, entityCollection);\n        processPacketData(ArcType, polygon, 'arcType', polygonData.arcType, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, polygon, 'shadows', polygonData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, polygon, 'distanceDisplayCondition', polygonData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, polygon, 'classificationType', polygonData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'zIndex', polygonData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function adaptFollowSurfaceToArcType(followSurface) {\n        return followSurface ? ArcType.GEODESIC : ArcType.NONE;\n    }\n\n    function processPolyline(entity, packet, entityCollection, sourceUri) {\n        var polylineData = packet.polyline;\n        if (!defined(polylineData)) {\n            return;\n        }\n\n        var interval = intervalFromString(polylineData.interval);\n        var polyline = entity.polyline;\n        if (!defined(polyline)) {\n            entity.polyline = polyline = new PolylineGraphics();\n        }\n\n        processPacketData(Boolean, polyline, 'show', polylineData.show, interval, sourceUri, entityCollection);\n        processPositionArray(polyline, 'positions', polylineData.positions, entityCollection);\n        processPacketData(Number, polyline, 'width', polylineData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, polyline, 'granularity', polylineData.granularity, interval, sourceUri, entityCollection);\n        processMaterialPacketData(polyline, 'material', polylineData.material, interval, sourceUri, entityCollection);\n        processMaterialPacketData(polyline, 'depthFailMaterial', polylineData.depthFailMaterial, interval, sourceUri, entityCollection);\n        processPacketData(ArcType, polyline, 'arcType', polylineData.arcType, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polyline, 'clampToGround', polylineData.clampToGround, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, polyline, 'shadows', polylineData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, polyline, 'distanceDisplayCondition', polylineData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, polyline, 'classificationType', polylineData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, polyline, 'zIndex', polylineData.zIndex, interval, sourceUri, entityCollection);\n\n        // for backwards compatibility, adapt CZML followSurface to arcType.\n        if (defined(polylineData.followSurface) && !defined(polylineData.arcType)) {\n            var tempObj = {};\n            processPacketData(Boolean, tempObj, 'followSurface', polylineData.followSurface, interval, sourceUri, entityCollection);\n            polyline.arcType = createAdapterProperty(tempObj.followSurface, adaptFollowSurfaceToArcType);\n        }\n    }\n\n    function processRectangle(entity, packet, entityCollection, sourceUri) {\n        var rectangleData = packet.rectangle;\n        if (!defined(rectangleData)) {\n            return;\n        }\n\n        var interval = intervalFromString(rectangleData.interval);\n        var rectangle = entity.rectangle;\n        if (!defined(rectangle)) {\n            entity.rectangle = rectangle = new RectangleGraphics();\n        }\n\n        processPacketData(Boolean, rectangle, 'show', rectangleData.show, interval, sourceUri, entityCollection);\n        processPacketData(Rectangle, rectangle, 'coordinates', rectangleData.coordinates, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'height', rectangleData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, rectangle, 'heightReference', rectangleData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'extrudedHeight', rectangleData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, rectangle, 'extrudedHeightReference', rectangleData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, rectangle, 'rotation', rectangleData.rotation, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, rectangle, 'stRotation', rectangleData.stRotation, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'granularity', rectangleData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, rectangle, 'fill', rectangleData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(rectangle, 'material', rectangleData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, rectangle, 'outline', rectangleData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, rectangle, 'outlineColor', rectangleData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'outlineWidth', rectangleData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, rectangle, 'shadows', rectangleData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, rectangle, 'distanceDisplayCondition', rectangleData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, rectangle, 'classificationType', rectangleData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'zIndex', rectangleData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function processWall(entity, packet, entityCollection, sourceUri) {\n        var wallData = packet.wall;\n        if (!defined(wallData)) {\n            return;\n        }\n\n        var interval = intervalFromString(wallData.interval);\n        var wall = entity.wall;\n        if (!defined(wall)) {\n            entity.wall = wall = new WallGraphics();\n        }\n\n        processPacketData(Boolean, wall, 'show', wallData.show, interval, sourceUri, entityCollection);\n        processPositionArray(wall, 'positions', wallData.positions, entityCollection);\n        processArray(wall, 'minimumHeights', wallData.minimumHeights, entityCollection);\n        processArray(wall, 'maximumHeights', wallData.maximumHeights, entityCollection);\n        processPacketData(Number, wall, 'granularity', wallData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, wall, 'fill', wallData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(wall, 'material', wallData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, wall, 'outline', wallData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, wall, 'outlineColor', wallData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, wall, 'outlineWidth', wallData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, wall, 'shadows', wallData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, wall, 'distanceDisplayCondition', wallData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processCzmlPacket(packet, entityCollection, updaterFunctions, sourceUri, dataSource) {\n        var objectId = packet.id;\n        if (!defined(objectId)) {\n            objectId = createGuid();\n        }\n\n        currentId = objectId;\n\n        if (!defined(dataSource._version) && objectId !== 'document') {\n            throw new RuntimeError('The first CZML packet is required to be the document object.');\n        }\n\n        if (packet['delete'] === true) {\n            entityCollection.removeById(objectId);\n        } else if (objectId === 'document') {\n            processDocument(packet, dataSource);\n        } else {\n            var entity = entityCollection.getOrCreateEntity(objectId);\n\n            var parentId = packet.parent;\n            if (defined(parentId)) {\n                entity.parent = entityCollection.getOrCreateEntity(parentId);\n            }\n\n            for (var i = updaterFunctions.length - 1; i > -1; i--) {\n                updaterFunctions[i](entity, packet, entityCollection, sourceUri);\n            }\n        }\n\n        currentId = undefined;\n    }\n\n    function updateClock(dataSource) {\n        var clock;\n        var clockPacket = dataSource._documentPacket.clock;\n        if (!defined(clockPacket)) {\n            if (!defined(dataSource._clock)) {\n                var availability = dataSource._entityCollection.computeAvailability();\n                if (!availability.start.equals(Iso8601.MINIMUM_VALUE)) {\n                    var startTime = availability.start;\n                    var stopTime = availability.stop;\n                    var totalSeconds = JulianDate.secondsDifference(stopTime, startTime);\n                    var multiplier = Math.round(totalSeconds / 120.0);\n\n                    clock = new DataSourceClock();\n                    clock.startTime = JulianDate.clone(startTime);\n                    clock.stopTime = JulianDate.clone(stopTime);\n                    clock.clockRange = ClockRange.LOOP_STOP;\n                    clock.multiplier = multiplier;\n                    clock.currentTime = JulianDate.clone(startTime);\n                    clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n                    dataSource._clock = clock;\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        if (defined(dataSource._clock)) {\n            clock = dataSource._clock.clone();\n        } else {\n            clock = new DataSourceClock();\n            clock.startTime = Iso8601.MINIMUM_VALUE.clone();\n            clock.stopTime = Iso8601.MAXIMUM_VALUE.clone();\n            clock.currentTime = Iso8601.MINIMUM_VALUE.clone();\n            clock.clockRange = ClockRange.LOOP_STOP;\n            clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n            clock.multiplier = 1.0;\n        }\n\n        var interval = intervalFromString(clockPacket.interval);\n        if (defined(interval)) {\n            clock.startTime = interval.start;\n            clock.stopTime = interval.stop;\n        }\n\n        if (defined(clockPacket.currentTime)) {\n            clock.currentTime = JulianDate.fromIso8601(clockPacket.currentTime);\n        }\n        if (defined(clockPacket.range)) {\n            clock.clockRange = defaultValue(ClockRange[clockPacket.range], ClockRange.LOOP_STOP);\n        }\n        if (defined(clockPacket.step)) {\n            clock.clockStep = defaultValue(ClockStep[clockPacket.step], ClockStep.SYSTEM_CLOCK_MULTIPLIER);\n        }\n        if (defined(clockPacket.multiplier)) {\n            clock.multiplier = clockPacket.multiplier;\n        }\n\n        if (!clock.equals(dataSource._clock)) {\n            dataSource._clock = clock.clone(dataSource._clock);\n            return true;\n        }\n\n        return false;\n    }\n\n    function load(dataSource, czml, options, clear) {\n        \n\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        var promise = czml;\n        var sourceUri = options.sourceUri;\n\n        // If the czml is a URL\n        if (typeof czml === 'string' || (czml instanceof Resource)) {\n            czml = Resource.createIfNeeded(czml);\n            promise = czml.fetchJson();\n            sourceUri = defaultValue(sourceUri, czml.clone());\n        }\n\n        sourceUri = Resource.createIfNeeded(sourceUri);\n\n        DataSource.setLoading(dataSource, true);\n\n        return when(promise, function(czml) {\n            return loadCzml(dataSource, czml, sourceUri, clear);\n        }).otherwise(function(error) {\n            DataSource.setLoading(dataSource, false);\n            dataSource._error.raiseEvent(dataSource, error);\n            console.log(error);\n            return when.reject(error);\n        });\n    }\n\n    function loadCzml(dataSource, czml, sourceUri, clear) {\n        DataSource.setLoading(dataSource, true);\n        var entityCollection = dataSource._entityCollection;\n\n        if (clear) {\n            dataSource._version = undefined;\n            dataSource._documentPacket = new DocumentPacket();\n            entityCollection.removeAll();\n        }\n\n        CzmlDataSource._processCzml(czml, entityCollection, sourceUri, undefined, dataSource);\n\n        var raiseChangedEvent = updateClock(dataSource);\n\n        var documentPacket = dataSource._documentPacket;\n        if (defined(documentPacket.name) && dataSource._name !== documentPacket.name) {\n            dataSource._name = documentPacket.name;\n            raiseChangedEvent = true;\n        } else if (!defined(dataSource._name) && defined(sourceUri)) {\n            dataSource._name = getFilenameFromUri(sourceUri.getUrlComponent());\n            raiseChangedEvent = true;\n        }\n\n        DataSource.setLoading(dataSource, false);\n        if (raiseChangedEvent) {\n            dataSource._changed.raiseEvent(dataSource);\n        }\n\n        return dataSource;\n    }\n\n    function DocumentPacket() {\n        this.name = undefined;\n        this.clock = undefined;\n    }\n\n    /**\n     * A {@link DataSource} which processes {@link https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Guide|CZML}.\n     * @alias CzmlDataSource\n     * @constructor\n     *\n     * @param {String} [name] An optional name for the data source.  This value will be overwritten if a loaded document contains a name.\n     *\n     * @demo {@link https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML.html|Cesium Sandcastle CZML Demo}\n     */\n    function CzmlDataSource(name) {\n        this._name = name;\n        this._changed = new Event();\n        this._error = new Event();\n        this._isLoading = false;\n        this._loading = new Event();\n        this._clock = undefined;\n        this._documentPacket = new DocumentPacket();\n        this._version = undefined;\n        this._entityCollection = new EntityCollection(this);\n        this._entityCluster = new EntityCluster();\n    }\n\n    /**\n     * Creates a Promise to a new instance loaded with the provided CZML data.\n     *\n     * @param {Resource|String|Object} czml A url or CZML object to be processed.\n     * @param {Object} [options] An object with the following properties:\n     * @param {Resource|String} [options.sourceUri] Overrides the url to use for resolving relative links.\n     * @returns {Promise.<CzmlDataSource>} A promise that resolves to the new instance once the data is processed.\n     */\n    CzmlDataSource.load = function(czml, options) {\n        return new CzmlDataSource().load(czml, options);\n    };\n\n    defineProperties(CzmlDataSource.prototype, {\n        /**\n         * Gets a human-readable name for this instance.\n         * @memberof CzmlDataSource.prototype\n         * @type {String}\n         */\n        name : {\n            get : function() {\n                return this._name;\n            }\n        },\n        /**\n         * Gets the clock settings defined by the loaded CZML.  If no clock is explicitly\n         * defined in the CZML, the combined availability of all objects is returned.  If\n         * only static data exists, this value is undefined.\n         * @memberof CzmlDataSource.prototype\n         * @type {DataSourceClock}\n         */\n        clock : {\n            get : function() {\n                return this._clock;\n            }\n        },\n        /**\n         * Gets the collection of {@link Entity} instances.\n         * @memberof CzmlDataSource.prototype\n         * @type {EntityCollection}\n         */\n        entities : {\n            get : function() {\n                return this._entityCollection;\n            }\n        },\n        /**\n         * Gets a value indicating if the data source is currently loading data.\n         * @memberof CzmlDataSource.prototype\n         * @type {Boolean}\n         */\n        isLoading : {\n            get : function() {\n                return this._isLoading;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the underlying data changes.\n         * @memberof CzmlDataSource.prototype\n         * @type {Event}\n         */\n        changedEvent : {\n            get : function() {\n                return this._changed;\n            }\n        },\n        /**\n         * Gets an event that will be raised if an error is encountered during processing.\n         * @memberof CzmlDataSource.prototype\n         * @type {Event}\n         */\n        errorEvent : {\n            get : function() {\n                return this._error;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source either starts or stops loading.\n         * @memberof CzmlDataSource.prototype\n         * @type {Event}\n         */\n        loadingEvent : {\n            get : function() {\n                return this._loading;\n            }\n        },\n        /**\n         * Gets whether or not this data source should be displayed.\n         * @memberof CzmlDataSource.prototype\n         * @type {Boolean}\n         */\n        show : {\n            get : function() {\n                return this._entityCollection.show;\n            },\n            set : function(value) {\n                this._entityCollection.show = value;\n            }\n        },\n\n        /**\n         * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n         *\n         * @memberof CzmlDataSource.prototype\n         * @type {EntityCluster}\n         */\n        clustering : {\n            get : function() {\n                return this._entityCluster;\n            },\n            set : function(value) {\n                \n                this._entityCluster = value;\n            }\n        }\n    });\n\n    /**\n     * Gets the array of CZML processing functions.\n     * @memberof CzmlDataSource\n     * @type Array\n     */\n    CzmlDataSource.updaters = [\n        processBillboard, //\n        processBox, //\n        processCorridor, //\n        processCylinder, //\n        processEllipse, //\n        processEllipsoid, //\n        processLabel, //\n        processModel, //\n        processName, //\n        processDescription, //\n        processPath, //\n        processPoint, //\n        processPolygon, //\n        processPolyline, //\n        processProperties, //\n        processRectangle, //\n        processPosition, //\n        processViewFrom, //\n        processWall, //\n        processOrientation, //\n        processAvailability];\n\n    /**\n     * Processes the provided url or CZML object without clearing any existing data.\n     *\n     * @param {Resource|String|Object} czml A url or CZML object to be processed.\n     * @param {Object} [options] An object with the following properties:\n     * @param {String} [options.sourceUri] Overrides the url to use for resolving relative links.\n     * @returns {Promise.<CzmlDataSource>} A promise that resolves to this instances once the data is processed.\n     */\n    CzmlDataSource.prototype.process = function(czml, options) {\n        return load(this, czml, options, false);\n    };\n\n    /**\n     * Loads the provided url or CZML object, replacing any existing data.\n     *\n     * @param {Resource|String|Object} czml A url or CZML object to be processed.\n     * @param {Object} [options] An object with the following properties:\n     * @param {String} [options.sourceUri] Overrides the url to use for resolving relative links.\n     * @returns {Promise.<CzmlDataSource>} A promise that resolves to this instances once the data is processed.\n     */\n    CzmlDataSource.prototype.load = function(czml, options) {\n        return load(this, czml, options, true);\n    };\n\n    /**\n     * A helper function used by custom CZML updater functions\n     * which creates or updates a {@link Property} from a CZML packet.\n     * @function\n     *\n     * @param {Function} type The constructor function for the property being processed.\n     * @param {Object} object The object on which the property will be added or updated.\n     * @param {String} propertyName The name of the property on the object.\n     * @param {Object} packetData The CZML packet being processed.\n     * @param {TimeInterval} interval A constraining interval for which the data is valid.\n     * @param {String} sourceUri The originating uri of the data being processed.\n     * @param {EntityCollection} entityCollection The collection being processsed.\n     */\n    CzmlDataSource.processPacketData = processPacketData;\n\n    /**\n     * A helper function used by custom CZML updater functions\n     * which creates or updates a {@link PositionProperty} from a CZML packet.\n     * @function\n     *\n     * @param {Object} object The object on which the property will be added or updated.\n     * @param {String} propertyName The name of the property on the object.\n     * @param {Object} packetData The CZML packet being processed.\n     * @param {TimeInterval} interval A constraining interval for which the data is valid.\n     * @param {String} sourceUri The originating uri of the data being processed.\n     * @param {EntityCollection} entityCollection The collection being processsed.\n     */\n    CzmlDataSource.processPositionPacketData = processPositionPacketData;\n\n    /**\n     * A helper function used by custom CZML updater functions\n     * which creates or updates a {@link MaterialProperty} from a CZML packet.\n     * @function\n     *\n     * @param {Object} object The object on which the property will be added or updated.\n     * @param {String} propertyName The name of the property on the object.\n     * @param {Object} packetData The CZML packet being processed.\n     * @param {TimeInterval} interval A constraining interval for which the data is valid.\n     * @param {String} sourceUri The originating uri of the data being processed.\n     * @param {EntityCollection} entityCollection The collection being processsed.\n     */\n    CzmlDataSource.processMaterialPacketData = processMaterialPacketData;\n\n    CzmlDataSource._processCzml = function(czml, entityCollection, sourceUri, updaterFunctions, dataSource) {\n        updaterFunctions = defaultValue(updaterFunctions, CzmlDataSource.updaters);\n\n        if (isArray(czml)) {\n            for (var i = 0, len = czml.length; i < len; ++i) {\n                processCzmlPacket(czml[i], entityCollection, updaterFunctions, sourceUri, dataSource);\n            }\n        } else {\n            processCzmlPacket(czml, entityCollection, updaterFunctions, sourceUri, dataSource);\n        }\n    };\n\n    return CzmlDataSource;\n});\n","define([\n        '../Core/ArcType',\n        '../Core/AssociativeArray',\n        '../Core/BoundingRectangle',\n        '../Core/Cartesian2',\n        '../Core/Cartesian3',\n        '../Core/Cartographic',\n        '../Core/ClockRange',\n        '../Core/ClockStep',\n        '../Core/Color',\n        '../Core/createGuid',\n        '../Core/defaultValue',\n        '../Core/defined',\n        '../Core/defineProperties',\n        '../Core/DeveloperError',\n        '../Core/Ellipsoid',\n        '../Core/Event',\n        '../Core/getExtensionFromUri',\n        '../Core/getFilenameFromUri',\n        '../Core/HeadingPitchRange',\n        '../Core/HeadingPitchRoll',\n        '../Core/Iso8601',\n        '../Core/JulianDate',\n        '../Core/Math',\n        '../Core/NearFarScalar',\n        '../Core/objectToQuery',\n        '../Core/oneTimeWarning',\n        '../Core/PinBuilder',\n        '../Core/PolygonHierarchy',\n        '../Core/queryToObject',\n        '../Core/Rectangle',\n        '../Core/Resource',\n        '../Core/RuntimeError',\n        '../Core/TimeInterval',\n        '../Core/TimeIntervalCollection',\n        '../Scene/HeightReference',\n        '../Scene/HorizontalOrigin',\n        '../Scene/LabelStyle',\n        '../Scene/SceneMode',\n        '../ThirdParty/Autolinker',\n        '../ThirdParty/Uri',\n        '../ThirdParty/when',\n        '../ThirdParty/zip',\n        './BillboardGraphics',\n        './CompositePositionProperty',\n        './DataSource',\n        './DataSourceClock',\n        './Entity',\n        './EntityCluster',\n        './EntityCollection',\n        './KmlCamera',\n        './KmlLookAt',\n        './KmlTour',\n        './KmlTourFlyTo',\n        './KmlTourWait',\n        './LabelGraphics',\n        './PathGraphics',\n        './PolygonGraphics',\n        './PolylineGraphics',\n        './PositionPropertyArray',\n        './RectangleGraphics',\n        './ReferenceProperty',\n        './SampledPositionProperty',\n        './ScaledPositionProperty',\n        './TimeIntervalCollectionProperty',\n        './WallGraphics'\n    ], function(\n        ArcType,\n        AssociativeArray,\n        BoundingRectangle,\n        Cartesian2,\n        Cartesian3,\n        Cartographic,\n        ClockRange,\n        ClockStep,\n        Color,\n        createGuid,\n        defaultValue,\n        defined,\n        defineProperties,\n        DeveloperError,\n        Ellipsoid,\n        Event,\n        getExtensionFromUri,\n        getFilenameFromUri,\n        HeadingPitchRange,\n        HeadingPitchRoll,\n        Iso8601,\n        JulianDate,\n        CesiumMath,\n        NearFarScalar,\n        objectToQuery,\n        oneTimeWarning,\n        PinBuilder,\n        PolygonHierarchy,\n        queryToObject,\n        Rectangle,\n        Resource,\n        RuntimeError,\n        TimeInterval,\n        TimeIntervalCollection,\n        HeightReference,\n        HorizontalOrigin,\n        LabelStyle,\n        SceneMode,\n        Autolinker,\n        Uri,\n        when,\n        zip,\n        BillboardGraphics,\n        CompositePositionProperty,\n        DataSource,\n        DataSourceClock,\n        Entity,\n        EntityCluster,\n        EntityCollection,\n        KmlCamera,\n        KmlLookAt,\n        KmlTour,\n        KmlTourFlyTo,\n        KmlTourWait,\n        LabelGraphics,\n        PathGraphics,\n        PolygonGraphics,\n        PolylineGraphics,\n        PositionPropertyArray,\n        RectangleGraphics,\n        ReferenceProperty,\n        SampledPositionProperty,\n        ScaledPositionProperty,\n        TimeIntervalCollectionProperty,\n        WallGraphics) {\n    'use strict';\n\n    // IE 8 doesn't have a DOM parser and can't run Cesium anyway, so just bail.\n    if (typeof DOMParser === 'undefined') {\n        return {};\n    }\n\n    //This is by no means an exhaustive list of MIME types.\n    //The purpose of this list is to be able to accurately identify content embedded\n    //in KMZ files. Eventually, we can make this configurable by the end user so they can add\n    //there own content types if they have KMZ files that require it.\n    var MimeTypes = {\n        avi : 'video/x-msvideo',\n        bmp : 'image/bmp',\n        bz2 : 'application/x-bzip2',\n        chm : 'application/vnd.ms-htmlhelp',\n        css : 'text/css',\n        csv : 'text/csv',\n        doc : 'application/msword',\n        dvi : 'application/x-dvi',\n        eps : 'application/postscript',\n        flv : 'video/x-flv',\n        gif : 'image/gif',\n        gz : 'application/x-gzip',\n        htm : 'text/html',\n        html : 'text/html',\n        ico : 'image/vnd.microsoft.icon',\n        jnlp : 'application/x-java-jnlp-file',\n        jpeg : 'image/jpeg',\n        jpg : 'image/jpeg',\n        m3u : 'audio/x-mpegurl',\n        m4v : 'video/mp4',\n        mathml : 'application/mathml+xml',\n        mid : 'audio/midi',\n        midi : 'audio/midi',\n        mov : 'video/quicktime',\n        mp3 : 'audio/mpeg',\n        mp4 : 'video/mp4',\n        mp4v : 'video/mp4',\n        mpeg : 'video/mpeg',\n        mpg : 'video/mpeg',\n        odp : 'application/vnd.oasis.opendocument.presentation',\n        ods : 'application/vnd.oasis.opendocument.spreadsheet',\n        odt : 'application/vnd.oasis.opendocument.text',\n        ogg : 'application/ogg',\n        pdf : 'application/pdf',\n        png : 'image/png',\n        pps : 'application/vnd.ms-powerpoint',\n        ppt : 'application/vnd.ms-powerpoint',\n        ps : 'application/postscript',\n        qt : 'video/quicktime',\n        rdf : 'application/rdf+xml',\n        rss : 'application/rss+xml',\n        rtf : 'application/rtf',\n        svg : 'image/svg+xml',\n        swf : 'application/x-shockwave-flash',\n        text : 'text/plain',\n        tif : 'image/tiff',\n        tiff : 'image/tiff',\n        txt : 'text/plain',\n        wav : 'audio/x-wav',\n        wma : 'audio/x-ms-wma',\n        wmv : 'video/x-ms-wmv',\n        xml : 'application/xml',\n        zip : 'application/zip',\n\n        detectFromFilename : function(filename) {\n            var ext = filename.toLowerCase();\n            ext = getExtensionFromUri(ext);\n            return MimeTypes[ext];\n        }\n    };\n\n    var parser = new DOMParser();\n    var autolinker = new Autolinker({\n        stripPrefix : false,\n        twitter : false,\n        email : false,\n        replaceFn : function(linker, match) {\n            if (!match.protocolUrlMatch) {\n                //Prevent matching of non-explicit urls.\n                //i.e. foo.id won't match but http://foo.id will\n                return false;\n            }\n        }\n    });\n\n    var BILLBOARD_SIZE = 32;\n\n    var BILLBOARD_NEAR_DISTANCE = 2414016;\n    var BILLBOARD_NEAR_RATIO = 1.0;\n    var BILLBOARD_FAR_DISTANCE = 1.6093e+7;\n    var BILLBOARD_FAR_RATIO = 0.1;\n\n    function isZipFile(blob) {\n        var magicBlob = blob.slice(0, Math.min(4, blob.size));\n        var deferred = when.defer();\n        var reader = new FileReader();\n        reader.addEventListener('load', function() {\n            deferred.resolve(new DataView(reader.result).getUint32(0, false) === 0x504b0304);\n        });\n        reader.addEventListener('error', function() {\n            deferred.reject(reader.error);\n        });\n        reader.readAsArrayBuffer(magicBlob);\n        return deferred.promise;\n    }\n\n    function readBlobAsText(blob) {\n        var deferred = when.defer();\n        var reader = new FileReader();\n        reader.addEventListener('load', function() {\n            deferred.resolve(reader.result);\n        });\n        reader.addEventListener('error', function() {\n            deferred.reject(reader.error);\n        });\n        reader.readAsText(blob);\n        return deferred.promise;\n    }\n\n    function insertNamespaces(text) {\n        var namespaceMap = {\n            xsi : 'http://www.w3.org/2001/XMLSchema-instance'\n        };\n        var firstPart, lastPart, reg, declaration;\n\n        for (var key in namespaceMap) {\n            if (namespaceMap.hasOwnProperty(key)) {\n                reg = RegExp('[< ]' + key + ':');\n                declaration = 'xmlns:' + key + '=';\n                if (reg.test(text) && text.indexOf(declaration) === -1) {\n                    if (!defined(firstPart)) {\n                        firstPart = text.substr(0, text.indexOf('<kml') + 4);\n                        lastPart = text.substr(firstPart.length);\n                    }\n                    firstPart += ' ' + declaration + '\"' + namespaceMap[key] + '\"';\n                }\n            }\n        }\n\n        if (defined(firstPart)) {\n            text = firstPart + lastPart;\n        }\n\n        return text;\n    }\n\n    function removeDuplicateNamespaces(text) {\n        var index = text.indexOf('xmlns:');\n        var endDeclaration = text.indexOf('>', index);\n        var namespace, startIndex, endIndex;\n\n        while ((index !== -1) && (index < endDeclaration)) {\n            namespace = text.slice(index, text.indexOf('\\\"', index));\n            startIndex = index;\n            index = text.indexOf(namespace, index + 1);\n            if (index !== -1) {\n                endIndex = text.indexOf('\\\"', (text.indexOf('\\\"', index) + 1));\n                text = text.slice(0, index -1) + text.slice(endIndex + 1, text.length);\n                index = text.indexOf('xmlns:', startIndex - 1);\n            } else {\n                index = text.indexOf('xmlns:', startIndex + 1);\n            }\n        }\n\n        return text;\n    }\n\n    function loadXmlFromZip(entry, uriResolver, deferred) {\n        entry.getData(new zip.TextWriter(), function(text) {\n            text = insertNamespaces(text);\n            text = removeDuplicateNamespaces(text);\n            uriResolver.kml = parser.parseFromString(text, 'application/xml');\n            deferred.resolve();\n        });\n    }\n\n    function loadDataUriFromZip(entry, uriResolver, deferred) {\n        var mimeType = defaultValue(MimeTypes.detectFromFilename(entry.filename), 'application/octet-stream');\n        entry.getData(new zip.Data64URIWriter(mimeType), function(dataUri) {\n            uriResolver[entry.filename] = dataUri;\n            deferred.resolve();\n        });\n    }\n\n    function embedDataUris(div, elementType, attributeName, uriResolver) {\n        var keys = uriResolver.keys;\n        var baseUri = new Uri('.');\n        var elements = div.querySelectorAll(elementType);\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            var value = element.getAttribute(attributeName);\n            var uri = new Uri(value).resolve(baseUri).toString();\n            var index = keys.indexOf(uri);\n            if (index !== -1) {\n                var key = keys[index];\n                element.setAttribute(attributeName, uriResolver[key]);\n                if (elementType === 'a' && element.getAttribute('download') === null) {\n                    element.setAttribute('download', key);\n                }\n            }\n        }\n    }\n\n    function applyBasePath(div, elementType, attributeName, sourceResource) {\n        var elements = div.querySelectorAll(elementType);\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            var value = element.getAttribute(attributeName);\n            var resource = resolveHref(value, sourceResource);\n            element.setAttribute(attributeName, resource.url);\n        }\n    }\n\n    // an optional context is passed to allow for some malformed kmls (those with multiple geometries with same ids) to still parse\n    // correctly, as they do in Google Earth.\n    function createEntity(node, entityCollection, context) {\n        var id = queryStringAttribute(node, 'id');\n        id = defined(id) && id.length !== 0 ? id : createGuid();\n        if (defined(context)) {\n            id = context + id;\n        }\n\n        // If we have a duplicate ID just generate one.\n        // This isn't valid KML but Google Earth handles this case.\n        var entity = entityCollection.getById(id);\n        if (defined(entity)) {\n            id = createGuid();\n            if (defined(context)) {\n                id = context + id;\n            }\n        }\n\n        entity = entityCollection.add(new Entity({id : id}));\n        if (!defined(entity.kml)) {\n            entity.addProperty('kml');\n            entity.kml = new KmlFeatureData();\n        }\n        return entity;\n    }\n\n    function isExtrudable(altitudeMode, gxAltitudeMode) {\n        return altitudeMode === 'absolute' || altitudeMode === 'relativeToGround' || gxAltitudeMode === 'relativeToSeaFloor';\n    }\n\n    function readCoordinate(value, ellipsoid) {\n        //Google Earth treats empty or missing coordinates as 0.\n        if (!defined(value)) {\n            return Cartesian3.fromDegrees(0, 0, 0, ellipsoid);\n        }\n\n        var digits = value.match(/[^\\s,\\n]+/g);\n        if (!defined(digits)) {\n            return Cartesian3.fromDegrees(0, 0, 0, ellipsoid);\n        }\n\n        var longitude = parseFloat(digits[0]);\n        var latitude = parseFloat(digits[1]);\n        var height = parseFloat(digits[2]);\n\n        longitude = isNaN(longitude) ? 0.0 : longitude;\n        latitude = isNaN(latitude) ? 0.0 : latitude;\n        height = isNaN(height) ? 0.0 : height;\n\n        return Cartesian3.fromDegrees(longitude, latitude, height, ellipsoid);\n    }\n\n    function readCoordinates(element, ellipsoid) {\n        if (!defined(element)) {\n            return undefined;\n        }\n\n        var tuples = element.textContent.match(/[^\\s\\n]+/g);\n        if (!defined(tuples)) {\n            return undefined;\n        }\n\n        var length = tuples.length;\n        var result = new Array(length);\n        var resultIndex = 0;\n        for (var i = 0; i < length; i++) {\n            result[resultIndex++] = readCoordinate(tuples[i], ellipsoid);\n        }\n        return result;\n    }\n\n    var kmlNamespaces = [null, undefined, 'http://www.opengis.net/kml/2.2', 'http://earth.google.com/kml/2.2', 'http://earth.google.com/kml/2.1', 'http://earth.google.com/kml/2.0'];\n    var gxNamespaces = ['http://www.google.com/kml/ext/2.2'];\n    var atomNamespaces = ['http://www.w3.org/2005/Atom'];\n    var namespaces = {\n        kml : kmlNamespaces,\n        gx : gxNamespaces,\n        atom : atomNamespaces,\n        kmlgx : kmlNamespaces.concat(gxNamespaces)\n    };\n\n    function queryNumericAttribute(node, attributeName) {\n        if (!defined(node)) {\n            return undefined;\n        }\n\n        var value = node.getAttribute(attributeName);\n        if (value !== null) {\n            var result = parseFloat(value);\n            return !isNaN(result) ? result : undefined;\n        }\n        return undefined;\n    }\n\n    function queryStringAttribute(node, attributeName) {\n        if (!defined(node)) {\n            return undefined;\n        }\n        var value = node.getAttribute(attributeName);\n        return value !== null ? value : undefined;\n    }\n\n    function queryFirstNode(node, tagName, namespace) {\n        if (!defined(node)) {\n            return undefined;\n        }\n        var childNodes = node.childNodes;\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === tagName && namespace.indexOf(child.namespaceURI) !== -1) {\n                return child;\n            }\n        }\n        return undefined;\n    }\n\n    function queryNodes(node, tagName, namespace) {\n        if (!defined(node)) {\n            return undefined;\n        }\n        var result = [];\n        var childNodes = node.getElementsByTagNameNS('*', tagName);\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === tagName && namespace.indexOf(child.namespaceURI) !== -1) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n\n    function queryChildNodes(node, tagName, namespace) {\n        if (!defined(node)) {\n            return [];\n        }\n        var result = [];\n        var childNodes = node.childNodes;\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === tagName && namespace.indexOf(child.namespaceURI) !== -1) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n\n    function queryNumericValue(node, tagName, namespace) {\n        var resultNode = queryFirstNode(node, tagName, namespace);\n        if (defined(resultNode)) {\n            var result = parseFloat(resultNode.textContent);\n            return !isNaN(result) ? result : undefined;\n        }\n        return undefined;\n    }\n\n    function queryStringValue(node, tagName, namespace) {\n        var result = queryFirstNode(node, tagName, namespace);\n        if (defined(result)) {\n            return result.textContent.trim();\n        }\n        return undefined;\n    }\n\n    function queryBooleanValue(node, tagName, namespace) {\n        var result = queryFirstNode(node, tagName, namespace);\n        if (defined(result)) {\n            var value = result.textContent.trim();\n            return value === '1' || /^true$/i.test(value);\n        }\n        return undefined;\n    }\n\n    function resolveHref(href, sourceResource, uriResolver) {\n        if (!defined(href)) {\n            return undefined;\n        }\n\n        var resource;\n        if (defined(uriResolver)) {\n            var blob = uriResolver[href];\n            if (defined(blob)) {\n                resource = new Resource({\n                    url: blob\n                });\n            } else {\n                // Needed for multiple levels of KML files in a KMZ\n                var baseUri = new Uri(sourceResource.getUrlComponent());\n                var uri = new Uri(href);\n                blob = uriResolver[uri.resolve(baseUri)];\n                if (defined(blob)) {\n                    resource = new Resource({\n                        url: blob\n                    });\n                }\n            }\n        }\n\n        if (!defined(resource)) {\n            resource = sourceResource.getDerivedResource({\n                url: href\n            });\n        }\n\n        return resource;\n    }\n\n    var colorOptions = {\n        maximumRed : undefined,\n        red : undefined,\n        maximumGreen : undefined,\n        green : undefined,\n        maximumBlue : undefined,\n        blue : undefined\n    };\n\n    function parseColorString(value, isRandom) {\n        if (!defined(value) || /^\\s*$/gm.test(value)) {\n            return undefined;\n        }\n\n        if (value[0] === '#') {\n            value = value.substring(1);\n        }\n\n        var alpha = parseInt(value.substring(0, 2), 16) / 255.0;\n        var blue = parseInt(value.substring(2, 4), 16) / 255.0;\n        var green = parseInt(value.substring(4, 6), 16) / 255.0;\n        var red = parseInt(value.substring(6, 8), 16) / 255.0;\n\n        if (!isRandom) {\n            return new Color(red, green, blue, alpha);\n        }\n\n        if (red > 0) {\n            colorOptions.maximumRed = red;\n            colorOptions.red = undefined;\n        } else {\n            colorOptions.maximumRed = undefined;\n            colorOptions.red = 0;\n        }\n        if (green > 0) {\n            colorOptions.maximumGreen = green;\n            colorOptions.green = undefined;\n        } else {\n            colorOptions.maximumGreen = undefined;\n            colorOptions.green = 0;\n        }\n        if (blue > 0) {\n            colorOptions.maximumBlue = blue;\n            colorOptions.blue = undefined;\n        } else {\n            colorOptions.maximumBlue = undefined;\n            colorOptions.blue = 0;\n        }\n        colorOptions.alpha = alpha;\n        return Color.fromRandom(colorOptions);\n    }\n\n    function queryColorValue(node, tagName, namespace) {\n        var value = queryStringValue(node, tagName, namespace);\n        if (!defined(value)) {\n            return undefined;\n        }\n        return parseColorString(value, queryStringValue(node, 'colorMode', namespace) === 'random');\n    }\n\n    function processTimeStamp(featureNode) {\n        var node = queryFirstNode(featureNode, 'TimeStamp', namespaces.kmlgx);\n        var whenString = queryStringValue(node, 'when', namespaces.kmlgx);\n\n        if (!defined(node) || !defined(whenString) || whenString.length === 0) {\n            return undefined;\n        }\n\n        //According to the KML spec, a TimeStamp represents a \"single moment in time\"\n        //However, since Cesium animates much differently than Google Earth, that doesn't\n        //Make much sense here.  Instead, we use the TimeStamp as the moment the feature\n        //comes into existence.  This works much better and gives a similar feel to\n        //GE's experience.\n        var when = JulianDate.fromIso8601(whenString);\n        var result = new TimeIntervalCollection();\n        result.addInterval(new TimeInterval({\n            start : when,\n            stop : Iso8601.MAXIMUM_VALUE\n        }));\n        return result;\n    }\n\n    function processTimeSpan(featureNode) {\n        var node = queryFirstNode(featureNode, 'TimeSpan', namespaces.kmlgx);\n        if (!defined(node)) {\n            return undefined;\n        }\n        var result;\n\n        var beginNode = queryFirstNode(node, 'begin', namespaces.kmlgx);\n        var beginDate = defined(beginNode) ? JulianDate.fromIso8601(beginNode.textContent) : undefined;\n\n        var endNode = queryFirstNode(node, 'end', namespaces.kmlgx);\n        var endDate = defined(endNode) ? JulianDate.fromIso8601(endNode.textContent) : undefined;\n\n        if (defined(beginDate) && defined(endDate)) {\n            if (JulianDate.lessThan(endDate, beginDate)) {\n                var tmp = beginDate;\n                beginDate = endDate;\n                endDate = tmp;\n            }\n            result = new TimeIntervalCollection();\n            result.addInterval(new TimeInterval({\n                start : beginDate,\n                stop : endDate\n            }));\n        } else if (defined(beginDate)) {\n            result = new TimeIntervalCollection();\n            result.addInterval(new TimeInterval({\n                start : beginDate,\n                stop : Iso8601.MAXIMUM_VALUE\n            }));\n        } else if (defined(endDate)) {\n            result = new TimeIntervalCollection();\n            result.addInterval(new TimeInterval({\n                start : Iso8601.MINIMUM_VALUE,\n                stop : endDate\n            }));\n        }\n\n        return result;\n    }\n\n    function createDefaultBillboard() {\n        var billboard = new BillboardGraphics();\n        billboard.width = BILLBOARD_SIZE;\n        billboard.height = BILLBOARD_SIZE;\n        billboard.scaleByDistance = new NearFarScalar(BILLBOARD_NEAR_DISTANCE, BILLBOARD_NEAR_RATIO, BILLBOARD_FAR_DISTANCE, BILLBOARD_FAR_RATIO);\n        billboard.pixelOffsetScaleByDistance = new NearFarScalar(BILLBOARD_NEAR_DISTANCE, BILLBOARD_NEAR_RATIO, BILLBOARD_FAR_DISTANCE, BILLBOARD_FAR_RATIO);\n        return billboard;\n    }\n\n    function createDefaultPolygon() {\n        var polygon = new PolygonGraphics();\n        polygon.outline = true;\n        polygon.outlineColor = Color.WHITE;\n        return polygon;\n    }\n\n    function createDefaultLabel() {\n        var label = new LabelGraphics();\n        label.translucencyByDistance = new NearFarScalar(3000000, 1.0, 5000000, 0.0);\n        label.pixelOffset = new Cartesian2(17, 0);\n        label.horizontalOrigin = HorizontalOrigin.LEFT;\n        label.font = '16px sans-serif';\n        label.style = LabelStyle.FILL_AND_OUTLINE;\n        return label;\n    }\n\n    function getIconHref(iconNode, dataSource, sourceResource, uriResolver, canRefresh) {\n        var href = queryStringValue(iconNode, 'href', namespaces.kml);\n        if (!defined(href) || (href.length === 0)) {\n            return undefined;\n        }\n\n        if (href.indexOf('root://icons/palette-') === 0) {\n            var palette = href.charAt(21);\n\n            // Get the icon number\n            var x = defaultValue(queryNumericValue(iconNode, 'x', namespaces.gx), 0);\n            var y = defaultValue(queryNumericValue(iconNode, 'y', namespaces.gx), 0);\n            x = Math.min(x / 32, 7);\n            y = 7 - Math.min(y / 32, 7);\n            var iconNum = (8 * y) + x;\n\n            href = 'https://maps.google.com/mapfiles/kml/pal' + palette + '/icon' + iconNum + '.png';\n        }\n\n        var hrefResource = resolveHref(href, sourceResource, uriResolver);\n\n        if (canRefresh) {\n            var refreshMode = queryStringValue(iconNode, 'refreshMode', namespaces.kml);\n            var viewRefreshMode = queryStringValue(iconNode, 'viewRefreshMode', namespaces.kml);\n            if (refreshMode === 'onInterval' || refreshMode === 'onExpire') {\n                oneTimeWarning('kml-refreshMode-' + refreshMode, 'KML - Unsupported Icon refreshMode: ' + refreshMode);\n            } else if (viewRefreshMode === 'onStop' || viewRefreshMode === 'onRegion') {\n                oneTimeWarning('kml-refreshMode-' + viewRefreshMode, 'KML - Unsupported Icon viewRefreshMode: ' + viewRefreshMode);\n            }\n\n            var viewBoundScale = defaultValue(queryStringValue(iconNode, 'viewBoundScale', namespaces.kml), 1.0);\n            var defaultViewFormat = (viewRefreshMode === 'onStop') ? 'BBOX=[bboxWest],[bboxSouth],[bboxEast],[bboxNorth]' : '';\n            var viewFormat = defaultValue(queryStringValue(iconNode, 'viewFormat', namespaces.kml), defaultViewFormat);\n            var httpQuery = queryStringValue(iconNode, 'httpQuery', namespaces.kml);\n            if (defined(viewFormat)) {\n                hrefResource.setQueryParameters(queryToObject(cleanupString(viewFormat)));\n            }\n            if (defined(httpQuery)) {\n                hrefResource.setQueryParameters(queryToObject(cleanupString(httpQuery)));\n            }\n\n            var ellipsoid = dataSource._ellipsoid;\n            processNetworkLinkQueryString(hrefResource, dataSource._camera, dataSource._canvas, viewBoundScale, dataSource._lastCameraView.bbox, ellipsoid);\n\n            return hrefResource;\n        }\n\n        return hrefResource;\n    }\n\n    function processBillboardIcon(dataSource, node, targetEntity, sourceResource, uriResolver) {\n        var scale = queryNumericValue(node, 'scale', namespaces.kml);\n        var heading = queryNumericValue(node, 'heading', namespaces.kml);\n        var color = queryColorValue(node, 'color', namespaces.kml);\n\n        var iconNode = queryFirstNode(node, 'Icon', namespaces.kml);\n        var icon = getIconHref(iconNode, dataSource, sourceResource, uriResolver, false);\n\n        // If icon tags are present but blank, we do not want to show an icon\n        if (defined(iconNode) && !defined(icon)) {\n            icon = false;\n        }\n\n        var x = queryNumericValue(iconNode, 'x', namespaces.gx);\n        var y = queryNumericValue(iconNode, 'y', namespaces.gx);\n        var w = queryNumericValue(iconNode, 'w', namespaces.gx);\n        var h = queryNumericValue(iconNode, 'h', namespaces.gx);\n\n        var hotSpotNode = queryFirstNode(node, 'hotSpot', namespaces.kml);\n        var hotSpotX = queryNumericAttribute(hotSpotNode, 'x');\n        var hotSpotY = queryNumericAttribute(hotSpotNode, 'y');\n        var hotSpotXUnit = queryStringAttribute(hotSpotNode, 'xunits');\n        var hotSpotYUnit = queryStringAttribute(hotSpotNode, 'yunits');\n\n        var billboard = targetEntity.billboard;\n        if (!defined(billboard)) {\n            billboard = createDefaultBillboard();\n            targetEntity.billboard = billboard;\n        }\n\n        billboard.image = icon;\n        billboard.scale = scale;\n        billboard.color = color;\n\n        if (defined(x) || defined(y) || defined(w) || defined(h)) {\n            billboard.imageSubRegion = new BoundingRectangle(x, y, w, h);\n        }\n\n        //GE treats a heading of zero as no heading\n        //You can still point north using a 360 degree angle (or any multiple of 360)\n        if (defined(heading) && heading !== 0) {\n            billboard.rotation = CesiumMath.toRadians(-heading);\n            billboard.alignedAxis = Cartesian3.UNIT_Z;\n        }\n\n        //Hotpot is the KML equivalent of pixel offset\n        //The hotspot origin is the lower left, but we leave\n        //our billboard origin at the center and simply\n        //modify the pixel offset to take this into account\n        scale = defaultValue(scale, 1.0);\n\n        var xOffset;\n        var yOffset;\n        if (defined(hotSpotX)) {\n            if (hotSpotXUnit === 'pixels') {\n                xOffset = -hotSpotX * scale;\n            } else if (hotSpotXUnit === 'insetPixels') {\n                xOffset = (hotSpotX - BILLBOARD_SIZE) * scale;\n            } else if (hotSpotXUnit === 'fraction') {\n                xOffset = -hotSpotX * BILLBOARD_SIZE * scale;\n            }\n            xOffset += BILLBOARD_SIZE * 0.5 * scale;\n        }\n\n        if (defined(hotSpotY)) {\n            if (hotSpotYUnit === 'pixels') {\n                yOffset = hotSpotY * scale;\n            } else if (hotSpotYUnit === 'insetPixels') {\n                yOffset = (-hotSpotY + BILLBOARD_SIZE) * scale;\n            } else if (hotSpotYUnit === 'fraction') {\n                yOffset = hotSpotY * BILLBOARD_SIZE * scale;\n            }\n\n            yOffset -= BILLBOARD_SIZE * 0.5 * scale;\n        }\n\n        if (defined(xOffset) || defined(yOffset)) {\n            billboard.pixelOffset = new Cartesian2(xOffset, yOffset);\n        }\n    }\n\n    function applyStyle(dataSource, styleNode, targetEntity, sourceResource, uriResolver) {\n        for (var i = 0, len = styleNode.childNodes.length; i < len; i++) {\n            var node = styleNode.childNodes.item(i);\n            if (node.localName === 'IconStyle') {\n                processBillboardIcon(dataSource, node, targetEntity, sourceResource, uriResolver);\n            } else if (node.localName === 'LabelStyle') {\n                var label = targetEntity.label;\n                if (!defined(label)) {\n                    label = createDefaultLabel();\n                    targetEntity.label = label;\n                }\n                label.scale = defaultValue(queryNumericValue(node, 'scale', namespaces.kml), label.scale);\n                label.fillColor = defaultValue(queryColorValue(node, 'color', namespaces.kml), label.fillColor);\n                label.text = targetEntity.name;\n            } else if (node.localName === 'LineStyle') {\n                var polyline = targetEntity.polyline;\n                if (!defined(polyline)) {\n                    polyline = new PolylineGraphics();\n                    targetEntity.polyline = polyline;\n                }\n                polyline.width = queryNumericValue(node, 'width', namespaces.kml);\n                polyline.material = queryColorValue(node, 'color', namespaces.kml);\n                if (defined(queryColorValue(node, 'outerColor', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:outerColor', 'KML - gx:outerColor is not supported in a LineStyle');\n                }\n                if (defined(queryNumericValue(node, 'outerWidth', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:outerWidth', 'KML - gx:outerWidth is not supported in a LineStyle');\n                }\n                if (defined(queryNumericValue(node, 'physicalWidth', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:physicalWidth', 'KML - gx:physicalWidth is not supported in a LineStyle');\n                }\n                if (defined(queryBooleanValue(node, 'labelVisibility', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:labelVisibility', 'KML - gx:labelVisibility is not supported in a LineStyle');\n                }\n            } else if (node.localName === 'PolyStyle') {\n                var polygon = targetEntity.polygon;\n                if (!defined(polygon)) {\n                    polygon = createDefaultPolygon();\n                    targetEntity.polygon = polygon;\n                }\n                polygon.material = defaultValue(queryColorValue(node, 'color', namespaces.kml), polygon.material);\n                polygon.fill = defaultValue(queryBooleanValue(node, 'fill', namespaces.kml), polygon.fill);\n                polygon.outline = defaultValue(queryBooleanValue(node, 'outline', namespaces.kml), polygon.outline);\n            } else if (node.localName === 'BalloonStyle') {\n                var bgColor = defaultValue(parseColorString(queryStringValue(node, 'bgColor', namespaces.kml)), Color.WHITE);\n                var textColor = defaultValue(parseColorString(queryStringValue(node, 'textColor', namespaces.kml)), Color.BLACK);\n                var text = queryStringValue(node, 'text', namespaces.kml);\n\n                //This is purely an internal property used in style processing,\n                //it never ends up on the final entity.\n                targetEntity.addProperty('balloonStyle');\n                targetEntity.balloonStyle = {\n                    bgColor : bgColor,\n                    textColor : textColor,\n                    text : text\n                };\n            } else if (node.localName === 'ListStyle') {\n                var listItemType = queryStringValue(node, 'listItemType', namespaces.kml);\n                if (listItemType === 'radioFolder' || listItemType === 'checkOffOnly') {\n                    oneTimeWarning('kml-listStyle-' + listItemType, 'KML - Unsupported ListStyle with listItemType: ' + listItemType);\n                }\n            }\n        }\n    }\n\n    //Processes and merges any inline styles for the provided node into the provided entity.\n    function computeFinalStyle(dataSource, placeMark, styleCollection, sourceResource, uriResolver) {\n        var result = new Entity();\n        var styleEntity;\n\n        //Google earth seems to always use the last inline Style/StyleMap only\n        var styleIndex = -1;\n        var childNodes = placeMark.childNodes;\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === 'Style' || child.localName === 'StyleMap') {\n                styleIndex = q;\n            }\n        }\n\n        if (styleIndex !== -1) {\n            var inlineStyleNode = childNodes[styleIndex];\n            if (inlineStyleNode.localName === 'Style') {\n                applyStyle(dataSource, inlineStyleNode, result, sourceResource, uriResolver);\n            } else { // StyleMap\n                var pairs = queryChildNodes(inlineStyleNode, 'Pair', namespaces.kml);\n                for (var p = 0; p < pairs.length; p++) {\n                    var pair = pairs[p];\n                    var key = queryStringValue(pair, 'key', namespaces.kml);\n                    if (key === 'normal') {\n                        var styleUrl = queryStringValue(pair, 'styleUrl', namespaces.kml);\n                        if (defined(styleUrl)) {\n                            styleEntity = styleCollection.getById(styleUrl);\n                            if (!defined(styleEntity)) {\n                                styleEntity = styleCollection.getById('#' + styleUrl);\n                            }\n                            if (defined(styleEntity)) {\n                                result.merge(styleEntity);\n                            }\n                        } else {\n                            var node = queryFirstNode(pair, 'Style', namespaces.kml);\n                            applyStyle(dataSource, node, result, sourceResource, uriResolver);\n                        }\n                    } else {\n                        oneTimeWarning('kml-styleMap-' + key, 'KML - Unsupported StyleMap key: ' + key);\n                    }\n                }\n            }\n        }\n\n        //Google earth seems to always use the first external style only.\n        var externalStyle = queryStringValue(placeMark, 'styleUrl', namespaces.kml);\n        if (defined(externalStyle)) {\n            var id = externalStyle;\n            if (externalStyle[0] !== '#' && externalStyle.indexOf('#') !== -1) {\n                var tokens = externalStyle.split('#');\n                var uri = tokens[0];\n                var resource = sourceResource.getDerivedResource({\n                    url: uri\n                });\n\n                id = resource.getUrlComponent() + '#' + tokens[1];\n            }\n\n            styleEntity = styleCollection.getById(id);\n            if (!defined(styleEntity)) {\n                styleEntity = styleCollection.getById('#' + id);\n            }\n            if (defined(styleEntity)) {\n                result.merge(styleEntity);\n            }\n        }\n\n        return result;\n    }\n\n    //Asynchronously processes an external style file.\n    function processExternalStyles(dataSource, resource, styleCollection) {\n        return resource.fetchXML().then(function(styleKml) {\n            return processStyles(dataSource, styleKml, styleCollection, resource, true);\n        });\n    }\n\n    //Processes all shared and external styles and stores\n    //their id into the provided styleCollection.\n    //Returns an array of promises that will resolve when\n    //each style is loaded.\n    function processStyles(dataSource, kml, styleCollection, sourceResource, isExternal, uriResolver) {\n        var i;\n        var id;\n        var styleEntity;\n\n        var node;\n        var styleNodes = queryNodes(kml, 'Style', namespaces.kml);\n        if (defined(styleNodes)) {\n            var styleNodesLength = styleNodes.length;\n            for (i = 0; i < styleNodesLength; i++) {\n                node = styleNodes[i];\n                id = queryStringAttribute(node, 'id');\n                if (defined(id)) {\n                    id = '#' + id;\n                    if (isExternal && defined(sourceResource)) {\n                        id = sourceResource.getUrlComponent() + id;\n                    }\n                    if (!defined(styleCollection.getById(id))) {\n                        styleEntity = new Entity({\n                            id : id\n                        });\n                        styleCollection.add(styleEntity);\n                        applyStyle(dataSource, node, styleEntity, sourceResource, uriResolver);\n                    }\n                }\n            }\n        }\n\n        var styleMaps = queryNodes(kml, 'StyleMap', namespaces.kml);\n        if (defined(styleMaps)) {\n            var styleMapsLength = styleMaps.length;\n            for (i = 0; i < styleMapsLength; i++) {\n                var styleMap = styleMaps[i];\n                id = queryStringAttribute(styleMap, 'id');\n                if (defined(id)) {\n                    var pairs = queryChildNodes(styleMap, 'Pair', namespaces.kml);\n                    for (var p = 0; p < pairs.length; p++) {\n                        var pair = pairs[p];\n                        var key = queryStringValue(pair, 'key', namespaces.kml);\n                        if (key === 'normal') {\n                            id = '#' + id;\n                            if (isExternal && defined(sourceResource)) {\n                                id = sourceResource.getUrlComponent() + id;\n                            }\n                            if (!defined(styleCollection.getById(id))) {\n                                styleEntity = styleCollection.getOrCreateEntity(id);\n\n                                var styleUrl = queryStringValue(pair, 'styleUrl', namespaces.kml);\n                                if (defined(styleUrl)) {\n                                    if (styleUrl[0] !== '#') {\n                                        styleUrl = '#' + styleUrl;\n                                    }\n\n                                    if (isExternal && defined(sourceResource)) {\n                                        styleUrl = sourceResource.getUrlComponent() + styleUrl;\n                                    }\n                                    var base = styleCollection.getById(styleUrl);\n\n                                    if (defined(base)) {\n                                        styleEntity.merge(base);\n                                    }\n                                } else {\n                                    node = queryFirstNode(pair, 'Style', namespaces.kml);\n                                    applyStyle(dataSource, node, styleEntity, sourceResource, uriResolver);\n                                }\n                            }\n                        } else {\n                            oneTimeWarning('kml-styleMap-' + key, 'KML - Unsupported StyleMap key: ' + key);\n                        }\n                    }\n                }\n            }\n        }\n\n        var promises = [];\n        var styleUrlNodes = kml.getElementsByTagName('styleUrl');\n        var styleUrlNodesLength = styleUrlNodes.length;\n        for (i = 0; i < styleUrlNodesLength; i++) {\n            var styleReference = styleUrlNodes[i].textContent;\n            if (styleReference[0] !== '#') {\n                //According to the spec, all local styles should start with a #\n                //and everything else is an external style that has a # seperating\n                //the URL of the document and the style.  However, Google Earth\n                //also accepts styleUrls without a # as meaning a local style.\n                var tokens = styleReference.split('#');\n                if (tokens.length === 2) {\n                    var uri = tokens[0];\n                    var resource = sourceResource.getDerivedResource({\n                        url: uri\n                    });\n\n                    promises.push(processExternalStyles(dataSource, resource, styleCollection));\n                }\n            }\n        }\n\n        return promises;\n    }\n\n    function createDropLine(entityCollection, entity, styleEntity) {\n        var entityPosition = new ReferenceProperty(entityCollection, entity.id, ['position']);\n        var surfacePosition = new ScaledPositionProperty(entity.position);\n        entity.polyline = defined(styleEntity.polyline) ? styleEntity.polyline.clone() : new PolylineGraphics();\n        entity.polyline.positions = new PositionPropertyArray([entityPosition, surfacePosition]);\n    }\n\n    function heightReferenceFromAltitudeMode(altitudeMode, gxAltitudeMode) {\n        if (!defined(altitudeMode) && !defined(gxAltitudeMode) || altitudeMode === 'clampToGround') {\n            return HeightReference.CLAMP_TO_GROUND;\n        }\n\n        if (altitudeMode === 'relativeToGround') {\n            return HeightReference.RELATIVE_TO_GROUND;\n        }\n\n        if (altitudeMode === 'absolute') {\n            return HeightReference.NONE;\n        }\n\n        if (gxAltitudeMode === 'clampToSeaFloor') {\n            oneTimeWarning('kml-gx:altitudeMode-clampToSeaFloor', 'KML - <gx:altitudeMode>:clampToSeaFloor is currently not supported, using <kml:altitudeMode>:clampToGround.');\n            return HeightReference.CLAMP_TO_GROUND;\n        }\n\n        if (gxAltitudeMode === 'relativeToSeaFloor') {\n            oneTimeWarning('kml-gx:altitudeMode-relativeToSeaFloor', 'KML - <gx:altitudeMode>:relativeToSeaFloor is currently not supported, using <kml:altitudeMode>:relativeToGround.');\n            return HeightReference.RELATIVE_TO_GROUND;\n        }\n\n        if (defined(altitudeMode)) {\n            oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown <kml:altitudeMode>:' + altitudeMode + ', using <kml:altitudeMode>:CLAMP_TO_GROUND.');\n        } else {\n            oneTimeWarning('kml-gx:altitudeMode-unknown', 'KML - Unknown <gx:altitudeMode>:' + gxAltitudeMode + ', using <kml:altitudeMode>:CLAMP_TO_GROUND.');\n        }\n\n        // Clamp to ground is the default\n        return HeightReference.CLAMP_TO_GROUND;\n    }\n\n    function createPositionPropertyFromAltitudeMode(property, altitudeMode, gxAltitudeMode) {\n        if (gxAltitudeMode === 'relativeToSeaFloor' || altitudeMode === 'absolute' || altitudeMode === 'relativeToGround') {\n            //Just return the ellipsoid referenced property until we support MSL\n            return property;\n        }\n\n        if ((defined(altitudeMode) && altitudeMode !== 'clampToGround') || //\n            (defined(gxAltitudeMode) && gxAltitudeMode !== 'clampToSeaFloor')) {\n            oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + defaultValue(altitudeMode, gxAltitudeMode));\n        }\n\n        // Clamp to ground is the default\n        return new ScaledPositionProperty(property);\n    }\n\n    function createPositionPropertyArrayFromAltitudeMode(properties, altitudeMode, gxAltitudeMode, ellipsoid) {\n        if (!defined(properties)) {\n            return undefined;\n        }\n\n        if (gxAltitudeMode === 'relativeToSeaFloor' || altitudeMode === 'absolute' || altitudeMode === 'relativeToGround') {\n            //Just return the ellipsoid referenced property until we support MSL\n            return properties;\n        }\n\n        if ((defined(altitudeMode) && altitudeMode !== 'clampToGround') || //\n            (defined(gxAltitudeMode) && gxAltitudeMode !== 'clampToSeaFloor')) {\n            oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + defaultValue(altitudeMode, gxAltitudeMode));\n        }\n\n        // Clamp to ground is the default\n        var propertiesLength = properties.length;\n        for (var i = 0; i < propertiesLength; i++) {\n            var property = properties[i];\n            ellipsoid.scaleToGeodeticSurface(property, property);\n        }\n        return properties;\n    }\n\n    function processPositionGraphics(dataSource, entity, styleEntity, heightReference) {\n        var label = entity.label;\n        if (!defined(label)) {\n            label = defined(styleEntity.label) ? styleEntity.label.clone() : createDefaultLabel();\n            entity.label = label;\n        }\n        label.text = entity.name;\n\n        var billboard = entity.billboard;\n        if (!defined(billboard)) {\n            billboard = defined(styleEntity.billboard) ? styleEntity.billboard.clone() : createDefaultBillboard();\n            entity.billboard = billboard;\n        }\n\n        if (!defined(billboard.image)) {\n            billboard.image = dataSource._pinBuilder.fromColor(Color.YELLOW, 64);\n\n        // If there were empty <Icon> tags in the KML, then billboard.image was set to false above\n        // However, in this case, the false value would have been converted to a property afterwards\n        // Thus, we check if billboard.image is defined with value of false\n        } else if (!billboard.image.getValue()) {\n            billboard.image = undefined;\n        }\n\n        var scale = 1.0;\n        if (defined(billboard.scale)) {\n            scale = billboard.scale.getValue();\n            if (scale !== 0) {\n                label.pixelOffset = new Cartesian2((scale * 16) + 1, 0);\n            } else {\n                //Minor tweaks to better match Google Earth.\n                label.pixelOffset = undefined;\n                label.horizontalOrigin = undefined;\n            }\n        }\n\n        if (defined(heightReference) && dataSource._clampToGround) {\n            billboard.heightReference = heightReference;\n            label.heightReference = heightReference;\n        }\n    }\n\n    function processPathGraphics(entity, styleEntity) {\n        var path = entity.path;\n        if (!defined(path)) {\n            path = new PathGraphics();\n            path.leadTime = 0;\n            entity.path = path;\n        }\n\n        var polyline = styleEntity.polyline;\n        if (defined(polyline)) {\n            path.material = polyline.material;\n            path.width = polyline.width;\n        }\n    }\n\n    function processPoint(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var coordinatesString = queryStringValue(geometryNode, 'coordinates', namespaces.kml);\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var ellipsoid = dataSource._ellipsoid;\n        var position = readCoordinate(coordinatesString, ellipsoid);\n\n        entity.position = position;\n        processPositionGraphics(dataSource, entity, styleEntity, heightReferenceFromAltitudeMode(altitudeMode, gxAltitudeMode));\n\n        if (extrude && isExtrudable(altitudeMode, gxAltitudeMode)) {\n            createDropLine(entityCollection, entity, styleEntity);\n        }\n\n        return true;\n    }\n\n    function processLineStringOrLinearRing(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var coordinatesNode = queryFirstNode(geometryNode, 'coordinates', namespaces.kml);\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var tessellate = queryBooleanValue(geometryNode, 'tessellate', namespaces.kml);\n        var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n        var zIndex = queryNumericValue(geometryNode, 'drawOrder', namespaces.gx);\n\n        var ellipsoid = dataSource._ellipsoid;\n        var coordinates = readCoordinates(coordinatesNode, ellipsoid);\n        var polyline = styleEntity.polyline;\n        if (canExtrude && extrude) {\n            var wall = new WallGraphics();\n            entity.wall = wall;\n            wall.positions = coordinates;\n            var polygon = styleEntity.polygon;\n\n            if (defined(polygon)) {\n                wall.fill = polygon.fill;\n                wall.material = polygon.material;\n            }\n\n            //Always outline walls so they show up in 2D.\n            wall.outline = true;\n            if (defined(polyline)) {\n                wall.outlineColor = defined(polyline.material) ? polyline.material.color : Color.WHITE;\n                wall.outlineWidth = polyline.width;\n            } else if (defined(polygon)) {\n                wall.outlineColor = defined(polygon.material) ? polygon.material.color : Color.WHITE;\n            }\n        } else if (dataSource._clampToGround && !canExtrude && tessellate) {\n            var polylineGraphics = new PolylineGraphics();\n            polylineGraphics.clampToGround = true;\n            entity.polyline = polylineGraphics;\n            polylineGraphics.positions = coordinates;\n            if (defined(polyline)) {\n                polylineGraphics.material = defined(polyline.material) ? polyline.material.color.getValue(Iso8601.MINIMUM_VALUE) : Color.WHITE;\n                polylineGraphics.width = defaultValue(polyline.width, 1.0);\n            } else {\n                polylineGraphics.material = Color.WHITE;\n                polylineGraphics.width = 1.0;\n            }\n            polylineGraphics.zIndex = zIndex;\n        } else {\n            if (defined(zIndex)) {\n                oneTimeWarning('kml-gx:drawOrder', 'KML - gx:drawOrder is not supported in LineStrings when clampToGround is false');\n            }\n\n            polyline = defined(polyline) ? polyline.clone() : new PolylineGraphics();\n            entity.polyline = polyline;\n            polyline.positions = createPositionPropertyArrayFromAltitudeMode(coordinates, altitudeMode, gxAltitudeMode, ellipsoid);\n            if (!tessellate || canExtrude) {\n                polyline.arcType = ArcType.NONE;\n            }\n        }\n\n        return true;\n    }\n\n    function processPolygon(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var outerBoundaryIsNode = queryFirstNode(geometryNode, 'outerBoundaryIs', namespaces.kml);\n        var linearRingNode = queryFirstNode(outerBoundaryIsNode, 'LinearRing', namespaces.kml);\n        var coordinatesNode = queryFirstNode(linearRingNode, 'coordinates', namespaces.kml);\n        var ellipsoid = dataSource._ellipsoid;\n        var coordinates = readCoordinates(coordinatesNode, ellipsoid);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n\n        var polygon = defined(styleEntity.polygon) ? styleEntity.polygon.clone() : createDefaultPolygon();\n\n        var polyline = styleEntity.polyline;\n        if (defined(polyline)) {\n            polygon.outlineColor = defined(polyline.material) ? polyline.material.color : Color.WHITE;\n            polygon.outlineWidth = polyline.width;\n        }\n        entity.polygon = polygon;\n\n        if (canExtrude) {\n            polygon.perPositionHeight = true;\n            polygon.extrudedHeight = extrude ? 0 : undefined;\n        } else if (!dataSource._clampToGround) {\n            polygon.height = 0;\n        }\n\n        if (defined(coordinates)) {\n            var hierarchy = new PolygonHierarchy(coordinates);\n            var innerBoundaryIsNodes = queryChildNodes(geometryNode, 'innerBoundaryIs', namespaces.kml);\n            for (var j = 0; j < innerBoundaryIsNodes.length; j++) {\n                linearRingNode = queryChildNodes(innerBoundaryIsNodes[j], 'LinearRing', namespaces.kml);\n                for (var k = 0; k < linearRingNode.length; k++) {\n                    coordinatesNode = queryFirstNode(linearRingNode[k], 'coordinates', namespaces.kml);\n                    coordinates = readCoordinates(coordinatesNode, ellipsoid);\n                    if (defined(coordinates)) {\n                        hierarchy.holes.push(new PolygonHierarchy(coordinates));\n                    }\n                }\n            }\n            polygon.hierarchy = hierarchy;\n        }\n\n        return true;\n    }\n\n    function processTrack(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var coordNodes = queryChildNodes(geometryNode, 'coord', namespaces.gx);\n        var angleNodes = queryChildNodes(geometryNode, 'angles', namespaces.gx);\n        var timeNodes = queryChildNodes(geometryNode, 'when', namespaces.kml);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n        var ellipsoid = dataSource._ellipsoid;\n\n        if (angleNodes.length > 0) {\n            oneTimeWarning('kml-gx:angles', 'KML - gx:angles are not supported in gx:Tracks');\n        }\n\n        var length = Math.min(coordNodes.length, timeNodes.length);\n        var coordinates = [];\n        var times = [];\n        for (var i = 0; i < length; i++) {\n            var position = readCoordinate(coordNodes[i].textContent, ellipsoid);\n            coordinates.push(position);\n            times.push(JulianDate.fromIso8601(timeNodes[i].textContent));\n        }\n        var property = new SampledPositionProperty();\n        property.addSamples(times, coordinates);\n        entity.position = property;\n        processPositionGraphics(dataSource, entity, styleEntity, heightReferenceFromAltitudeMode(altitudeMode, gxAltitudeMode));\n        processPathGraphics(entity, styleEntity);\n\n        entity.availability = new TimeIntervalCollection();\n\n        if (timeNodes.length > 0) {\n            entity.availability.addInterval(new TimeInterval({\n                start : times[0],\n                stop : times[times.length - 1]\n            }));\n        }\n\n        if (canExtrude && extrude) {\n            createDropLine(entityCollection, entity, styleEntity);\n        }\n\n        return true;\n    }\n\n    function addToMultiTrack(times, positions, composite, availability, dropShowProperty, extrude, altitudeMode, gxAltitudeMode, includeEndPoints) {\n        var start = times[0];\n        var stop = times[times.length - 1];\n\n        var data = new SampledPositionProperty();\n        data.addSamples(times, positions);\n\n        composite.intervals.addInterval(new TimeInterval({\n            start : start,\n            stop : stop,\n            isStartIncluded : includeEndPoints,\n            isStopIncluded : includeEndPoints,\n            data : createPositionPropertyFromAltitudeMode(data, altitudeMode, gxAltitudeMode)\n        }));\n        availability.addInterval(new TimeInterval({\n            start : start,\n            stop : stop,\n            isStartIncluded : includeEndPoints,\n            isStopIncluded : includeEndPoints\n        }));\n        dropShowProperty.intervals.addInterval(new TimeInterval({\n            start : start,\n            stop : stop,\n            isStartIncluded : includeEndPoints,\n            isStopIncluded : includeEndPoints,\n            data : extrude\n        }));\n    }\n\n    function processMultiTrack(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        // Multitrack options do not work in GE as detailed in the spec,\n        // rather than altitudeMode being at the MultiTrack level,\n        // GE just defers all settings to the underlying track.\n\n        var interpolate = queryBooleanValue(geometryNode, 'interpolate', namespaces.gx);\n        var trackNodes = queryChildNodes(geometryNode, 'Track', namespaces.gx);\n\n        var times;\n        var lastStop;\n        var lastStopPosition;\n        var needDropLine = false;\n        var dropShowProperty = new TimeIntervalCollectionProperty();\n        var availability = new TimeIntervalCollection();\n        var composite = new CompositePositionProperty();\n        var ellipsoid = dataSource._ellipsoid;\n        for (var i = 0, len = trackNodes.length; i < len; i++) {\n            var trackNode = trackNodes[i];\n            var timeNodes = queryChildNodes(trackNode, 'when', namespaces.kml);\n            var coordNodes = queryChildNodes(trackNode, 'coord', namespaces.gx);\n            var altitudeMode = queryStringValue(trackNode, 'altitudeMode', namespaces.kml);\n            var gxAltitudeMode = queryStringValue(trackNode, 'altitudeMode', namespaces.gx);\n            var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n            var extrude = queryBooleanValue(trackNode, 'extrude', namespaces.kml);\n\n            var length = Math.min(coordNodes.length, timeNodes.length);\n\n            var positions = [];\n            times = [];\n            for (var x = 0; x < length; x++) {\n                var position = readCoordinate(coordNodes[x].textContent, ellipsoid);\n                positions.push(position);\n                times.push(JulianDate.fromIso8601(timeNodes[x].textContent));\n            }\n\n            if (interpolate) {\n                //If we are interpolating, then we need to fill in the end of\n                //the last track and the beginning of this one with a sampled\n                //property.  From testing in Google Earth, this property\n                //is never extruded and always absolute.\n                if (defined(lastStop)) {\n                    addToMultiTrack([lastStop, times[0]], [lastStopPosition, positions[0]], composite, availability, dropShowProperty, false, 'absolute', undefined, false);\n                }\n                lastStop = times[length - 1];\n                lastStopPosition = positions[positions.length - 1];\n            }\n\n            addToMultiTrack(times, positions, composite, availability, dropShowProperty, canExtrude && extrude, altitudeMode, gxAltitudeMode, true);\n            needDropLine = needDropLine || (canExtrude && extrude);\n        }\n\n        entity.availability = availability;\n        entity.position = composite;\n        processPositionGraphics(dataSource, entity, styleEntity);\n        processPathGraphics(entity, styleEntity);\n        if (needDropLine) {\n            createDropLine(entityCollection, entity, styleEntity);\n            entity.polyline.show = dropShowProperty;\n        }\n\n        return true;\n    }\n\n    var geometryTypes = {\n        Point : processPoint,\n        LineString : processLineStringOrLinearRing,\n        LinearRing : processLineStringOrLinearRing,\n        Polygon : processPolygon,\n        Track : processTrack,\n        MultiTrack : processMultiTrack,\n        MultiGeometry : processMultiGeometry,\n        Model : processUnsupportedGeometry\n    };\n\n    function processMultiGeometry(dataSource, entityCollection, geometryNode, entity, styleEntity, context) {\n        var childNodes = geometryNode.childNodes;\n        var hasGeometry = false;\n        for (var i = 0, len = childNodes.length; i < len; i++) {\n            var childNode = childNodes.item(i);\n            var geometryProcessor = geometryTypes[childNode.localName];\n            if (defined(geometryProcessor)) {\n                var childEntity = createEntity(childNode, entityCollection, context);\n                childEntity.parent = entity;\n                childEntity.name = entity.name;\n                childEntity.availability = entity.availability;\n                childEntity.description = entity.description;\n                childEntity.kml = entity.kml;\n                if (geometryProcessor(dataSource, entityCollection, childNode, childEntity, styleEntity)) {\n                    hasGeometry = true;\n                }\n            }\n        }\n\n        return hasGeometry;\n    }\n\n    function processUnsupportedGeometry(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        oneTimeWarning('kml-unsupportedGeometry', 'KML - Unsupported geometry: ' + geometryNode.localName);\n        return false;\n    }\n\n    function processExtendedData(node, entity) {\n        var extendedDataNode = queryFirstNode(node, 'ExtendedData', namespaces.kml);\n\n        if (!defined(extendedDataNode)) {\n            return undefined;\n        }\n\n        if (defined(queryFirstNode(extendedDataNode, 'SchemaData', namespaces.kml))) {\n            oneTimeWarning('kml-schemaData', 'KML - SchemaData is unsupported');\n        }\n        if (defined(queryStringAttribute(extendedDataNode, 'xmlns:prefix'))) {\n            oneTimeWarning('kml-extendedData', 'KML - ExtendedData with xmlns:prefix is unsupported');\n        }\n\n        var result = {};\n        var dataNodes = queryChildNodes(extendedDataNode, 'Data', namespaces.kml);\n        if (defined(dataNodes)) {\n            var length = dataNodes.length;\n            for (var i = 0; i < length; i++) {\n                var dataNode = dataNodes[i];\n                var name = queryStringAttribute(dataNode, 'name');\n                if (defined(name)) {\n                    result[name] = {\n                        displayName : queryStringValue(dataNode, 'displayName', namespaces.kml),\n                        value : queryStringValue(dataNode, 'value', namespaces.kml)\n                    };\n                }\n            }\n        }\n        entity.kml.extendedData = result;\n    }\n\n    var scratchDiv = document.createElement('div');\n\n    function processDescription(node, entity, styleEntity, uriResolver, sourceResource) {\n        var i;\n        var key;\n        var keys;\n\n        var kmlData = entity.kml;\n        var extendedData = kmlData.extendedData;\n        var description = queryStringValue(node, 'description', namespaces.kml);\n\n        var balloonStyle = defaultValue(entity.balloonStyle, styleEntity.balloonStyle);\n\n        var background = Color.WHITE;\n        var foreground = Color.BLACK;\n        var text = description;\n\n        if (defined(balloonStyle)) {\n            background = defaultValue(balloonStyle.bgColor, Color.WHITE);\n            foreground = defaultValue(balloonStyle.textColor, Color.BLACK);\n            text = defaultValue(balloonStyle.text, description);\n        }\n\n        var value;\n        if (defined(text)) {\n            text = text.replace('$[name]', defaultValue(entity.name, ''));\n            text = text.replace('$[description]', defaultValue(description, ''));\n            text = text.replace('$[address]', defaultValue(kmlData.address, ''));\n            text = text.replace('$[Snippet]', defaultValue(kmlData.snippet, ''));\n            text = text.replace('$[id]', entity.id);\n\n            //While not explicitly defined by the OGC spec, in Google Earth\n            //The appearance of geDirections adds the directions to/from links\n            //We simply replace this string with nothing.\n            text = text.replace('$[geDirections]', '');\n\n            if (defined(extendedData)) {\n                var matches = text.match(/\\$\\[.+?\\]/g);\n                if (matches !== null) {\n                    for (i = 0; i < matches.length; i++) {\n                        var token = matches[i];\n                        var propertyName = token.substr(2, token.length - 3);\n                        var isDisplayName = /\\/displayName$/.test(propertyName);\n                        propertyName = propertyName.replace(/\\/displayName$/, '');\n\n                        value = extendedData[propertyName];\n                        if (defined(value)) {\n                            value = isDisplayName ? value.displayName : value.value;\n                        }\n                        if (defined(value)) {\n                            text = text.replace(token, defaultValue(value, ''));\n                        }\n                    }\n                }\n            }\n        } else if (defined(extendedData)) {\n            //If no description exists, build a table out of the extended data\n            keys = Object.keys(extendedData);\n            if (keys.length > 0) {\n                text = '<table class=\"cesium-infoBox-defaultTable cesium-infoBox-defaultTable-lighter\"><tbody>';\n                for (i = 0; i < keys.length; i++) {\n                    key = keys[i];\n                    value = extendedData[key];\n                    text += '<tr><th>' + defaultValue(value.displayName, key) + '</th><td>' + defaultValue(value.value, '') + '</td></tr>';\n                }\n                text += '</tbody></table>';\n            }\n        }\n\n        if (!defined(text)) {\n            //No description\n            return;\n        }\n\n        //Turns non-explicit links into clickable links.\n        text = autolinker.link(text);\n\n        //Use a temporary div to manipulate the links\n        //so that they open in a new window.\n        scratchDiv.innerHTML = text;\n        var links = scratchDiv.querySelectorAll('a');\n        for (i = 0; i < links.length; i++) {\n            links[i].setAttribute('target', '_blank');\n        }\n\n        //Rewrite any KMZ embedded urls\n        if (defined(uriResolver) && uriResolver.keys.length > 1) {\n            embedDataUris(scratchDiv, 'a', 'href', uriResolver);\n            embedDataUris(scratchDiv, 'img', 'src', uriResolver);\n        }\n\n        //Make relative urls absolute using the sourceResource\n        applyBasePath(scratchDiv, 'a', 'href', sourceResource);\n        applyBasePath(scratchDiv, 'img', 'src', sourceResource);\n\n        var tmp = '<div class=\"cesium-infoBox-description-lighter\" style=\"';\n        tmp += 'overflow:auto;';\n        tmp += 'word-wrap:break-word;';\n        tmp += 'background-color:' + background.toCssColorString() + ';';\n        tmp += 'color:' + foreground.toCssColorString() + ';';\n        tmp += '\">';\n        tmp += scratchDiv.innerHTML + '</div>';\n        scratchDiv.innerHTML = '';\n\n        //Set the final HTML as the description.\n        entity.description = tmp;\n    }\n\n    function processFeature(dataSource, parent, featureNode, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var entity = createEntity(featureNode, entityCollection, context);\n        var kmlData = entity.kml;\n        var styleEntity = computeFinalStyle(dataSource, featureNode, styleCollection, sourceResource, uriResolver);\n\n        var name = queryStringValue(featureNode, 'name', namespaces.kml);\n        entity.name = name;\n        entity.parent = parent;\n\n        var availability = processTimeSpan(featureNode);\n        if (!defined(availability)) {\n            availability = processTimeStamp(featureNode);\n        }\n        entity.availability = availability;\n\n        mergeAvailabilityWithParent(entity);\n\n        // Per KML spec \"A Feature is visible only if it and all its ancestors are visible.\"\n        function ancestryIsVisible(parentEntity) {\n            if (!parentEntity) {\n                return true;\n            }\n            return parentEntity.show && ancestryIsVisible(parentEntity.parent);\n        }\n\n        var visibility = queryBooleanValue(featureNode, 'visibility', namespaces.kml);\n        entity.show = ancestryIsVisible(parent) && defaultValue(visibility, true);\n        //var open = queryBooleanValue(featureNode, 'open', namespaces.kml);\n\n        var authorNode = queryFirstNode(featureNode, 'author', namespaces.atom);\n        var author = kmlData.author;\n        author.name = queryStringValue(authorNode, 'name', namespaces.atom);\n        author.uri = queryStringValue(authorNode, 'uri', namespaces.atom);\n        author.email = queryStringValue(authorNode, 'email', namespaces.atom);\n\n        var linkNode = queryFirstNode(featureNode, 'link', namespaces.atom);\n        var link = kmlData.link;\n        link.href = queryStringAttribute(linkNode, 'href');\n        link.hreflang = queryStringAttribute(linkNode, 'hreflang');\n        link.rel = queryStringAttribute(linkNode, 'rel');\n        link.type = queryStringAttribute(linkNode, 'type');\n        link.title = queryStringAttribute(linkNode, 'title');\n        link.length = queryStringAttribute(linkNode, 'length');\n\n        kmlData.address = queryStringValue(featureNode, 'address', namespaces.kml);\n        kmlData.phoneNumber = queryStringValue(featureNode, 'phoneNumber', namespaces.kml);\n        kmlData.snippet = queryStringValue(featureNode, 'Snippet', namespaces.kml);\n\n        processExtendedData(featureNode, entity);\n        processDescription(featureNode, entity, styleEntity, uriResolver, sourceResource);\n\n        var ellipsoid = dataSource._ellipsoid;\n        processLookAt(featureNode, entity, ellipsoid);\n        processCamera(featureNode, entity, ellipsoid);\n\n        if (defined(queryFirstNode(featureNode, 'Region', namespaces.kml))) {\n            oneTimeWarning('kml-region', 'KML - Placemark Regions are unsupported');\n        }\n\n        return {\n            entity : entity,\n            styleEntity : styleEntity\n        };\n    }\n\n    // Ensure Specs/Data/KML/unsupported.kml is kept up to date with these supported types\n    var featureTypes = {\n        Document : processDocument,\n        Folder : processFolder,\n        Placemark : processPlacemark,\n        NetworkLink : processNetworkLink,\n        GroundOverlay : processGroundOverlay,\n        PhotoOverlay : processUnsupportedFeature,\n        ScreenOverlay : processUnsupportedFeature,\n        Tour : processTour\n    };\n\n    function processDocument(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var featureTypeNames = Object.keys(featureTypes);\n        var featureTypeNamesLength = featureTypeNames.length;\n\n        for (var i = 0; i < featureTypeNamesLength; i++) {\n            var featureName = featureTypeNames[i];\n            var processFeatureNode = featureTypes[featureName];\n\n            var childNodes = node.childNodes;\n            var length = childNodes.length;\n            for (var q = 0; q < length; q++) {\n                var child = childNodes[q];\n                if (child.localName === featureName &&\n                    ((namespaces.kml.indexOf(child.namespaceURI) !== -1) || (namespaces.gx.indexOf(child.namespaceURI) !== -1))) {\n                    processFeatureNode(dataSource, parent, child, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n                }\n            }\n        }\n    }\n\n    function processFolder(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var r = processFeature(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n        processDocument(dataSource, r.entity, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n    }\n\n    function processPlacemark(dataSource, parent, placemark, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var r = processFeature(dataSource, parent, placemark, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n        var entity = r.entity;\n        var styleEntity = r.styleEntity;\n\n        var hasGeometry = false;\n        var childNodes = placemark.childNodes;\n        for (var i = 0, len = childNodes.length; i < len && !hasGeometry; i++) {\n            var childNode = childNodes.item(i);\n            var geometryProcessor = geometryTypes[childNode.localName];\n            if (defined(geometryProcessor)) {\n                // pass the placemark entity id as a context for case of defining multiple child entities together to handle case\n                // where some malformed kmls reuse the same id across placemarks, which works in GE, but is not technically to spec.\n                geometryProcessor(dataSource, entityCollection, childNode, entity, styleEntity, entity.id);\n                hasGeometry = true;\n            }\n        }\n\n        if (!hasGeometry) {\n            entity.merge(styleEntity);\n            processPositionGraphics(dataSource, entity, styleEntity);\n        }\n    }\n\n    var playlistNodeProcessors = {\n        FlyTo: processTourFlyTo,\n        Wait: processTourWait,\n        SoundCue: processTourUnsupportedNode,\n        AnimatedUpdate: processTourUnsupportedNode,\n        TourControl: processTourUnsupportedNode\n    };\n\n    function processTour(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var name = queryStringValue(node, 'name', namespaces.kml);\n        var id = queryStringAttribute(node, 'id');\n        var tour = new KmlTour(name, id);\n\n        var playlistNode = queryFirstNode(node, 'Playlist', namespaces.gx);\n        if(playlistNode) {\n            var ellipsoid = dataSource._ellipsoid;\n            var childNodes = playlistNode.childNodes;\n            for(var i = 0; i < childNodes.length; i++) {\n                var entryNode = childNodes[i];\n                if (entryNode.localName) {\n                    var playlistNodeProcessor = playlistNodeProcessors[entryNode.localName];\n                    if (playlistNodeProcessor) {\n                        playlistNodeProcessor(tour, entryNode, ellipsoid);\n                    }\n                    else {\n                        console.log('Unknown KML Tour playlist entry type ' + entryNode.localName);\n                    }\n                }\n            }\n        }\n\n        if (!defined(dataSource.kmlTours)) {\n            dataSource.kmlTours = [];\n        }\n\n        dataSource.kmlTours.push(tour);\n    }\n\n    function processTourUnsupportedNode(tour, entryNode) {\n        oneTimeWarning('KML Tour unsupported node ' + entryNode.localName);\n    }\n\n    function processTourWait(tour, entryNode) {\n        var duration = queryNumericValue(entryNode, 'duration', namespaces.gx);\n        tour.addPlaylistEntry(new KmlTourWait(duration));\n    }\n\n    function processTourFlyTo(tour, entryNode, ellipsoid) {\n        var duration = queryNumericValue(entryNode, 'duration', namespaces.gx);\n        var flyToMode = queryStringValue(entryNode, 'flyToMode', namespaces.gx);\n\n        var t = {kml: {}};\n\n        processLookAt(entryNode, t, ellipsoid);\n        processCamera(entryNode, t, ellipsoid);\n\n        var view = t.kml.lookAt || t.kml.camera;\n\n        var flyto = new KmlTourFlyTo(duration, flyToMode, view);\n        tour.addPlaylistEntry(flyto);\n    }\n\n    function processCamera(featureNode, entity, ellipsoid) {\n        var camera = queryFirstNode(featureNode, 'Camera', namespaces.kml);\n        if(defined(camera)) {\n            var lon = defaultValue(queryNumericValue(camera, 'longitude', namespaces.kml), 0.0);\n            var lat = defaultValue(queryNumericValue(camera, 'latitude', namespaces.kml), 0.0);\n            var altitude = defaultValue(queryNumericValue(camera, 'altitude', namespaces.kml), 0.0);\n\n            var heading = defaultValue(queryNumericValue(camera, 'heading', namespaces.kml), 0.0);\n            var tilt = defaultValue(queryNumericValue(camera, 'tilt', namespaces.kml), 0.0);\n            var roll = defaultValue(queryNumericValue(camera, 'roll', namespaces.kml), 0.0);\n\n            var position = Cartesian3.fromDegrees(lon, lat, altitude, ellipsoid);\n            var hpr = HeadingPitchRoll.fromDegrees(heading, tilt - 90.0, roll);\n\n            entity.kml.camera = new KmlCamera(position, hpr);\n        }\n    }\n\n    function processLookAt(featureNode, entity, ellipsoid) {\n        var lookAt = queryFirstNode(featureNode, 'LookAt', namespaces.kml);\n        if(defined(lookAt)) {\n            var lon = defaultValue(queryNumericValue(lookAt, 'longitude', namespaces.kml), 0.0);\n            var lat = defaultValue(queryNumericValue(lookAt, 'latitude', namespaces.kml), 0.0);\n            var altitude = defaultValue(queryNumericValue(lookAt, 'altitude', namespaces.kml), 0.0);\n            var heading = queryNumericValue(lookAt, 'heading', namespaces.kml);\n            var tilt = queryNumericValue(lookAt, 'tilt', namespaces.kml);\n            var range = defaultValue(queryNumericValue(lookAt, 'range', namespaces.kml), 0.0);\n\n            tilt = CesiumMath.toRadians(defaultValue(tilt, 0.0));\n            heading = CesiumMath.toRadians(defaultValue(heading, 0.0));\n\n            var hpr = new HeadingPitchRange(heading, tilt - CesiumMath.PI_OVER_TWO, range);\n            var viewPoint = Cartesian3.fromDegrees(lon, lat, altitude, ellipsoid);\n\n            entity.kml.lookAt = new KmlLookAt(viewPoint, hpr);\n        }\n    }\n\n    function processGroundOverlay(dataSource, parent, groundOverlay, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var r = processFeature(dataSource, parent, groundOverlay, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n        var entity = r.entity;\n\n        var geometry;\n        var isLatLonQuad = false;\n\n        var ellipsoid = dataSource._ellipsoid;\n        var positions = readCoordinates(queryFirstNode(groundOverlay, 'LatLonQuad', namespaces.gx), ellipsoid);\n        var zIndex = queryNumericValue(groundOverlay, 'drawOrder', namespaces.kml);\n        if (defined(positions)) {\n            geometry = createDefaultPolygon();\n            geometry.hierarchy = new PolygonHierarchy(positions);\n            geometry.zIndex = zIndex;\n            entity.polygon = geometry;\n            isLatLonQuad = true;\n        } else {\n            geometry = new RectangleGraphics();\n            geometry.zIndex = zIndex;\n            entity.rectangle = geometry;\n\n            var latLonBox = queryFirstNode(groundOverlay, 'LatLonBox', namespaces.kml);\n            if (defined(latLonBox)) {\n                var west = queryNumericValue(latLonBox, 'west', namespaces.kml);\n                var south = queryNumericValue(latLonBox, 'south', namespaces.kml);\n                var east = queryNumericValue(latLonBox, 'east', namespaces.kml);\n                var north = queryNumericValue(latLonBox, 'north', namespaces.kml);\n\n                if (defined(west)) {\n                    west = CesiumMath.negativePiToPi(CesiumMath.toRadians(west));\n                }\n                if (defined(south)) {\n                    south = CesiumMath.clampToLatitudeRange(CesiumMath.toRadians(south));\n                }\n                if (defined(east)) {\n                    east = CesiumMath.negativePiToPi(CesiumMath.toRadians(east));\n                }\n                if (defined(north)) {\n                    north = CesiumMath.clampToLatitudeRange(CesiumMath.toRadians(north));\n                }\n                geometry.coordinates = new Rectangle(west, south, east, north);\n\n                var rotation = queryNumericValue(latLonBox, 'rotation', namespaces.kml);\n                if (defined(rotation)) {\n                    var rotationRadians = CesiumMath.toRadians(rotation);\n                    geometry.rotation = rotationRadians;\n                    geometry.stRotation = rotationRadians;\n                }\n            }\n        }\n\n        var iconNode = queryFirstNode(groundOverlay, 'Icon', namespaces.kml);\n        var href = getIconHref(iconNode, dataSource, sourceResource, uriResolver, true);\n        if (defined(href)) {\n            if (isLatLonQuad) {\n                oneTimeWarning('kml-gx:LatLonQuad', 'KML - gx:LatLonQuad Icon does not support texture projection.');\n            }\n            var x = queryNumericValue(iconNode, 'x', namespaces.gx);\n            var y = queryNumericValue(iconNode, 'y', namespaces.gx);\n            var w = queryNumericValue(iconNode, 'w', namespaces.gx);\n            var h = queryNumericValue(iconNode, 'h', namespaces.gx);\n\n            if (defined(x) || defined(y) || defined(w) || defined(h)) {\n                oneTimeWarning('kml-groundOverlay-xywh', 'KML - gx:x, gx:y, gx:w, gx:h aren\\'t supported for GroundOverlays');\n            }\n\n            geometry.material = href;\n            geometry.material.color = queryColorValue(groundOverlay, 'color', namespaces.kml);\n            geometry.material.transparent = true;\n        } else {\n            geometry.material = queryColorValue(groundOverlay, 'color', namespaces.kml);\n        }\n\n        var altitudeMode = queryStringValue(groundOverlay, 'altitudeMode', namespaces.kml);\n\n        if (defined(altitudeMode)) {\n            if (altitudeMode === 'absolute') {\n                //Use height above ellipsoid until we support MSL.\n                geometry.height = queryNumericValue(groundOverlay, 'altitude', namespaces.kml);\n                geometry.zIndex = undefined;\n            } else if (altitudeMode !== 'clampToGround') {\n                oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + altitudeMode);\n            }\n            // else just use the default of 0 until we support 'clampToGround'\n        } else {\n            altitudeMode = queryStringValue(groundOverlay, 'altitudeMode', namespaces.gx);\n            if (altitudeMode === 'relativeToSeaFloor') {\n                oneTimeWarning('kml-altitudeMode-relativeToSeaFloor', 'KML - altitudeMode relativeToSeaFloor is currently not supported, treating as absolute.');\n                geometry.height = queryNumericValue(groundOverlay, 'altitude', namespaces.kml);\n                geometry.zIndex = undefined;\n            } else if (altitudeMode === 'clampToSeaFloor') {\n                oneTimeWarning('kml-altitudeMode-clampToSeaFloor', 'KML - altitudeMode clampToSeaFloor is currently not supported, treating as clampToGround.');\n            } else if (defined(altitudeMode)) {\n                oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + altitudeMode);\n            }\n        }\n    }\n\n    function processUnsupportedFeature(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        dataSource._unsupportedNode.raiseEvent(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver);\n        oneTimeWarning('kml-unsupportedFeature-' + node.nodeName, 'KML - Unsupported feature: ' + node.nodeName);\n    }\n\n    var RefreshMode = {\n        INTERVAL : 0,\n        EXPIRE : 1,\n        STOP : 2\n    };\n\n    function cleanupString(s) {\n        if (!defined(s) || s.length === 0) {\n            return '';\n        }\n\n        var sFirst = s[0];\n        if (sFirst === '&' || sFirst === '?') {\n            s = s.substring(1);\n        }\n\n        return s;\n    }\n\n    var zeroRectangle = new Rectangle();\n    var scratchCartographic = new Cartographic();\n    var scratchCartesian2 = new Cartesian2();\n    var scratchCartesian3 = new Cartesian3();\n\n    function processNetworkLinkQueryString(resource, camera, canvas, viewBoundScale, bbox, ellipsoid) {\n        function fixLatitude(value) {\n            if (value < -CesiumMath.PI_OVER_TWO) {\n                return -CesiumMath.PI_OVER_TWO;\n            } else if (value > CesiumMath.PI_OVER_TWO) {\n                return CesiumMath.PI_OVER_TWO;\n            }\n            return value;\n        }\n\n        function fixLongitude(value) {\n            if (value > CesiumMath.PI) {\n                return value - CesiumMath.TWO_PI;\n            } else if (value < -CesiumMath.PI) {\n                return value + CesiumMath.TWO_PI;\n            }\n\n            return value;\n        }\n\n        var queryString = objectToQuery(resource.queryParameters);\n\n        // objectToQuery escapes [ and ], so fix that\n        queryString = queryString.replace(/%5B/g, '[').replace(/%5D/g, ']');\n\n        if (defined(camera) && camera._mode !== SceneMode.MORPHING) {\n            var centerCartesian;\n            var centerCartographic;\n\n            bbox = defaultValue(bbox, zeroRectangle);\n            if (defined(canvas)) {\n                scratchCartesian2.x = canvas.clientWidth * 0.5;\n                scratchCartesian2.y = canvas.clientHeight * 0.5;\n                centerCartesian = camera.pickEllipsoid(scratchCartesian2, ellipsoid, scratchCartesian3);\n            }\n\n            if (defined(centerCartesian)) {\n                centerCartographic = ellipsoid.cartesianToCartographic(centerCartesian, scratchCartographic);\n            } else {\n                centerCartographic = Rectangle.center(bbox, scratchCartographic);\n                centerCartesian = ellipsoid.cartographicToCartesian(centerCartographic);\n            }\n\n            if (defined(viewBoundScale) && !CesiumMath.equalsEpsilon(viewBoundScale, 1.0, CesiumMath.EPSILON9)) {\n                var newHalfWidth = bbox.width * viewBoundScale * 0.5;\n                var newHalfHeight = bbox.height * viewBoundScale * 0.5;\n                bbox = new Rectangle(fixLongitude(centerCartographic.longitude - newHalfWidth),\n                    fixLatitude(centerCartographic.latitude - newHalfHeight),\n                    fixLongitude(centerCartographic.longitude + newHalfWidth),\n                    fixLatitude(centerCartographic.latitude + newHalfHeight)\n                );\n            }\n\n            queryString = queryString.replace('[bboxWest]', CesiumMath.toDegrees(bbox.west).toString());\n            queryString = queryString.replace('[bboxSouth]', CesiumMath.toDegrees(bbox.south).toString());\n            queryString = queryString.replace('[bboxEast]', CesiumMath.toDegrees(bbox.east).toString());\n            queryString = queryString.replace('[bboxNorth]', CesiumMath.toDegrees(bbox.north).toString());\n\n            var lon = CesiumMath.toDegrees(centerCartographic.longitude).toString();\n            var lat = CesiumMath.toDegrees(centerCartographic.latitude).toString();\n            queryString = queryString.replace('[lookatLon]', lon);\n            queryString = queryString.replace('[lookatLat]', lat);\n            queryString = queryString.replace('[lookatTilt]', CesiumMath.toDegrees(camera.pitch).toString());\n            queryString = queryString.replace('[lookatHeading]', CesiumMath.toDegrees(camera.heading).toString());\n            queryString = queryString.replace('[lookatRange]', Cartesian3.distance(camera.positionWC, centerCartesian));\n            queryString = queryString.replace('[lookatTerrainLon]', lon);\n            queryString = queryString.replace('[lookatTerrainLat]', lat);\n            queryString = queryString.replace('[lookatTerrainAlt]', centerCartographic.height.toString());\n\n            ellipsoid.cartesianToCartographic(camera.positionWC, scratchCartographic);\n            queryString = queryString.replace('[cameraLon]', CesiumMath.toDegrees(scratchCartographic.longitude).toString());\n            queryString = queryString.replace('[cameraLat]', CesiumMath.toDegrees(scratchCartographic.latitude).toString());\n            queryString = queryString.replace('[cameraAlt]', CesiumMath.toDegrees(scratchCartographic.height).toString());\n\n            var frustum = camera.frustum;\n            var aspectRatio = frustum.aspectRatio;\n            var horizFov = '';\n            var vertFov = '';\n            if (defined(aspectRatio)) {\n                var fov = CesiumMath.toDegrees(frustum.fov);\n                if (aspectRatio > 1.0) {\n                    horizFov = fov;\n                    vertFov = fov / aspectRatio;\n                } else {\n                    vertFov = fov;\n                    horizFov = fov * aspectRatio;\n                }\n            }\n            queryString = queryString.replace('[horizFov]', horizFov.toString());\n            queryString = queryString.replace('[vertFov]', vertFov.toString());\n        } else {\n            queryString = queryString.replace('[bboxWest]', '-180');\n            queryString = queryString.replace('[bboxSouth]', '-90');\n            queryString = queryString.replace('[bboxEast]', '180');\n            queryString = queryString.replace('[bboxNorth]', '90');\n\n            queryString = queryString.replace('[lookatLon]', '');\n            queryString = queryString.replace('[lookatLat]', '');\n            queryString = queryString.replace('[lookatRange]', '');\n            queryString = queryString.replace('[lookatTilt]', '');\n            queryString = queryString.replace('[lookatHeading]', '');\n            queryString = queryString.replace('[lookatTerrainLon]', '');\n            queryString = queryString.replace('[lookatTerrainLat]', '');\n            queryString = queryString.replace('[lookatTerrainAlt]', '');\n\n            queryString = queryString.replace('[cameraLon]', '');\n            queryString = queryString.replace('[cameraLat]', '');\n            queryString = queryString.replace('[cameraAlt]', '');\n            queryString = queryString.replace('[horizFov]', '');\n            queryString = queryString.replace('[vertFov]', '');\n        }\n\n        if (defined(canvas)) {\n            queryString = queryString.replace('[horizPixels]', canvas.clientWidth);\n            queryString = queryString.replace('[vertPixels]', canvas.clientHeight);\n        } else {\n            queryString = queryString.replace('[horizPixels]', '');\n            queryString = queryString.replace('[vertPixels]', '');\n        }\n\n        queryString = queryString.replace('[terrainEnabled]', '1');\n        queryString = queryString.replace('[clientVersion]', '1');\n        queryString = queryString.replace('[kmlVersion]', '2.2');\n        queryString = queryString.replace('[clientName]', 'Cesium');\n        queryString = queryString.replace('[language]', 'English');\n\n        resource.setQueryParameters(queryToObject(queryString));\n    }\n\n    function processNetworkLink(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var r = processFeature(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n        var networkEntity = r.entity;\n\n        var link = queryFirstNode(node, 'Link', namespaces.kml);\n\n        if (!defined(link)) {\n            link = queryFirstNode(node, 'Url', namespaces.kml);\n        }\n        if (defined(link)) {\n            var href = queryStringValue(link, 'href', namespaces.kml);\n            var viewRefreshMode;\n            var viewBoundScale;\n            if (defined(href)) {\n                var newSourceUri = href;\n                href = resolveHref(href, sourceResource, uriResolver);\n\n                // We need to pass in the original path if resolveHref returns a data uri because the network link\n                //  references a document in a KMZ archive\n                if (/^data:/.test(href.getUrlComponent())) {\n                    // So if sourceUri isn't the kmz file, then its another kml in the archive, so resolve it\n                    if (!/\\.kmz/i.test(sourceResource.getUrlComponent())) {\n                        newSourceUri = sourceResource.getDerivedResource({\n                            url: newSourceUri\n                        });\n                    }\n                } else {\n                    newSourceUri = href.clone(); // Not a data uri so use the fully qualified uri\n                    viewRefreshMode = queryStringValue(link, 'viewRefreshMode', namespaces.kml);\n                    viewBoundScale = defaultValue(queryStringValue(link, 'viewBoundScale', namespaces.kml), 1.0);\n                    var defaultViewFormat = (viewRefreshMode === 'onStop') ? 'BBOX=[bboxWest],[bboxSouth],[bboxEast],[bboxNorth]' : '';\n                    var viewFormat = defaultValue(queryStringValue(link, 'viewFormat', namespaces.kml), defaultViewFormat);\n                    var httpQuery = queryStringValue(link, 'httpQuery', namespaces.kml);\n                    if (defined(viewFormat)) {\n                        href.setQueryParameters(queryToObject(cleanupString(viewFormat)));\n                    }\n                    if (defined(httpQuery)) {\n                        href.setQueryParameters(queryToObject(cleanupString(httpQuery)));\n                    }\n\n                    var ellipsoid = dataSource._ellipsoid;\n                    processNetworkLinkQueryString(href, dataSource._camera, dataSource._canvas, viewBoundScale, dataSource._lastCameraView.bbox, ellipsoid);\n                }\n\n                var options = {\n                    sourceUri : newSourceUri,\n                    uriResolver : uriResolver,\n                    context : networkEntity.id\n                };\n                var networkLinkCollection = new EntityCollection();\n                var promise = load(dataSource, networkLinkCollection, href, options).then(function(rootElement) {\n                    var entities = dataSource._entityCollection;\n                    var newEntities = networkLinkCollection.values;\n                    entities.suspendEvents();\n                    for (var i = 0; i < newEntities.length; i++) {\n                        var newEntity = newEntities[i];\n                        if (!defined(newEntity.parent)) {\n                            newEntity.parent = networkEntity;\n                            mergeAvailabilityWithParent(newEntity);\n                        }\n\n                        entities.add(newEntity);\n                    }\n                    entities.resumeEvents();\n\n                    // Add network links to a list if we need they will need to be updated\n                    var refreshMode = queryStringValue(link, 'refreshMode', namespaces.kml);\n                    var refreshInterval = defaultValue(queryNumericValue(link, 'refreshInterval', namespaces.kml), 0);\n                    if ((refreshMode === 'onInterval' && refreshInterval > 0 ) || (refreshMode === 'onExpire') || (viewRefreshMode === 'onStop')) {\n                        var networkLinkControl = queryFirstNode(rootElement, 'NetworkLinkControl', namespaces.kml);\n                        var hasNetworkLinkControl = defined(networkLinkControl);\n\n                        var now = JulianDate.now();\n                        var networkLinkInfo = {\n                            id : createGuid(),\n                            href : href,\n                            cookie : {},\n                            lastUpdated : now,\n                            updating : false,\n                            entity : networkEntity,\n                            viewBoundScale : viewBoundScale,\n                            needsUpdate : false,\n                            cameraUpdateTime : now\n                        };\n\n                        var minRefreshPeriod = 0;\n                        if (hasNetworkLinkControl) {\n                            networkLinkInfo.cookie = queryToObject(defaultValue(queryStringValue(networkLinkControl, 'cookie', namespaces.kml), ''));\n                            minRefreshPeriod = defaultValue(queryNumericValue(networkLinkControl, 'minRefreshPeriod', namespaces.kml), 0);\n                        }\n\n                        if (refreshMode === 'onInterval') {\n                            if (hasNetworkLinkControl) {\n                                refreshInterval = Math.max(minRefreshPeriod, refreshInterval);\n                            }\n                            networkLinkInfo.refreshMode = RefreshMode.INTERVAL;\n                            networkLinkInfo.time = refreshInterval;\n                        } else if (refreshMode === 'onExpire') {\n                            var expires;\n                            if (hasNetworkLinkControl) {\n                                expires = queryStringValue(networkLinkControl, 'expires', namespaces.kml);\n                            }\n                            if (defined(expires)) {\n                                try {\n                                    var date = JulianDate.fromIso8601(expires);\n                                    var diff = JulianDate.secondsDifference(date, now);\n                                    if (diff > 0 && diff < minRefreshPeriod) {\n                                        JulianDate.addSeconds(now, minRefreshPeriod, date);\n                                    }\n                                    networkLinkInfo.refreshMode = RefreshMode.EXPIRE;\n                                    networkLinkInfo.time = date;\n                                } catch (e) {\n                                    oneTimeWarning('kml-refreshMode-onInterval-onExpire', 'KML - NetworkLinkControl expires is not a valid date');\n                                }\n                            } else {\n                                oneTimeWarning('kml-refreshMode-onExpire', 'KML - refreshMode of onExpire requires the NetworkLinkControl to have an expires element');\n                            }\n                        } else if (dataSource._camera) { // Only allow onStop refreshes if we have a camera\n                            networkLinkInfo.refreshMode = RefreshMode.STOP;\n                            networkLinkInfo.time = defaultValue(queryNumericValue(link, 'viewRefreshTime', namespaces.kml), 0);\n                        } else {\n                            oneTimeWarning('kml-refrehMode-onStop-noCamera', 'A NetworkLink with viewRefreshMode=onStop requires a camera be passed in when creating the KmlDataSource');\n                        }\n\n                        if (defined(networkLinkInfo.refreshMode)) {\n                            dataSource._networkLinks.set(networkLinkInfo.id, networkLinkInfo);\n                        }\n                    } else if (viewRefreshMode === 'onRegion') {\n                        oneTimeWarning('kml-refrehMode-onRegion', 'KML - Unsupported viewRefreshMode: onRegion');\n                    }\n                }).otherwise(function(error) {\n                    oneTimeWarning('An error occured during loading ' + href.url);\n                    dataSource._error.raiseEvent(dataSource, error);\n                });\n\n                promises.push(promise);\n            }\n        }\n    }\n\n    function processFeatureNode(dataSource, node, parent, entityCollection, styleCollection, sourceResource, uriResolver, promises, context) {\n        var featureProcessor = featureTypes[node.localName];\n        if (defined(featureProcessor)) {\n            featureProcessor(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n        } else {\n            processUnsupportedFeature(dataSource, parent, node, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n        }\n    }\n\n    function loadKml(dataSource, entityCollection, kml, sourceResource, uriResolver, context) {\n        entityCollection.removeAll();\n\n        var promises = [];\n        var documentElement = kml.documentElement;\n        var document = documentElement.localName === 'Document' ? documentElement : queryFirstNode(documentElement, 'Document', namespaces.kml);\n        var name = queryStringValue(document, 'name', namespaces.kml);\n        if (!defined(name)) {\n            name = getFilenameFromUri(sourceResource.getUrlComponent());\n        }\n\n        // Only set the name from the root document\n        if (!defined(dataSource._name)) {\n            dataSource._name = name;\n        }\n\n        var styleCollection = new EntityCollection(dataSource);\n        return when.all(processStyles(dataSource, kml, styleCollection, sourceResource, false, uriResolver)).then(function() {\n            var element = kml.documentElement;\n            if (element.localName === 'kml') {\n                var childNodes = element.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var tmp = childNodes[i];\n                    if (defined(featureTypes[tmp.localName])) {\n                        element = tmp;\n                        break;\n                    }\n                }\n            }\n            entityCollection.suspendEvents();\n            processFeatureNode(dataSource, element, undefined, entityCollection, styleCollection, sourceResource, uriResolver, promises, context);\n            entityCollection.resumeEvents();\n\n            return when.all(promises).then(function() {\n                return kml.documentElement;\n            });\n        });\n    }\n\n    function loadKmz(dataSource, entityCollection, blob, sourceResource) {\n        var deferred = when.defer();\n        zip.createReader(new zip.BlobReader(blob), function(reader) {\n            reader.getEntries(function(entries) {\n                var promises = [];\n                var uriResolver = {};\n                var docEntry;\n                var docDefer;\n                for (var i = 0; i < entries.length; i++) {\n                    var entry = entries[i];\n                    if (!entry.directory) {\n                        var innerDefer = when.defer();\n                        promises.push(innerDefer.promise);\n                        if (/\\.kml$/i.test(entry.filename)) {\n                            // We use the first KML document we come across\n                            //  https://developers.google.com/kml/documentation/kmzarchives\n                            // Unless we come across a .kml file at the root of the archive because GE does this\n                            if (!defined(docEntry) || !/\\//i.test(entry.filename)) {\n                                if (defined(docEntry)) {\n                                    // We found one at the root so load the initial kml as a data uri\n                                    loadDataUriFromZip(docEntry, uriResolver, docDefer);\n                                }\n                                docEntry = entry;\n                                docDefer = innerDefer;\n                            } else {\n                                // Wasn't the first kml and wasn't at the root\n                                loadDataUriFromZip(entry, uriResolver, innerDefer);\n                            }\n                        } else {\n                            loadDataUriFromZip(entry, uriResolver, innerDefer);\n                        }\n                    }\n                }\n\n                // Now load the root KML document\n                if (defined(docEntry)) {\n                    loadXmlFromZip(docEntry, uriResolver, docDefer);\n                }\n                when.all(promises).then(function() {\n                    reader.close();\n                    if (!defined(uriResolver.kml)) {\n                        deferred.reject(new RuntimeError('KMZ file does not contain a KML document.'));\n                        return;\n                    }\n                    uriResolver.keys = Object.keys(uriResolver);\n                    return loadKml(dataSource, entityCollection, uriResolver.kml, sourceResource, uriResolver);\n                }).then(deferred.resolve).otherwise(deferred.reject);\n            });\n        }, function(e) {\n            deferred.reject(e);\n        });\n\n        return deferred.promise;\n    }\n\n    function load(dataSource, entityCollection, data, options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        var sourceUri = options.sourceUri;\n        var uriResolver = options.uriResolver;\n        var context = options.context;\n\n        var promise = data;\n        if (typeof data === 'string' || (data instanceof Resource)) {\n            data = Resource.createIfNeeded(data);\n            promise = data.fetchBlob();\n            sourceUri = defaultValue(sourceUri, data.clone());\n        } else {\n            sourceUri = defaultValue(sourceUri, Resource.DEFAULT.clone());\n        }\n\n        sourceUri = Resource.createIfNeeded(sourceUri);\n\n        return when(promise)\n            .then(function(dataToLoad) {\n                if (dataToLoad instanceof Blob) {\n                    return isZipFile(dataToLoad).then(function(isZip) {\n                        if (isZip) {\n                            return loadKmz(dataSource, entityCollection, dataToLoad, sourceUri);\n                        }\n                        return readBlobAsText(dataToLoad).then(function(text) {\n                            //There's no official way to validate if a parse was successful.\n                            //The following check detects the error on various browsers.\n\n                            //Insert missing namespaces\n                            text = insertNamespaces(text);\n\n                            //Remove Duplicate Namespaces\n                            text = removeDuplicateNamespaces(text);\n\n                            //IE raises an exception\n                            var kml;\n                            var error;\n                            try {\n                                kml = parser.parseFromString(text, 'application/xml');\n                            } catch (e) {\n                                error = e.toString();\n                            }\n\n                            //The parse succeeds on Chrome and Firefox, but the error\n                            //handling is different in each.\n                            if (defined(error) || kml.body || kml.documentElement.tagName === 'parsererror') {\n                                //Firefox has error information as the firstChild nodeValue.\n                                var msg = defined(error) ? error : kml.documentElement.firstChild.nodeValue;\n\n                                //Chrome has it in the body text.\n                                if (!msg) {\n                                    msg = kml.body.innerText;\n                                }\n\n                                //Return the error\n                                throw new RuntimeError(msg);\n                            }\n                            return loadKml(dataSource, entityCollection, kml, sourceUri, uriResolver, context);\n                        });\n                    });\n                }\n                return loadKml(dataSource, entityCollection, dataToLoad, sourceUri, uriResolver, context);\n            })\n            .otherwise(function(error) {\n                dataSource._error.raiseEvent(dataSource, error);\n                console.log(error);\n                return when.reject(error);\n            });\n    }\n\n    /**\n     * A {@link DataSource} which processes Keyhole Markup Language 2.2 (KML).\n     * <p>\n     * KML support in Cesium is incomplete, but a large amount of the standard,\n     * as well as Google's <code>gx</code> extension namespace, is supported. See Github issue\n     * {@link https://github.com/AnalyticalGraphicsInc/cesium/issues/873|#873} for a\n     * detailed list of what is and isn't support. Cesium will also write information to the\n     * console when it encounters most unsupported features.\n     * </p>\n     * <p>\n     * Non visual feature data, such as <code>atom:author</code> and <code>ExtendedData</code>\n     * is exposed via an instance of {@link KmlFeatureData}, which is added to each {@link Entity}\n     * under the <code>kml</code> property.\n     * </p>\n     *\n     * @alias KmlDataSource\n     * @constructor\n     *\n     * @param {Object} options An object with the following properties:\n     * @param {Camera} options.camera The camera that is used for viewRefreshModes and sending camera properties to network links.\n     * @param {Canvas} options.canvas The canvas that is used for sending viewer properties to network links.\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The global ellipsoid used for geographical calculations.\n     *\n     * @see {@link http://www.opengeospatial.org/standards/kml/|Open Geospatial Consortium KML Standard}\n     * @see {@link https://developers.google.com/kml/|Google KML Documentation}\n     *\n     * @demo {@link https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=KML.html|Cesium Sandcastle KML Demo}\n     *\n     * @example\n     * var viewer = new Cesium.Viewer('cesiumContainer');\n     * viewer.dataSources.add(Cesium.KmlDataSource.load('../../SampleData/facilities.kmz',\n     *      {\n     *           camera: viewer.scene.camera,\n     *           canvas: viewer.scene.canvas\n     *      })\n     * );\n     */\n    function KmlDataSource(options) {\n        options = defaultValue(options, {});\n        var camera = options.camera;\n        var canvas = options.canvas;\n\n        \n\n        this._changed = new Event();\n        this._error = new Event();\n        this._loading = new Event();\n        this._refresh = new Event();\n        this._unsupportedNode = new Event();\n\n        this._clock = undefined;\n        this._entityCollection = new EntityCollection(this);\n        this._name = undefined;\n        this._isLoading = false;\n        this._pinBuilder = new PinBuilder();\n        this._networkLinks = new AssociativeArray();\n        this._entityCluster = new EntityCluster();\n\n        this._canvas = canvas;\n        this._camera = camera;\n        this._lastCameraView = {\n            position : defined(camera) ? Cartesian3.clone(camera.positionWC) : undefined,\n            direction : defined(camera) ? Cartesian3.clone(camera.directionWC) : undefined,\n            up : defined(camera) ? Cartesian3.clone(camera.upWC) : undefined,\n            bbox : defined(camera) ? camera.computeViewRectangle() : Rectangle.clone(Rectangle.MAX_VALUE)\n        };\n\n        this._ellipsoid = defaultValue(options.ellipsoid, Ellipsoid.WGS84);\n    }\n\n    /**\n     * Creates a Promise to a new instance loaded with the provided KML data.\n     *\n     * @param {Resource|String|Document|Blob} data A url, parsed KML document, or Blob containing binary KMZ data or a parsed KML document.\n     * @param {Object} options An object with the following properties:\n     * @param {Camera} options.camera The camera that is used for viewRefreshModes and sending camera properties to network links.\n     * @param {Canvas} options.canvas The canvas that is used for sending viewer properties to network links.\n     * @param {String} [options.sourceUri] Overrides the url to use for resolving relative links and other KML network features.\n     * @param {Boolean} [options.clampToGround=false] true if we want the geometry features (Polygons, LineStrings and LinearRings) clamped to the ground.\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The global ellipsoid used for geographical calculations.\n     *\n     * @returns {Promise.<KmlDataSource>} A promise that will resolve to a new KmlDataSource instance once the KML is loaded.\n     */\n    KmlDataSource.load = function(data, options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        var dataSource = new KmlDataSource(options);\n        return dataSource.load(data, options);\n    };\n\n    defineProperties(KmlDataSource.prototype, {\n        /**\n         * Gets or sets a human-readable name for this instance.\n         * This will be automatically be set to the KML document name on load.\n         * @memberof KmlDataSource.prototype\n         * @type {String}\n         */\n        name : {\n            get : function() {\n                return this._name;\n            },\n            set : function(value) {\n                if (this._name !== value) {\n                    this._name = value;\n                    this._changed.raiseEvent(this);\n                }\n            }\n        },\n        /**\n         * Gets the clock settings defined by the loaded KML. This represents the total\n         * availability interval for all time-dynamic data. If the KML does not contain\n         * time-dynamic data, this value is undefined.\n         * @memberof KmlDataSource.prototype\n         * @type {DataSourceClock}\n         */\n        clock : {\n            get : function() {\n                return this._clock;\n            }\n        },\n        /**\n         * Gets the collection of {@link Entity} instances.\n         * @memberof KmlDataSource.prototype\n         * @type {EntityCollection}\n         */\n        entities : {\n            get : function() {\n                return this._entityCollection;\n            }\n        },\n        /**\n         * Gets a value indicating if the data source is currently loading data.\n         * @memberof KmlDataSource.prototype\n         * @type {Boolean}\n         */\n        isLoading : {\n            get : function() {\n                return this._isLoading;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the underlying data changes.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        changedEvent : {\n            get : function() {\n                return this._changed;\n            }\n        },\n        /**\n         * Gets an event that will be raised if an error is encountered during processing.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        errorEvent : {\n            get : function() {\n                return this._error;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source either starts or stops loading.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        loadingEvent : {\n            get : function() {\n                return this._loading;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source refreshes a network link.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        refreshEvent : {\n            get : function() {\n                return this._refresh;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source finds an unsupported node type.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        unsupportedNodeEvent : {\n            get : function() {\n                return this._unsupportedNode;\n            }\n        },\n        /**\n         * Gets whether or not this data source should be displayed.\n         * @memberof KmlDataSource.prototype\n         * @type {Boolean}\n         */\n        show : {\n            get : function() {\n                return this._entityCollection.show;\n            },\n            set : function(value) {\n                this._entityCollection.show = value;\n            }\n        },\n\n        /**\n         * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n         *\n         * @memberof KmlDataSource.prototype\n         * @type {EntityCluster}\n         */\n        clustering : {\n            get : function() {\n                return this._entityCluster;\n            },\n            set : function(value) {\n                \n                this._entityCluster = value;\n            }\n        }\n    });\n\n    /**\n     * Asynchronously loads the provided KML data, replacing any existing data.\n     *\n     * @param {Resource|String|Document|Blob} data A url, parsed KML document, or Blob containing binary KMZ data or a parsed KML document.\n     * @param {Object} [options] An object with the following properties:\n     * @param {Resource|String} [options.sourceUri] Overrides the url to use for resolving relative links and other KML network features.\n     * @param {Boolean} [options.clampToGround=false] true if we want the geometry features (Polygons, LineStrings and LinearRings) clamped to the ground. If true, lines will use corridors so use Entity.corridor instead of Entity.polyline.\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The global ellipsoid used for geographical calculations.\n     *\n     * @returns {Promise.<KmlDataSource>} A promise that will resolve to this instances once the KML is loaded.\n     */\n    KmlDataSource.prototype.load = function(data, options) {\n        \n\n        options = defaultValue(options, {});\n        DataSource.setLoading(this, true);\n\n        var oldName = this._name;\n        this._name = undefined;\n        this._clampToGround = defaultValue(options.clampToGround, false);\n\n        var that = this;\n        return load(this, this._entityCollection, data, options).then(function() {\n            var clock;\n\n            var availability = that._entityCollection.computeAvailability();\n\n            var start = availability.start;\n            var stop = availability.stop;\n            var isMinStart = JulianDate.equals(start, Iso8601.MINIMUM_VALUE);\n            var isMaxStop = JulianDate.equals(stop, Iso8601.MAXIMUM_VALUE);\n            if (!isMinStart || !isMaxStop) {\n                var date;\n\n                //If start is min time just start at midnight this morning, local time\n                if (isMinStart) {\n                    date = new Date();\n                    date.setHours(0, 0, 0, 0);\n                    start = JulianDate.fromDate(date);\n                }\n\n                //If stop is max value just stop at midnight tonight, local time\n                if (isMaxStop) {\n                    date = new Date();\n                    date.setHours(24, 0, 0, 0);\n                    stop = JulianDate.fromDate(date);\n                }\n\n                clock = new DataSourceClock();\n                clock.startTime = start;\n                clock.stopTime = stop;\n                clock.currentTime = JulianDate.clone(start);\n                clock.clockRange = ClockRange.LOOP_STOP;\n                clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n                clock.multiplier = Math.round(Math.min(Math.max(JulianDate.secondsDifference(stop, start) / 60, 1), 3.15569e7));\n            }\n\n            var changed = false;\n            if (clock !== that._clock) {\n                that._clock = clock;\n                changed = true;\n            }\n\n            if (oldName !== that._name) {\n                changed = true;\n            }\n\n            if (changed) {\n                that._changed.raiseEvent(that);\n            }\n\n            DataSource.setLoading(that, false);\n\n            return that;\n        }).otherwise(function(error) {\n            DataSource.setLoading(that, false);\n            that._error.raiseEvent(that, error);\n            console.log(error);\n            return when.reject(error);\n        });\n    };\n\n    function mergeAvailabilityWithParent(child) {\n        var parent = child.parent;\n        if (defined(parent)) {\n            var parentAvailability = parent.availability;\n            if (defined(parentAvailability)) {\n                var childAvailability = child.availability;\n                if (defined(childAvailability)) {\n                    childAvailability.intersect(parentAvailability);\n                } else {\n                    child.availability = parentAvailability;\n                }\n            }\n        }\n    }\n\n    function getNetworkLinkUpdateCallback(dataSource, networkLink, newEntityCollection, networkLinks, processedHref) {\n        return function(rootElement) {\n            if (!networkLinks.contains(networkLink.id)) {\n                // Got into the odd case where a parent network link was updated while a child\n                //  network link update was in flight, so just throw it away.\n                return;\n            }\n            var remove = false;\n            var networkLinkControl = queryFirstNode(rootElement, 'NetworkLinkControl', namespaces.kml);\n            var hasNetworkLinkControl = defined(networkLinkControl);\n\n            var minRefreshPeriod = 0;\n            if (hasNetworkLinkControl) {\n                if (defined(queryFirstNode(networkLinkControl, 'Update', namespaces.kml))) {\n                    oneTimeWarning('kml-networkLinkControl-update', 'KML - NetworkLinkControl updates aren\\'t supported.');\n                    networkLink.updating = false;\n                    networkLinks.remove(networkLink.id);\n                    return;\n                }\n                networkLink.cookie = queryToObject(defaultValue(queryStringValue(networkLinkControl, 'cookie', namespaces.kml), ''));\n                minRefreshPeriod = defaultValue(queryNumericValue(networkLinkControl, 'minRefreshPeriod', namespaces.kml), 0);\n            }\n\n            var now = JulianDate.now();\n            var refreshMode = networkLink.refreshMode;\n            if (refreshMode === RefreshMode.INTERVAL) {\n                if (defined(networkLinkControl)) {\n                    networkLink.time = Math.max(minRefreshPeriod, networkLink.time);\n                }\n            } else if (refreshMode === RefreshMode.EXPIRE) {\n                var expires;\n                if (defined(networkLinkControl)) {\n                    expires = queryStringValue(networkLinkControl, 'expires', namespaces.kml);\n                }\n                if (defined(expires)) {\n                    try {\n                        var date = JulianDate.fromIso8601(expires);\n                        var diff = JulianDate.secondsDifference(date, now);\n                        if (diff > 0 && diff < minRefreshPeriod) {\n                            JulianDate.addSeconds(now, minRefreshPeriod, date);\n                        }\n                        networkLink.time = date;\n                    } catch (e) {\n                        oneTimeWarning('kml-networkLinkControl-expires', 'KML - NetworkLinkControl expires is not a valid date');\n                        remove = true;\n                    }\n                } else {\n                    oneTimeWarning('kml-refreshMode-onExpire', 'KML - refreshMode of onExpire requires the NetworkLinkControl to have an expires element');\n                    remove = true;\n                }\n            }\n\n            var networkLinkEntity = networkLink.entity;\n            var entityCollection = dataSource._entityCollection;\n            var newEntities = newEntityCollection.values;\n\n            function removeChildren(entity) {\n                entityCollection.remove(entity);\n                var children = entity._children;\n                var count = children.length;\n                for (var i = 0; i < count; ++i) {\n                    removeChildren(children[i]);\n                }\n            }\n\n            // Remove old entities\n            entityCollection.suspendEvents();\n            var entitiesCopy = entityCollection.values.slice();\n            var i;\n            for (i = 0; i < entitiesCopy.length; ++i) {\n                var entityToRemove = entitiesCopy[i];\n                if (entityToRemove.parent === networkLinkEntity) {\n                    entityToRemove.parent = undefined;\n                    removeChildren(entityToRemove);\n                }\n            }\n            entityCollection.resumeEvents();\n\n            // Add new entities\n            entityCollection.suspendEvents();\n            for (i = 0; i < newEntities.length; i++) {\n                var newEntity = newEntities[i];\n                if (!defined(newEntity.parent)) {\n                    newEntity.parent = networkLinkEntity;\n                    mergeAvailabilityWithParent(newEntity);\n                }\n                entityCollection.add(newEntity);\n            }\n            entityCollection.resumeEvents();\n\n            // No refresh information remove it, otherwise update lastUpdate time\n            if (remove) {\n                networkLinks.remove(networkLink.id);\n            } else {\n                networkLink.lastUpdated = now;\n            }\n\n            var availability = entityCollection.computeAvailability();\n\n            var start = availability.start;\n            var stop = availability.stop;\n            var isMinStart = JulianDate.equals(start, Iso8601.MINIMUM_VALUE);\n            var isMaxStop = JulianDate.equals(stop, Iso8601.MAXIMUM_VALUE);\n            if (!isMinStart || !isMaxStop) {\n                var clock = dataSource._clock;\n\n                if (clock.startTime !== start || clock.stopTime !== stop) {\n                    clock.startTime = start;\n                    clock.stopTime = stop;\n                    dataSource._changed.raiseEvent(dataSource);\n                }\n            }\n\n            networkLink.updating = false;\n            networkLink.needsUpdate = false;\n            dataSource._refresh.raiseEvent(dataSource, processedHref.getUrlComponent(true));\n        };\n    }\n\n    var entitiesToIgnore = new AssociativeArray();\n\n    /**\n     * Updates any NetworkLink that require updating\n     * @function\n     *\n     * @param {JulianDate} time The simulation time.\n     * @returns {Boolean} True if this data source is ready to be displayed at the provided time, false otherwise.\n     */\n    KmlDataSource.prototype.update = function(time) {\n        var networkLinks = this._networkLinks;\n        if (networkLinks.length === 0) {\n            return true;\n        }\n\n        var now = JulianDate.now();\n        var that = this;\n\n        entitiesToIgnore.removeAll();\n\n        function recurseIgnoreEntities(entity) {\n            var children = entity._children;\n            var count = children.length;\n            for (var i = 0; i < count; ++i) {\n                var child = children[i];\n                entitiesToIgnore.set(child.id, child);\n                recurseIgnoreEntities(child);\n            }\n        }\n\n        var cameraViewUpdate = false;\n        var lastCameraView = this._lastCameraView;\n        var camera = this._camera;\n        if (defined(camera) &&\n            !(camera.positionWC.equalsEpsilon(lastCameraView.position, CesiumMath.EPSILON7) &&\n            camera.directionWC.equalsEpsilon(lastCameraView.direction, CesiumMath.EPSILON7) &&\n            camera.upWC.equalsEpsilon(lastCameraView.up, CesiumMath.EPSILON7))) {\n\n            // Camera has changed so update the last view\n            lastCameraView.position = Cartesian3.clone(camera.positionWC);\n            lastCameraView.direction = Cartesian3.clone(camera.directionWC);\n            lastCameraView.up = Cartesian3.clone(camera.upWC);\n            lastCameraView.bbox = camera.computeViewRectangle();\n            cameraViewUpdate = true;\n        }\n\n        var newNetworkLinks = new AssociativeArray();\n        var changed = false;\n        networkLinks.values.forEach(function(networkLink) {\n            var entity = networkLink.entity;\n            if (entitiesToIgnore.contains(entity.id)) {\n                return;\n            }\n\n            if (!networkLink.updating) {\n                var doUpdate = false;\n                if (networkLink.refreshMode === RefreshMode.INTERVAL) {\n                    if (JulianDate.secondsDifference(now, networkLink.lastUpdated) > networkLink.time) {\n                        doUpdate = true;\n                    }\n                }\n                else if (networkLink.refreshMode === RefreshMode.EXPIRE) {\n                    if (JulianDate.greaterThan(now, networkLink.time)) {\n                        doUpdate = true;\n                    }\n\n                } else if (networkLink.refreshMode === RefreshMode.STOP) {\n                    if (cameraViewUpdate) {\n                        networkLink.needsUpdate = true;\n                        networkLink.cameraUpdateTime = now;\n                    }\n\n                    if (networkLink.needsUpdate && JulianDate.secondsDifference(now, networkLink.cameraUpdateTime) >= networkLink.time) {\n                        doUpdate = true;\n                    }\n                }\n\n                if (doUpdate) {\n                    recurseIgnoreEntities(entity);\n                    networkLink.updating = true;\n                    var newEntityCollection = new EntityCollection();\n                    var href = networkLink.href.clone();\n\n                    href.setQueryParameters(networkLink.cookie);\n                    var ellipsoid = defaultValue(that._ellipsoid, Ellipsoid.WGS84);\n                    processNetworkLinkQueryString(href, that._camera, that._canvas, networkLink.viewBoundScale, lastCameraView.bbox, ellipsoid);\n\n                    load(that, newEntityCollection, href, {context : entity.id})\n                        .then(getNetworkLinkUpdateCallback(that, networkLink, newEntityCollection, newNetworkLinks, href))\n                        .otherwise(function(error) {\n                            var msg = 'NetworkLink ' + networkLink.href + ' refresh failed: ' + error;\n                            console.log(msg);\n                            that._error.raiseEvent(that, msg);\n                        });\n                    changed = true;\n                }\n            }\n            newNetworkLinks.set(networkLink.id, networkLink);\n        });\n\n        if (changed) {\n            this._networkLinks = newNetworkLinks;\n            this._changed.raiseEvent(this);\n        }\n\n        return true;\n    };\n\n    /**\n     * Contains KML Feature data loaded into the <code>Entity.kml</code> property by {@link KmlDataSource}.\n     * @alias KmlFeatureData\n     * @constructor\n     */\n    function KmlFeatureData() {\n        /**\n         * Gets the atom syndication format author field.\n         * @type Object\n         */\n        this.author = {\n            /**\n             * Gets the name.\n             * @type String\n             * @alias author.name\n             * @memberof! KmlFeatureData#\n             * @property author.name\n             */\n            name : undefined,\n            /**\n             * Gets the URI.\n             * @type String\n             * @alias author.uri\n             * @memberof! KmlFeatureData#\n             * @property author.uri\n             */\n            uri : undefined,\n            /**\n             * Gets the email.\n             * @type String\n             * @alias author.email\n             * @memberof! KmlFeatureData#\n             * @property author.email\n             */\n            email : undefined\n        };\n\n        /**\n         * Gets the link.\n         * @type Object\n         */\n        this.link = {\n            /**\n             * Gets the href.\n             * @type String\n             * @alias link.href\n             * @memberof! KmlFeatureData#\n             * @property link.href\n             */\n            href : undefined,\n            /**\n             * Gets the language of the linked resource.\n             * @type String\n             * @alias link.hreflang\n             * @memberof! KmlFeatureData#\n             * @property link.hreflang\n             */\n            hreflang : undefined,\n            /**\n             * Gets the link relation.\n             * @type String\n             * @alias link.rel\n             * @memberof! KmlFeatureData#\n             * @property link.rel\n             */\n            rel : undefined,\n            /**\n             * Gets the link type.\n             * @type String\n             * @alias link.type\n             * @memberof! KmlFeatureData#\n             * @property link.type\n             */\n            type : undefined,\n            /**\n             * Gets the link title.\n             * @type String\n             * @alias link.title\n             * @memberof! KmlFeatureData#\n             * @property link.title\n             */\n            title : undefined,\n            /**\n             * Gets the link length.\n             * @type String\n             * @alias link.length\n             * @memberof! KmlFeatureData#\n             * @property link.length\n             */\n            length : undefined\n        };\n\n        /**\n         * Gets the unstructured address field.\n         * @type String\n         */\n        this.address = undefined;\n        /**\n         * Gets the phone number.\n         * @type String\n         */\n        this.phoneNumber = undefined;\n        /**\n         * Gets the snippet.\n         * @type String\n         */\n        this.snippet = undefined;\n        /**\n         * Gets the extended data, parsed into a JSON object.\n         * Currently only the <code>Data</code> property is supported.\n         * <code>SchemaData</code> and custom data are ignored.\n         * @type String\n         */\n        this.extendedData = undefined;\n    }\n\n    return KmlDataSource;\n});\n"],"sourceRoot":""}