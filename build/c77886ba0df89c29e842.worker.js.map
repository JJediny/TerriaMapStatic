{"version":3,"sources":["webpack:///c77886ba0df89c29e842.worker.js","webpack:///webpack/bootstrap c77886ba0df89c29e842","webpack:///./~/terriajs/lib/ReactViews/Custom/Chart/downloadHrefWorker.js","webpack:///./~/terriajs-cesium/Source/Core/defined.js","webpack:///./~/terriajs-cesium/Source/Core/defaultValue.js","webpack:///./~/terriajs/lib/Core/DataUri.js","webpack:///./~/terriajs/lib/Core/TerriaError.js","webpack:///./~/terriajs/lib/Core/sortedIndices.js","webpack:///./~/terriajs-cesium/Source/Core/FeatureDetection.js","webpack:///./~/terriajs-cesium/Source/Core/Fullscreen.js","webpack:///./~/terriajs-cesium/Source/Core/defineProperties.js","webpack:///./~/terriajs-cesium/Source/Core/freezeObject.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","combineValueArrays","valueArrays","_defined2","length","combinedValueArrays","firstArray","j","values","push","slice","i","currentValueArray","currentFirstArray","preExistingValuesLength","concat","empty1","Array","k","empty2","_j","_values","sortByFirst","combineRepeated","firstValues","indices","_sortedIndices2","map","sortedIndex","sortedValueArrays","result","currentIndex","_i","undefined","_i2","toArrayOfRows","columnValueArrays","columnNames","rows","value0","rowIndex","unshift","_defined","_DataUri","_DataUri2","_sortedIndices","onmessage","event","data","valuesArray","prototype","nameArrays","names","combinedValues","joinedRows","row","join","csvString","href","make","postMessage","__WEBPACK_AMD_DEFINE_RESULT__","defined","value","__WEBPACK_AMD_DEFINE_ARRAY__","freezeObject","defaultValue","a","b","EMPTY_OBJECT","apply","FeatureDetection","TerriaError","canUseDataUriInHref","isInternetExplorer","exec","navigator","userAgent","DataUri","type","dataString","encodeURIComponent","checkCompatibility","errorEvent","forceError","raiseEvent","title","message","options","this","sender","raisedToUser","sortedIndices","array","compareFunction","sort","Fullscreen","extractVersion","versionString","parts","split","len","parseInt","isChrome","isChromeResult","fields","theNavigator","chromeVersionResult","chromeVersion","isSafari","isSafariResult","test","safariVersionResult","safariVersion","isWebkit","isWebkitResult","webkitVersionResult","isNightly","webkitVersion","isInternetExplorerResult","appName","internetExplorerVersionResult","internetExplorerVersion","isFirefox","isFirefoxResult","firefoxVersionResult","isWindows","isWindowsResult","appVersion","firefoxVersion","supportsPointerEvents","hasPointerEvents","PointerEvent","pointerEnabled","supportsImageRenderingPixelated","supportsImageRenderingPixelatedResult","canvas","document","createElement","setAttribute","tmp","style","imageRendering","imageRenderingValueResult","imageRenderingValue","hardwareConcurrency","supportsFullscreen","supportsTypedArrays","ArrayBuffer","supportsWebWorkers","Worker","defineProperties","_supportsFullscreen","_names","requestFullscreen","exitFullscreen","fullscreenEnabled","fullscreenElement","fullscreenchange","fullscreenerror","element","get","changeEventName","errorEventName","enabled","fullscreen","body","name","prefixes","prefix","vrDevice","vrDisplay","definePropertyWorks","Object","defineProperty","e","o","freeze"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GE5ChC,YAcA,SAAAW,GAAAC,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCE,QAAAF,GAY7E,QAAAG,GAAAC,GACA,MAAAC,EAAAH,SAAAE,QAAAE,OAAA,IAMA,OAHAC,MAEAC,EAAAJ,EAAA,GACAK,EAAA,EAAmBA,EAAAD,EAAAF,OAAuBG,IAAA,CAC1C,GAAAC,GAAAF,EAAAC,EACAF,GAAAI,KAAAD,EAAAE,SAMA,OAAAC,GAAA,EAAmBA,EAAAT,EAAAE,OAAwBO,IAAA,CAC3C,GAAAC,GAAAV,EAAAS,GACAE,EAAAD,EAAA,GACAE,EAAAT,EAAA,GAAAD,MACAC,GAAA,GAAAA,EAAA,GAAAU,OAAAF,EAEA,QADAG,GAAA,GAAAC,OAAAJ,EAAAT,QACAc,EAAA,EAAuBA,EAAAb,EAAAD,OAAgCc,IACvDb,EAAAa,GAAAb,EAAAa,GAAAH,OAAAC,EAGA,QADAG,GAAA,GAAAF,OAAAH,GACAM,EAAA,EAAwBA,EAAAR,EAAAR,OAA+BgB,IAAA,CACvD,GAAAC,GAAAT,EAAAQ,EACAf,GAAAI,KAAAU,EAAAJ,OAAAM,KAQA,MAHAhB,GAAAiB,EAAAjB,GACAA,EAAAkB,EAAAlB,IAWA,QAAAiB,GAAApB,GACA,GAAAsB,GAAAtB,EAAA,GACAuB,GAAA,EAAAC,EAAA1B,SAAAwB,EACA,OAAAtB,GAAAyB,IAAA,SAAAnB,GACA,MAAAiB,GAAAE,IAAA,SAAAC,GACA,MAAApB,GAAAoB,OAeA,QAAAL,GAAAM,GAEA,OADAC,GAAA,GAAAb,OAAAY,EAAAzB,QACAO,EAAA,EAAmBA,EAAAmB,EAAA1B,OAAmBO,IACtCmB,EAAAnB,IAAAkB,EAAAlB,GAAA,GAEA,QAAAJ,GAAA,EAAmBA,EAAAsB,EAAA,GAAAzB,OAAiCG,IACpD,GAAAsB,EAAA,GAAAtB,KAAAsB,EAAA,GAAAtB,EAAA,GAEA,OADAwB,GAAAD,EAAA,GAAA1B,OAAA,EACA4B,EAAA,EAA4BA,EAAAF,EAAA1B,OAAoB4B,IAChDC,SAAAH,EAAAE,GAAAD,KACAD,EAAAE,GAAAD,GAAAF,EAAAG,GAAAzB,QAIA,QAAA2B,GAAA,EAA6BA,EAAAJ,EAAA1B,OAAqB8B,IAClDJ,EAAAI,GAAAzB,KAAAoB,EAAAK,GAAA3B,GAIA,OAAAuB,GASA,QAAAK,GAAAC,EAAAC,GACA,KAAAD,EAAAhC,OAAA,IAGA,GAAAkC,GAAAF,EAAA,GAAAT,IAAA,SAAAY,EAAAC,GACA,MAAAJ,GAAAT,IAAA,SAAAnB,GACA,MAAAA,GAAAgC,MAIA,OADAF,GAAAG,QAAAJ,GACAC,GA9HA,GAAAI,GAAAxD,EAAA,GAEAiB,EAAAN,EAAA6C,GAEAC,EAAAzD,EAAA,GAEA0D,EAAA/C,EAAA8C,GAEAE,EAAA3D,EAAA,GAEAwC,EAAA7B,EAAAgD,EAuHAC,WAAA,SAAAC,GACA,GAAA7C,GAAA6C,EAAAC,KAAAxC,OAAAmB,IAAA,SAAAsB,GACA,MAAAA,GAAAtB,IAAA,SAAAnB,GACA,MAAAS,OAAAiC,UAAAxC,MAAAjB,KAAAe,OAGA2C,EAAAJ,EAAAC,KAAAI,MACAC,EAAApD,EAAAC,GACAoC,EAAAH,EAAAkB,EAAAF,GACAG,EAAAhB,EAAAX,IAAA,SAAA4B,GACA,MAAAA,GAAAC,KAAA,OAEAC,EAAAH,EAAAE,KAAA,MACAE,EAAAd,EAAA5C,QAAA2D,KAAA,MAAAF,EACAG,aAAAF,KFmDM,SAASpE,EAAQD,EAASH,GGpMhC,GAAA2E,EACAA,GAAA,WACA,YAeA,SAAAC,GAAAC,GACA,MAAA9B,UAAA8B,GAAA,OAAAA,EAGA,MAAAD,IACCrE,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA2C,SAAA4B,IAAAvE,EAAAD,QAAAwE,KH2MK,SAASvE,EAAQD,EAASH,GIjOhC,GAAA8E,GAAAH,CACAG,IACA9E,EAAA,IACA2E,EAAA,SACAI,GACA,YAeA,SAAAC,GAAAC,EAAAC,GACA,MAAAnC,UAAAkC,EACAA,EAEAC,EASA,MAFAF,GAAAG,aAAAJ,MAEAC,GACCI,MAAAjF,EAAA2E,KAAA/B,SAAA4B,IAAAvE,EAAAD,QAAAwE,KJwOK,SAASvE,EAAQD,EAASH,GK1QhC,YAEA,IAAAqF,GAAArF,EAAA,GACAsF,EAAAtF,EAAA,GAGAuF,IAAAF,EAAAG,sBAAA,OAAAC,KAAAC,UAAAC,YAEAC,GAOAnB,KAAA,SAAAoB,EAAAC,GACA,GAAAA,EAEA,yBAAAD,EAAA,IAAAE,mBAAAD,IAWAE,mBAAA,SAAAC,EAAAzB,EAAA0B,GACA,SAAAX,GAAAW,QACAD,GAAAE,WAAA,GAAAb,IACAc,MAAA,yCACAC,QAAA,oQAAA7B,MAQApE,GAAAD,QAAAyF,GLgRM,SAASxF,EAAQD,EAASH,GMzThC,YAIA,IAAAgF,GAAAhF,EAAA,GAcAsF,EAAA,SAAAgB,GAKAC,KAAAC,OAAAF,EAAAE,OAMAD,KAAAH,MAAApB,EAAAsB,EAAAF,MAAA,qBAMAG,KAAAF,QAAAC,EAAAD,QAOAE,KAAAE,cAAA,EAGArG,GAAAD,QAAAmF,GN+TM,SAASlF,EAAQD,GO5WvB,YAUA,SAAAuG,GAAAC,EAAAC,GAGA,OAFA1F,GAAAyF,EAAAzF,OACAqB,EAAA,GAAAR,OAAAb,GACAO,EAAA,EAAmBA,EAAAP,EAAYO,IAC/Bc,EAAAd,IAUA,OARAmF,KACAA,EAAA,SAAA3B,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,MAGA3C,EAAAsE,KAAA,SAAA5B,EAAAC,GACA,MAAA0B,GAAAD,EAAA1B,GAAA0B,EAAAzB,MAEA3C,EAcAnC,EAAAD,QAAAuG,GPkXM,SAAStG,EAAQD,EAASH,GQxZhC,GAAA8E,GAAAH,CACAG,IACA9E,EAAA,GACAA,EAAA,GACAA,EAAA,IACA2E,EAAA,SACAK,EACAJ,EACAkC,GACA,YASA,SAAAC,GAAAC,GAEA,OADAC,GAAAD,EAAAE,MAAA,KACAzF,EAAA,EAAA0F,EAAAF,EAAA/F,OAA2CO,EAAA0F,IAAS1F,EACpDwF,EAAAxF,GAAA2F,SAAAH,EAAAxF,GAAA,GAEA,OAAAwF,GAKA,QAAAI,KACA,IAAAzC,EAAA0C,GAAA,CACAA,GAAA,CAEA,IAAAC,GAAA,sBAAA9B,KAAA+B,EAAA7B,UACA,QAAA4B,IACAD,GAAA,EACAG,EAAAV,EAAAQ,EAAA,KAIA,MAAAD,GAGA,QAAAI,KACA,MAAAL,MAAAI,EAKA,QAAAE,KACA,IAAA/C,EAAAgD,KACAA,GAAA,GAGAP,KAAA,oBAAAQ,KAAAL,EAAA7B,YAAA,CACA,GAAA4B,GAAA,uBAAA9B,KAAA+B,EAAA7B,UACA,QAAA4B,IACAK,GAAA,EACAE,EAAAf,EAAAQ,EAAA,KAKA,MAAAK,GAGA,QAAAG,KACA,MAAAJ,MAAAG,EAKA,QAAAE,KACA,IAAApD,EAAAqD,GAAA,CACAA,GAAA,CAEA,IAAAV,GAAA,gCAAA9B,KAAA+B,EAAA7B,UACA,QAAA4B,IACAU,GAAA,EACAC,EAAAnB,EAAAQ,EAAA,IACAW,EAAAC,YAAAZ,EAAA,IAIA,MAAAU,GAGA,QAAAG,KACA,MAAAJ,MAAAE,EAKA,QAAA1C,KACA,IAAAZ,EAAAyD,GAAA,CACAA,GAAA,CAEA,IAAAd,EACA,iCAAAC,EAAAc,SACAf,EAAA,8BAAoD9B,KAAA+B,EAAA7B,WACpD,OAAA4B,IACAc,GAAA,EACAE,EAAAxB,EAAAQ,EAAA,MAEa,aAAAC,EAAAc,UACbf,EAAA,uCAA6D9B,KAAA+B,EAAA7B,WAC7D,OAAA4B,IACAc,GAAA,EACAE,EAAAxB,EAAAQ,EAAA,MAIA,MAAAc,GAGA,QAAAG,KACA,MAAAhD,MAAA+C,EAKA,QAAAE,KACA,IAAA7D,EAAA8D,GAAA,CACAA,GAAA,CAEA,IAAAnB,GAAA,sBAAA9B,KAAA+B,EAAA7B,UACA,QAAA4B,IACAmB,GAAA,EACAC,EAAA5B,EAAAQ,EAAA,KAGA,MAAAmB,GAIA,QAAAE,KAIA,MAHAhE,GAAAiE,KACAA,EAAA,WAAAhB,KAAAL,EAAAsB,aAEAD,EAIA,QAAAE,KACA,MAAAN,MAAAE,EAIA,QAAAK,KAQA,MAPApE,GAAAqE,KAKAA,EAAA,mBAAAC,iBAAAtE,EAAA4C,EAAA2B,iBAAA3B,EAAA2B,iBAEAF,EAKA,QAAAG,KACA,IAAAxE,EAAAyE,GAAA,CACA,GAAAC,GAAAC,SAAAC,cAAA,SACAF,GAAAG,aAAA,QACA,gEAGA,IAAAC,GAAAJ,EAAAK,MAAAC,cACAP,GAAAzE,EAAA8E,IAAA,KAAAA,EACAL,IACAQ,EAAAH,GAGA,MAAAL,GAGA,QAAAS,KACA,MAAAV,KAAAS,EAAA9G,OAtKA,GAAAyE,EAEAA,GADA,mBAAA9B,WACAA,YAaA,IAAA4B,GACAG,EAmBAG,EACAE,EAsBAG,EACAC,EAoBAG,EACAE,EA2BAG,EACAC,EAcAE,EAaAI,EAYAY,EACAR,EA2BAhE,GACAgC,WACAK,gBACAC,WACAI,gBACAC,WACAI,gBACA5C,qBACAgD,0BACAC,YACAM,iBACAH,YACAmB,oBAAA/E,EAAAwC,EAAAuC,oBAAA,GACAf,wBACAI,kCACAU,sBAqCA,OA1BAzE,GAAA2E,mBAAA,WACA,MAAAlD,GAAAkD,sBAUA3E,EAAA4E,oBAAA,WACA,yBAAAC,cAUA7E,EAAA8E,mBAAA,WACA,yBAAAC,SAGA/E,GACCD,MAAAjF,EAAA2E,KAAA/B,SAAA4B,IAAAvE,EAAAD,QAAAwE,KR+ZK,SAASvE,EAAQD,EAASH,GS9oBhC,GAAA8E,GAAAH,CACAG,IACA9E,EAAA,GACAA,EAAA,IACA2E,EAAA,SACAC,EACAyF,GACA,YAEA,IAAAC,GACAC,GACAC,kBAAAzH,OACA0H,eAAA1H,OACA2H,kBAAA3H,OACA4H,kBAAA5H,OACA6H,iBAAA7H,OACA8H,gBAAA9H,QAUA+D,IAmOA,OAjOAuD,GAAAvD,GAQAgE,SACAC,IAAA,WACA,GAAAjE,EAAAkD,qBAIA,MAAAT,UAAAgB,EAAAI,qBAaAK,iBACAD,IAAA,WACA,GAAAjE,EAAAkD,qBAIA,MAAAO,GAAAK,mBAWAK,gBACAF,IAAA,WACA,GAAAjE,EAAAkD,qBAIA,MAAAO,GAAAM,kBAYAK,SACAH,IAAA,WACA,GAAAjE,EAAAkD,qBAIA,MAAAT,UAAAgB,EAAAG,qBAUAS,YACAJ,IAAA,WACA,GAAAjE,EAAAkD,qBAIA,cAAAlD,EAAAgE,YAWAhE,EAAAkD,mBAAA,WACA,GAAApF,EAAA0F,GACA,MAAAA,EAGAA,IAAA,CAEA,IAAAc,GAAA7B,SAAA6B,IACA,sBAAAA,GAAAZ,kBASA,MAPAD,GAAAC,kBAAA,oBACAD,EAAAE,eAAA,iBACAF,EAAAG,kBAAA,oBACAH,EAAAI,kBAAA,oBACAJ,EAAAK,iBAAA,mBACAL,EAAAM,gBAAA,kBACAP,GAAA,CAOA,QADAe,GADAC,GAAA,iCAEA7J,EAAA,EAAA0F,EAAAmE,EAAApK,OAA8CO,EAAA0F,IAAS1F,EAAA,CACvD,GAAA8J,GAAAD,EAAA7J,EAGA4J,GAAAE,EAAA,oBACA,kBAAAH,GAAAC,IACAd,EAAAC,kBAAAa,EACAf,GAAA,IAEAe,EAAAE,EAAA,oBACA,kBAAAH,GAAAC,KACAd,EAAAC,kBAAAa,EACAf,GAAA,IAKAe,EAAAE,EAAA,iBACA,kBAAAhC,UAAA8B,GACAd,EAAAE,eAAAY,GAEAA,EAAAE,EAAA,mBACA,kBAAAhC,UAAA8B,KACAd,EAAAE,eAAAY,IAKAA,EAAAE,EAAA,oBACAxI,SAAAwG,SAAA8B,GACAd,EAAAG,kBAAAW,GAEAA,EAAAE,EAAA,oBACAxI,SAAAwG,SAAA8B,KACAd,EAAAG,kBAAAW,IAKAA,EAAAE,EAAA,oBACAxI,SAAAwG,SAAA8B,GACAd,EAAAI,kBAAAU,GAEAA,EAAAE,EAAA,oBACAxI,SAAAwG,SAAA8B,KACAd,EAAAI,kBAAAU,IAKAA,EAAAE,EAAA,mBAEAxI,SAAAwG,SAAA,KAAA8B,KAEA,OAAAE,IACAF,EAAA,sBAEAd,EAAAK,iBAAAS,GAGAA,EAAAE,EAAA,kBACAxI,SAAAwG,SAAA,KAAA8B,KAEA,OAAAE,IACAF,EAAA,qBAEAd,EAAAM,gBAAAQ,GAIA,MAAAf,IAiBAxD,EAAA0D,kBAAA,SAAAM,EAAAU,GACA1E,EAAAkD,sBAIAc,EAAAP,EAAAC,oBAA2CiB,UAAAD,KAO3C1E,EAAA2D,eAAA,WACA3D,EAAAkD,sBAIAT,SAAAgB,EAAAE,mBAGA3D,GACC1B,MAAAjF,EAAA2E,KAAA/B,SAAA4B,IAAAvE,EAAAD,QAAAwE,KTqpBK,SAASvE,EAAQD,EAASH,GUn5BhC,GAAA8E,GAAAH,CACAG,IACA9E,EAAA,IACA2E,EAAA,SACAC,GACA,YAEA,IAAA8G,GAAA,WACA,IACA,WAAAC,QAAAC,kBAAkD,QACzC,MAAAC,GACT,aAcAxB,EAAAsB,OAAAtB,gBAOA,OANAqB,IAAA9G,EAAAyF,KACAA,EAAA,SAAAyB,GACA,MAAAA,KAIAzB,GACCjF,MAAAjF,EAAA2E,KAAA/B,SAAA4B,IAAAvE,EAAAD,QAAAwE,KVy5BK,SAASvE,EAAQD,EAASH,GW17BhC,GAAA8E,GAAAH,CACAG,IACA9E,EAAA,IACA2E,EAAA,SACAC,GACA,YAWA,IAAAG,GAAA4G,OAAAI,MAOA,OANAnH,GAAAG,KACAA,EAAA,SAAA+G,GACA,MAAAA,KAIA/G,GACCK,MAAAjF,EAAA2E,KAAA/B,SAAA4B,IAAAvE,EAAAD,QAAAwE","file":"c77886ba0df89c29e842.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n'use strict';\n\nvar _defined = __webpack_require__(1);\n\nvar _defined2 = _interopRequireDefault(_defined);\n\nvar _DataUri = __webpack_require__(3);\n\nvar _DataUri2 = _interopRequireDefault(_DataUri);\n\nvar _sortedIndices = __webpack_require__(5);\n\nvar _sortedIndices2 = _interopRequireDefault(_sortedIndices);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create combined arrays from arrays of column values, eg. [[values1, values2, values3], [values4, values5]].\n * The first columns of each array must be of the same type (in the above example, values1 and values4).\n * These are combined and sorted into a single column.\n * Then the subsequent columns are added, filling with null where missing. (This could be an option in future.)\n * Eg. if the values of each col are: values1=[1,3]; values2=[10,30]; values3=[100,300]; values4=[1,2]; values5=[-1,-2];\n * then the resulting array of column values are, in order, [1,2,3]; [10,null,30]; [100,null,300]; [-1,-2,null].\n * @param {Array[]} valueArrays See description above.\n * @return {Array[]} The synthesized values which could be passed to a table structure.\n */\nfunction combineValueArrays(valueArrays) {\n    if (!(0, _defined2.default)(valueArrays) || valueArrays.length < 1) {\n        return;\n    }\n    var combinedValueArrays = [];\n    // Start by copying the first set of columns into the result.\n    var firstArray = valueArrays[0];\n    for (var j = 0; j < firstArray.length; j++) {\n        var values = firstArray[j];\n        combinedValueArrays.push(values.slice());\n    }\n    // Then add the subsequent sets of x-columns to the end of the first result column,\n    // add nulls to the end of the other existing columns,\n    // add nulls to the start of the new columns,\n    // and add them to the end of the result.\n    for (var i = 1; i < valueArrays.length; i++) {\n        var currentValueArray = valueArrays[i];\n        var currentFirstArray = currentValueArray[0];\n        var preExistingValuesLength = combinedValueArrays[0].length;\n        combinedValueArrays[0] = combinedValueArrays[0].concat(currentFirstArray);\n        var empty1 = new Array(currentFirstArray.length); // elements are undefined.\n        for (var k = 1; k < combinedValueArrays.length; k++) {\n            combinedValueArrays[k] = combinedValueArrays[k].concat(empty1);\n        }\n        var empty2 = new Array(preExistingValuesLength); // elements are undefined.\n        for (var _j = 1; _j < currentValueArray.length; _j++) {\n            var _values = currentValueArray[_j];\n            combinedValueArrays.push(empty2.concat(_values));\n        }\n    }\n\n    // Sort by the first column.\n    combinedValueArrays = sortByFirst(combinedValueArrays);\n    combinedValueArrays = combineRepeated(combinedValueArrays);\n\n    return combinedValueArrays;\n}\n\n/**\n * Eg. sortByFirst([['b', 'a', 'c'], [1, 2, 3]]) = [['a', 'b', 'c'], [2, 1, 3]].\n * @param  {Array[]} valueArrays The array of arrays of values to sort.\n * @return {Array[]} The values sorted by the first column.\n */\n/* global onmessage:true */\nfunction sortByFirst(valueArrays) {\n    var firstValues = valueArrays[0];\n    var indices = (0, _sortedIndices2.default)(firstValues);\n    return valueArrays.map(function (values) {\n        return indices.map(function (sortedIndex) {\n            return values[sortedIndex];\n        });\n    });\n}\n\n/**\n * @param  {Array[]} sortedJulianDateOrValueArrays The array of arrays of values to combine. These must be sortedByFirst. Dates must be JulianDates.\n * @param  {Integer} [firstColumnType] Eg. VarType.TIME.\n * @return {Array[]} The values, with any repeats in the first column combined into one. Dates are converted to ISO8601 string representation.\n *\n * Eg.\n * var x = [['a', 'b', 'b', 'c'], [1, 2, undefined, 3], [4, undefined, 5, undefined]];\n * combineRepeated(x);\n * # x is [['a', 'b', 'c'], [1, 2, 3], [4, 5, undefined]].\n */\nfunction combineRepeated(sortedValueArrays) {\n    var result = new Array(sortedValueArrays.length);\n    for (var i = 0; i < result.length; i++) {\n        result[i] = [sortedValueArrays[i][0]];\n    }\n    for (var j = 1; j < sortedValueArrays[0].length; j++) {\n        if (sortedValueArrays[0][j] === sortedValueArrays[0][j - 1]) {\n            var currentIndex = result[0].length - 1;\n            for (var _i = 0; _i < result.length; _i++) {\n                if (result[_i][currentIndex] === undefined) {\n                    result[_i][currentIndex] = sortedValueArrays[_i][j];\n                }\n            }\n        } else {\n            for (var _i2 = 0; _i2 < result.length; _i2++) {\n                result[_i2].push(sortedValueArrays[_i2][j]);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Convert an array of column values, with column names, to an array of row values.\n * @param  {Array[]} columnValueArrays Array of column values, eg. [[1,2,3], [4,5,6]].\n * @param  {String[]} columnNames Array of column names, eg ['x', 'y'].\n * @return {Array[]} Array of rows, starting with the column names, eg. [['x', 'y'], [1, 4], [2, 5], [3, 6]].\n */\nfunction toArrayOfRows(columnValueArrays, columnNames) {\n    if (columnValueArrays.length < 1) {\n        return;\n    }\n    var rows = columnValueArrays[0].map(function (value0, rowIndex) {\n        return columnValueArrays.map(function (values) {\n            return values[rowIndex];\n        });\n    });\n    rows.unshift(columnNames);\n    return rows;\n}\n\nonmessage = function onmessage(event) {\n    var valueArrays = event.data.values.map(function (valuesArray) {\n        return valuesArray.map(function (values) {\n            return Array.prototype.slice.call(values);\n        });\n    }); // Convert from typed arrays.\n    var nameArrays = event.data.names;\n    var combinedValues = combineValueArrays(valueArrays);\n    var rows = toArrayOfRows(combinedValues, nameArrays);\n    var joinedRows = rows.map(function (row) {\n        return row.join(',');\n    });\n    var csvString = joinedRows.join('\\n');\n    var href = _DataUri2.default.make('csv', csvString);\n    postMessage(href);\n};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n    'use strict';\n\n    /**\n     * @exports defined\n     *\n     * @param {Object} value The object.\n     * @returns {Boolean} Returns true if the object is defined, returns false otherwise.\n     *\n     * @example\n     * if (Cesium.defined(positions)) {\n     *      doSomething();\n     * } else {\n     *      doSomethingElse();\n     * }\n     */\n    function defined(value) {\n        return value !== undefined && value !== null;\n    }\n\n    return defined;\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(9)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n        freezeObject) {\n    'use strict';\n\n    /**\n     * Returns the first parameter if not undefined, otherwise the second parameter.\n     * Useful for setting a default value for a parameter.\n     *\n     * @exports defaultValue\n     *\n     * @param {*} a\n     * @param {*} b\n     * @returns {*} Returns the first parameter if not undefined, otherwise the second parameter.\n     *\n     * @example\n     * param = Cesium.defaultValue(param, 'default');\n     */\n    function defaultValue(a, b) {\n        if (a !== undefined) {\n            return a;\n        }\n        return b;\n    }\n\n    /**\n     * A frozen empty object that can be used as the default value for options passed as\n     * an object literal.\n     */\n    defaultValue.EMPTY_OBJECT = freezeObject({});\n\n    return defaultValue;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n'use strict';\n\nvar FeatureDetection = __webpack_require__(6);\nvar TerriaError = __webpack_require__(4);\n\n// Unfortunately there's no way to feature-detect for this, it's something that only MS browsers disallow for security reasons.\nvar canUseDataUriInHref = !(FeatureDetection.isInternetExplorer() || /Edge/.exec(navigator.userAgent));\n\nvar DataUri = {\n    /**\n     * Turn a file with the supplied type and stringified data into a data uri that can be set as the href of an anchor tag.\n     * @param {String} type Data type, eg. 'json' or 'csv'.\n     * @param {String} dataString The data.\n     * @return {String} A string that can be used to in an anchor tag's 'href' attribute to represent downloadable data.\n     */\n    make: function make(type, dataString) {\n        if (dataString) {\n            // Using attachment/* mime type makes safari download as attachment.\n            return 'data:attachment/' + type + ',' + encodeURIComponent(dataString);\n        }\n    },\n\n    /**\n     * Check that data uri links are supported by the user's browser. If so, lets them through,\n     * otherwise swallows the event and presents an error message explaining why it won't work.\n     * @param {Error} errorEvent A Cesium Event, eg. terria.error, used to raise an error if the browser does not support data download.\n     * @param {String} href The link to provide in the error message.\n     * @param {Boolean} [forceError] If true, always show the error message. Defaults to false, which only shows it if the browser cannot download uri links.\n     */\n    checkCompatibility: function checkCompatibility(errorEvent, href, forceError) {\n        if (!canUseDataUriInHref || forceError) {\n            errorEvent.raiseEvent(new TerriaError({\n                title: 'Browser Does Not Support Data Download',\n                message: 'Unfortunately Microsoft browsers (including all versions of Internet Explorer and Edge) do not ' + 'support the data uri functionality needed to download data as a file. To download, copy the following uri ' + 'into another browser such as Chrome, Firefox or Safari: ' + href\n            }));\n        } else {\n            return true; // allow the event.\n        }\n    }\n};\n\nmodule.exports = DataUri;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n'use strict';\n\n/*global require*/\n\nvar defaultValue = __webpack_require__(2);\n\n/**\n * Represents an error that occurred in a TerriaJS module, especially an asynchronous one that cannot be raised\n * by throwing an exception because no one would be able to catch it.\n *\n * @alias TerriaError\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} [options.sender] The object raising the error.\n * @param {String} [options.title='An error occurred'] A short title describing the error.\n * @param {String} options.message A detailed message describing the error.  This message may be HTML and it should be sanitized before display to the user.\n */\nvar TerriaError = function TerriaError(options) {\n  /**\n   * Gets or sets the object that raised the error.\n   * @type {Object}\n   */\n  this.sender = options.sender;\n\n  /**\n   * Gets or sets a short title describing the error.\n   * @type {String}\n   */\n  this.title = defaultValue(options.title, 'An error occurred');\n\n  /**\n   * Gets or sets a metailed message describing the error.  This message may be HTML and it should be sanitized before display to the user.\n   * @type {String}\n   */\n  this.message = options.message;\n\n  /**\n   * True if the user has seen this error; otherwise, false.\n   * @type {Boolean}\n   * @default false\n   */\n  this.raisedToUser = false;\n};\n\nmodule.exports = TerriaError;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n'use strict';\n\n/**\n * Returns indices such that array[indices[i]] = sortedArray[i].\n * Eg. sortedIndices(['c', 'a', 'b', 'd']) => [1, 2, 0, 3]. (The sorted array is [a, b, c, d], and \"a\" was in position 1, \"b\" in position 2, etc.)\n * @param {Array} array The array to sort.\n * @param {Function} [compareFunction] The usual compare function, eg. function(a, b) { return a - b }.\n * @return {Array} The sorted indices, such that array[sortedIndices[0]] = sortedArray[0].\n */\n\nfunction sortedIndices(array, compareFunction) {\n    var length = array.length;\n    var indices = new Array(length);\n    for (var i = 0; i < length; i++) {\n        indices[i] = i;\n    }\n    if (!compareFunction) {\n        compareFunction = function compareFunction(a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        };\n    }\n    indices.sort(function (a, b) {\n        return compareFunction(array[a], array[b]);\n    });\n    return indices;\n}\n\n//\n// Note: for indices which go in the other direction, just use indexOf like this:\n//\n// it('inverse indices work', function() {\n//     var data = ['c', 'a', 'b', 'd'];\n//     var sorted = data.slice().sort();\n//     var inverseIndices = data.map(function(datum) { return sorted.indexOf(datum); });\n//     expect(inverseIndices).toEqual([2, 0, 1, 3]);\n// });\n\n\nmodule.exports = sortedIndices;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(2),\n        __webpack_require__(1),\n        __webpack_require__(7)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n        defaultValue,\n        defined,\n        Fullscreen) {\n    'use strict';\n\n    var theNavigator;\n    if (typeof navigator !== 'undefined') {\n        theNavigator = navigator;\n    } else {\n        theNavigator = {};\n    }\n\n    function extractVersion(versionString) {\n        var parts = versionString.split('.');\n        for (var i = 0, len = parts.length; i < len; ++i) {\n            parts[i] = parseInt(parts[i], 10);\n        }\n        return parts;\n    }\n\n    var isChromeResult;\n    var chromeVersionResult;\n    function isChrome() {\n        if (!defined(isChromeResult)) {\n            isChromeResult = false;\n\n            var fields = (/ Chrome\\/([\\.0-9]+)/).exec(theNavigator.userAgent);\n            if (fields !== null) {\n                isChromeResult = true;\n                chromeVersionResult = extractVersion(fields[1]);\n            }\n        }\n\n        return isChromeResult;\n    }\n\n    function chromeVersion() {\n        return isChrome() && chromeVersionResult;\n    }\n\n    var isSafariResult;\n    var safariVersionResult;\n    function isSafari() {\n        if (!defined(isSafariResult)) {\n            isSafariResult = false;\n\n            // Chrome contains Safari in the user agent too\n            if (!isChrome() && (/ Safari\\/[\\.0-9]+/).test(theNavigator.userAgent)) {\n                var fields = (/ Version\\/([\\.0-9]+)/).exec(theNavigator.userAgent);\n                if (fields !== null) {\n                    isSafariResult = true;\n                    safariVersionResult = extractVersion(fields[1]);\n                }\n            }\n        }\n\n        return isSafariResult;\n    }\n\n    function safariVersion() {\n        return isSafari() && safariVersionResult;\n    }\n\n    var isWebkitResult;\n    var webkitVersionResult;\n    function isWebkit() {\n        if (!defined(isWebkitResult)) {\n            isWebkitResult = false;\n\n            var fields = (/ AppleWebKit\\/([\\.0-9]+)(\\+?)/).exec(theNavigator.userAgent);\n            if (fields !== null) {\n                isWebkitResult = true;\n                webkitVersionResult = extractVersion(fields[1]);\n                webkitVersionResult.isNightly = !!fields[2];\n            }\n        }\n\n        return isWebkitResult;\n    }\n\n    function webkitVersion() {\n        return isWebkit() && webkitVersionResult;\n    }\n\n    var isInternetExplorerResult;\n    var internetExplorerVersionResult;\n    function isInternetExplorer() {\n        if (!defined(isInternetExplorerResult)) {\n            isInternetExplorerResult = false;\n\n            var fields;\n            if (theNavigator.appName === 'Microsoft Internet Explorer') {\n                fields = /MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(theNavigator.userAgent);\n                if (fields !== null) {\n                    isInternetExplorerResult = true;\n                    internetExplorerVersionResult = extractVersion(fields[1]);\n                }\n            } else if (theNavigator.appName === 'Netscape') {\n                fields = /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(theNavigator.userAgent);\n                if (fields !== null) {\n                    isInternetExplorerResult = true;\n                    internetExplorerVersionResult = extractVersion(fields[1]);\n                }\n            }\n        }\n        return isInternetExplorerResult;\n    }\n\n    function internetExplorerVersion() {\n        return isInternetExplorer() && internetExplorerVersionResult;\n    }\n\n    var isFirefoxResult;\n    var firefoxVersionResult;\n    function isFirefox() {\n        if (!defined(isFirefoxResult)) {\n            isFirefoxResult = false;\n\n            var fields = /Firefox\\/([\\.0-9]+)/.exec(theNavigator.userAgent);\n            if (fields !== null) {\n                isFirefoxResult = true;\n                firefoxVersionResult = extractVersion(fields[1]);\n            }\n        }\n        return isFirefoxResult;\n    }\n\n    var isWindowsResult;\n    function isWindows() {\n        if (!defined(isWindowsResult)) {\n            isWindowsResult = /Windows/i.test(theNavigator.appVersion);\n        }\n        return isWindowsResult;\n    }\n\n\n    function firefoxVersion() {\n        return isFirefox() && firefoxVersionResult;\n    }\n\n    var hasPointerEvents;\n    function supportsPointerEvents() {\n        if (!defined(hasPointerEvents)) {\n            //While navigator.pointerEnabled is deprecated in the W3C specification\n            //we still need to use it if it exists in order to support browsers\n            //that rely on it, such as the Windows WebBrowser control which defines\n            //PointerEvent but sets navigator.pointerEnabled to false.\n            hasPointerEvents = typeof PointerEvent !== 'undefined' && (!defined(theNavigator.pointerEnabled) || theNavigator.pointerEnabled);\n        }\n        return hasPointerEvents;\n    }\n\n    var imageRenderingValueResult;\n    var supportsImageRenderingPixelatedResult;\n    function supportsImageRenderingPixelated() {\n        if (!defined(supportsImageRenderingPixelatedResult)) {\n            var canvas = document.createElement('canvas');\n            canvas.setAttribute('style',\n                                'image-rendering: -moz-crisp-edges;' +\n                                'image-rendering: pixelated;');\n            //canvas.style.imageRendering will be undefined, null or an empty string on unsupported browsers.\n            var tmp = canvas.style.imageRendering;\n            supportsImageRenderingPixelatedResult = defined(tmp) && tmp !== '';\n            if (supportsImageRenderingPixelatedResult) {\n                imageRenderingValueResult = tmp;\n            }\n        }\n        return supportsImageRenderingPixelatedResult;\n    }\n\n    function imageRenderingValue() {\n        return supportsImageRenderingPixelated() ? imageRenderingValueResult : undefined;\n    }\n\n    /**\n     * A set of functions to detect whether the current browser supports\n     * various features.\n     *\n     * @exports FeatureDetection\n     */\n    var FeatureDetection = {\n        isChrome : isChrome,\n        chromeVersion : chromeVersion,\n        isSafari : isSafari,\n        safariVersion : safariVersion,\n        isWebkit : isWebkit,\n        webkitVersion : webkitVersion,\n        isInternetExplorer : isInternetExplorer,\n        internetExplorerVersion : internetExplorerVersion,\n        isFirefox : isFirefox,\n        firefoxVersion : firefoxVersion,\n        isWindows : isWindows,\n        hardwareConcurrency : defaultValue(theNavigator.hardwareConcurrency, 3),\n        supportsPointerEvents : supportsPointerEvents,\n        supportsImageRenderingPixelated: supportsImageRenderingPixelated,\n        imageRenderingValue: imageRenderingValue\n    };\n\n    /**\n     * Detects whether the current browser supports the full screen standard.\n     *\n     * @returns {Boolean} true if the browser supports the full screen standard, false if not.\n     *\n     * @see Fullscreen\n     * @see {@link http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html|W3C Fullscreen Living Specification}\n     */\n    FeatureDetection.supportsFullscreen = function() {\n        return Fullscreen.supportsFullscreen();\n    };\n\n    /**\n     * Detects whether the current browser supports typed arrays.\n     *\n     * @returns {Boolean} true if the browser supports typed arrays, false if not.\n     *\n     * @see {@link http://www.khronos.org/registry/typedarray/specs/latest/|Typed Array Specification}\n     */\n    FeatureDetection.supportsTypedArrays = function() {\n        return typeof ArrayBuffer !== 'undefined';\n    };\n\n    /**\n     * Detects whether the current browser supports Web Workers.\n     *\n     * @returns {Boolean} true if the browsers supports Web Workers, false if not.\n     *\n     * @see {@link http://www.w3.org/TR/workers/}\n     */\n    FeatureDetection.supportsWebWorkers = function() {\n        return typeof Worker !== 'undefined';\n    };\n\n    return FeatureDetection;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(1),\n        __webpack_require__(8)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n        defined,\n        defineProperties) {\n    'use strict';\n\n    var _supportsFullscreen;\n    var _names = {\n        requestFullscreen : undefined,\n        exitFullscreen : undefined,\n        fullscreenEnabled : undefined,\n        fullscreenElement : undefined,\n        fullscreenchange : undefined,\n        fullscreenerror : undefined\n    };\n\n    /**\n     * Browser-independent functions for working with the standard fullscreen API.\n     *\n     * @exports Fullscreen\n     *\n     * @see {@link http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html|W3C Fullscreen Living Specification}\n     */\n    var Fullscreen = {};\n\n    defineProperties(Fullscreen, {\n        /**\n         * The element that is currently fullscreen, if any.  To simply check if the\n         * browser is in fullscreen mode or not, use {@link Fullscreen#fullscreen}.\n         * @memberof Fullscreen\n         * @type {Object}\n         * @readonly\n         */\n        element : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return document[_names.fullscreenElement];\n            }\n        },\n\n        /**\n         * The name of the event on the document that is fired when fullscreen is\n         * entered or exited.  This event name is intended for use with addEventListener.\n         * In your event handler, to determine if the browser is in fullscreen mode or not,\n         * use {@link Fullscreen#fullscreen}.\n         * @memberof Fullscreen\n         * @type {String}\n         * @readonly\n         */\n        changeEventName : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return _names.fullscreenchange;\n            }\n        },\n\n        /**\n         * The name of the event that is fired when a fullscreen error\n         * occurs.  This event name is intended for use with addEventListener.\n         * @memberof Fullscreen\n         * @type {String}\n         * @readonly\n         */\n        errorEventName : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return _names.fullscreenerror;\n            }\n        },\n\n        /**\n         * Determine whether the browser will allow an element to be made fullscreen, or not.\n         * For example, by default, iframes cannot go fullscreen unless the containing page\n         * adds an \"allowfullscreen\" attribute (or prefixed equivalent).\n         * @memberof Fullscreen\n         * @type {Boolean}\n         * @readonly\n         */\n        enabled : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return document[_names.fullscreenEnabled];\n            }\n        },\n\n        /**\n         * Determines if the browser is currently in fullscreen mode.\n         * @memberof Fullscreen\n         * @type {Boolean}\n         * @readonly\n         */\n        fullscreen : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return Fullscreen.element !== null;\n            }\n        }\n    });\n\n    /**\n     * Detects whether the browser supports the standard fullscreen API.\n     *\n     * @returns {Boolean} <code>true</code> if the browser supports the standard fullscreen API,\n     * <code>false</code> otherwise.\n     */\n    Fullscreen.supportsFullscreen = function() {\n        if (defined(_supportsFullscreen)) {\n            return _supportsFullscreen;\n        }\n\n        _supportsFullscreen = false;\n\n        var body = document.body;\n        if (typeof body.requestFullscreen === 'function') {\n            // go with the unprefixed, standard set of names\n            _names.requestFullscreen = 'requestFullscreen';\n            _names.exitFullscreen = 'exitFullscreen';\n            _names.fullscreenEnabled = 'fullscreenEnabled';\n            _names.fullscreenElement = 'fullscreenElement';\n            _names.fullscreenchange = 'fullscreenchange';\n            _names.fullscreenerror = 'fullscreenerror';\n            _supportsFullscreen = true;\n            return _supportsFullscreen;\n        }\n\n        //check for the correct combination of prefix plus the various names that browsers use\n        var prefixes = ['webkit', 'moz', 'o', 'ms', 'khtml'];\n        var name;\n        for (var i = 0, len = prefixes.length; i < len; ++i) {\n            var prefix = prefixes[i];\n\n            // casing of Fullscreen differs across browsers\n            name = prefix + 'RequestFullscreen';\n            if (typeof body[name] === 'function') {\n                _names.requestFullscreen = name;\n                _supportsFullscreen = true;\n            } else {\n                name = prefix + 'RequestFullScreen';\n                if (typeof body[name] === 'function') {\n                    _names.requestFullscreen = name;\n                    _supportsFullscreen = true;\n                }\n            }\n\n            // disagreement about whether it's \"exit\" as per spec, or \"cancel\"\n            name = prefix + 'ExitFullscreen';\n            if (typeof document[name] === 'function') {\n                _names.exitFullscreen = name;\n            } else {\n                name = prefix + 'CancelFullScreen';\n                if (typeof document[name] === 'function') {\n                    _names.exitFullscreen = name;\n                }\n            }\n\n            // casing of Fullscreen differs across browsers\n            name = prefix + 'FullscreenEnabled';\n            if (document[name] !== undefined) {\n                _names.fullscreenEnabled = name;\n            } else {\n                name = prefix + 'FullScreenEnabled';\n                if (document[name] !== undefined) {\n                    _names.fullscreenEnabled = name;\n                }\n            }\n\n            // casing of Fullscreen differs across browsers\n            name = prefix + 'FullscreenElement';\n            if (document[name] !== undefined) {\n                _names.fullscreenElement = name;\n            } else {\n                name = prefix + 'FullScreenElement';\n                if (document[name] !== undefined) {\n                    _names.fullscreenElement = name;\n                }\n            }\n\n            // thankfully, event names are all lowercase per spec\n            name = prefix + 'fullscreenchange';\n            // event names do not have 'on' in the front, but the property on the document does\n            if (document['on' + name] !== undefined) {\n                //except on IE\n                if (prefix === 'ms') {\n                    name = 'MSFullscreenChange';\n                }\n                _names.fullscreenchange = name;\n            }\n\n            name = prefix + 'fullscreenerror';\n            if (document['on' + name] !== undefined) {\n                //except on IE\n                if (prefix === 'ms') {\n                    name = 'MSFullscreenError';\n                }\n                _names.fullscreenerror = name;\n            }\n        }\n\n        return _supportsFullscreen;\n    };\n\n    /**\n     * Asynchronously requests the browser to enter fullscreen mode on the given element.\n     * If fullscreen mode is not supported by the browser, does nothing.\n     *\n     * @param {Object} element The HTML element which will be placed into fullscreen mode.\n     * @param {HMDVRDevice} [vrDevice] The VR device.\n     *\n     * @example\n     * // Put the entire page into fullscreen.\n     * Cesium.Fullscreen.requestFullscreen(document.body)\n     *\n     * // Place only the Cesium canvas into fullscreen.\n     * Cesium.Fullscreen.requestFullscreen(scene.canvas)\n     */\n    Fullscreen.requestFullscreen = function(element, vrDevice) {\n        if (!Fullscreen.supportsFullscreen()) {\n            return;\n        }\n\n        element[_names.requestFullscreen]({ vrDisplay: vrDevice });\n    };\n\n    /**\n     * Asynchronously exits fullscreen mode.  If the browser is not currently\n     * in fullscreen, or if fullscreen mode is not supported by the browser, does nothing.\n     */\n    Fullscreen.exitFullscreen = function() {\n        if (!Fullscreen.supportsFullscreen()) {\n            return;\n        }\n\n        document[_names.exitFullscreen]();\n    };\n\n    return Fullscreen;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(1)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n        defined) {\n    'use strict';\n\n    var definePropertyWorks = (function() {\n        try {\n            return 'x' in Object.defineProperty({}, 'x', {});\n        } catch (e) {\n            return false;\n        }\n    })();\n\n    /**\n     * Defines properties on an object, using Object.defineProperties if available,\n     * otherwise returns the object unchanged.  This function should be used in\n     * setup code to prevent errors from completely halting JavaScript execution\n     * in legacy browsers.\n     *\n     * @private\n     *\n     * @exports defineProperties\n     */\n    var defineProperties = Object.defineProperties;\n    if (!definePropertyWorks || !defined(defineProperties)) {\n        defineProperties = function(o) {\n            return o;\n        };\n    }\n\n    return defineProperties;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(1)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n        defined) {\n    'use strict';\n\n    /**\n     * Freezes an object, using Object.freeze if available, otherwise returns\n     * the object unchanged.  This function should be used in setup code to prevent\n     * errors from completely halting JavaScript execution in legacy browsers.\n     *\n     * @private\n     *\n     * @exports freezeObject\n     */\n    var freezeObject = Object.freeze;\n    if (!defined(freezeObject)) {\n        freezeObject = function(o) {\n            return o;\n        };\n    }\n\n    return freezeObject;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// c77886ba0df89c29e842.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c77886ba0df89c29e842","'use strict';\n\nvar _defined = require('terriajs-cesium/Source/Core/defined');\n\nvar _defined2 = _interopRequireDefault(_defined);\n\nvar _DataUri = require('../../../Core/DataUri');\n\nvar _DataUri2 = _interopRequireDefault(_DataUri);\n\nvar _sortedIndices = require('../../../Core/sortedIndices');\n\nvar _sortedIndices2 = _interopRequireDefault(_sortedIndices);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create combined arrays from arrays of column values, eg. [[values1, values2, values3], [values4, values5]].\n * The first columns of each array must be of the same type (in the above example, values1 and values4).\n * These are combined and sorted into a single column.\n * Then the subsequent columns are added, filling with null where missing. (This could be an option in future.)\n * Eg. if the values of each col are: values1=[1,3]; values2=[10,30]; values3=[100,300]; values4=[1,2]; values5=[-1,-2];\n * then the resulting array of column values are, in order, [1,2,3]; [10,null,30]; [100,null,300]; [-1,-2,null].\n * @param {Array[]} valueArrays See description above.\n * @return {Array[]} The synthesized values which could be passed to a table structure.\n */\nfunction combineValueArrays(valueArrays) {\n    if (!(0, _defined2.default)(valueArrays) || valueArrays.length < 1) {\n        return;\n    }\n    var combinedValueArrays = [];\n    // Start by copying the first set of columns into the result.\n    var firstArray = valueArrays[0];\n    for (var j = 0; j < firstArray.length; j++) {\n        var values = firstArray[j];\n        combinedValueArrays.push(values.slice());\n    }\n    // Then add the subsequent sets of x-columns to the end of the first result column,\n    // add nulls to the end of the other existing columns,\n    // add nulls to the start of the new columns,\n    // and add them to the end of the result.\n    for (var i = 1; i < valueArrays.length; i++) {\n        var currentValueArray = valueArrays[i];\n        var currentFirstArray = currentValueArray[0];\n        var preExistingValuesLength = combinedValueArrays[0].length;\n        combinedValueArrays[0] = combinedValueArrays[0].concat(currentFirstArray);\n        var empty1 = new Array(currentFirstArray.length); // elements are undefined.\n        for (var k = 1; k < combinedValueArrays.length; k++) {\n            combinedValueArrays[k] = combinedValueArrays[k].concat(empty1);\n        }\n        var empty2 = new Array(preExistingValuesLength); // elements are undefined.\n        for (var _j = 1; _j < currentValueArray.length; _j++) {\n            var _values = currentValueArray[_j];\n            combinedValueArrays.push(empty2.concat(_values));\n        }\n    }\n\n    // Sort by the first column.\n    combinedValueArrays = sortByFirst(combinedValueArrays);\n    combinedValueArrays = combineRepeated(combinedValueArrays);\n\n    return combinedValueArrays;\n}\n\n/**\n * Eg. sortByFirst([['b', 'a', 'c'], [1, 2, 3]]) = [['a', 'b', 'c'], [2, 1, 3]].\n * @param  {Array[]} valueArrays The array of arrays of values to sort.\n * @return {Array[]} The values sorted by the first column.\n */\n/* global onmessage:true */\nfunction sortByFirst(valueArrays) {\n    var firstValues = valueArrays[0];\n    var indices = (0, _sortedIndices2.default)(firstValues);\n    return valueArrays.map(function (values) {\n        return indices.map(function (sortedIndex) {\n            return values[sortedIndex];\n        });\n    });\n}\n\n/**\n * @param  {Array[]} sortedJulianDateOrValueArrays The array of arrays of values to combine. These must be sortedByFirst. Dates must be JulianDates.\n * @param  {Integer} [firstColumnType] Eg. VarType.TIME.\n * @return {Array[]} The values, with any repeats in the first column combined into one. Dates are converted to ISO8601 string representation.\n *\n * Eg.\n * var x = [['a', 'b', 'b', 'c'], [1, 2, undefined, 3], [4, undefined, 5, undefined]];\n * combineRepeated(x);\n * # x is [['a', 'b', 'c'], [1, 2, 3], [4, 5, undefined]].\n */\nfunction combineRepeated(sortedValueArrays) {\n    var result = new Array(sortedValueArrays.length);\n    for (var i = 0; i < result.length; i++) {\n        result[i] = [sortedValueArrays[i][0]];\n    }\n    for (var j = 1; j < sortedValueArrays[0].length; j++) {\n        if (sortedValueArrays[0][j] === sortedValueArrays[0][j - 1]) {\n            var currentIndex = result[0].length - 1;\n            for (var _i = 0; _i < result.length; _i++) {\n                if (result[_i][currentIndex] === undefined) {\n                    result[_i][currentIndex] = sortedValueArrays[_i][j];\n                }\n            }\n        } else {\n            for (var _i2 = 0; _i2 < result.length; _i2++) {\n                result[_i2].push(sortedValueArrays[_i2][j]);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Convert an array of column values, with column names, to an array of row values.\n * @param  {Array[]} columnValueArrays Array of column values, eg. [[1,2,3], [4,5,6]].\n * @param  {String[]} columnNames Array of column names, eg ['x', 'y'].\n * @return {Array[]} Array of rows, starting with the column names, eg. [['x', 'y'], [1, 4], [2, 5], [3, 6]].\n */\nfunction toArrayOfRows(columnValueArrays, columnNames) {\n    if (columnValueArrays.length < 1) {\n        return;\n    }\n    var rows = columnValueArrays[0].map(function (value0, rowIndex) {\n        return columnValueArrays.map(function (values) {\n            return values[rowIndex];\n        });\n    });\n    rows.unshift(columnNames);\n    return rows;\n}\n\nonmessage = function onmessage(event) {\n    var valueArrays = event.data.values.map(function (valuesArray) {\n        return valuesArray.map(function (values) {\n            return Array.prototype.slice.call(values);\n        });\n    }); // Convert from typed arrays.\n    var nameArrays = event.data.names;\n    var combinedValues = combineValueArrays(valueArrays);\n    var rows = toArrayOfRows(combinedValues, nameArrays);\n    var joinedRows = rows.map(function (row) {\n        return row.join(',');\n    });\n    var csvString = joinedRows.join('\\n');\n    var href = _DataUri2.default.make('csv', csvString);\n    postMessage(href);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-loader/lib?{\"sourceMap\":false,\"presets\":[\"es2015\",\"react\"],\"plugins\":[\"/home/john/TerriaMap/~/jsx-control-statements/src/index.js\"]}!./~/terriajs/lib/ReactViews/Custom/Chart/downloadHrefWorker.js\n// module id = 0\n// module chunks = 0","/*global define*/\ndefine(function() {\n    'use strict';\n\n    /**\n     * @exports defined\n     *\n     * @param {Object} value The object.\n     * @returns {Boolean} Returns true if the object is defined, returns false otherwise.\n     *\n     * @example\n     * if (Cesium.defined(positions)) {\n     *      doSomething();\n     * } else {\n     *      doSomethingElse();\n     * }\n     */\n    function defined(value) {\n        return value !== undefined && value !== null;\n    }\n\n    return defined;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs-cesium/Source/Core/defined.js\n// module id = 1\n// module chunks = 0","/*global define*/\ndefine([\n        './freezeObject'\n    ], function(\n        freezeObject) {\n    'use strict';\n\n    /**\n     * Returns the first parameter if not undefined, otherwise the second parameter.\n     * Useful for setting a default value for a parameter.\n     *\n     * @exports defaultValue\n     *\n     * @param {*} a\n     * @param {*} b\n     * @returns {*} Returns the first parameter if not undefined, otherwise the second parameter.\n     *\n     * @example\n     * param = Cesium.defaultValue(param, 'default');\n     */\n    function defaultValue(a, b) {\n        if (a !== undefined) {\n            return a;\n        }\n        return b;\n    }\n\n    /**\n     * A frozen empty object that can be used as the default value for options passed as\n     * an object literal.\n     */\n    defaultValue.EMPTY_OBJECT = freezeObject({});\n\n    return defaultValue;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs-cesium/Source/Core/defaultValue.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar FeatureDetection = require('terriajs-cesium/Source/Core/FeatureDetection');\nvar TerriaError = require('../Core/TerriaError');\n\n// Unfortunately there's no way to feature-detect for this, it's something that only MS browsers disallow for security reasons.\nvar canUseDataUriInHref = !(FeatureDetection.isInternetExplorer() || /Edge/.exec(navigator.userAgent));\n\nvar DataUri = {\n    /**\n     * Turn a file with the supplied type and stringified data into a data uri that can be set as the href of an anchor tag.\n     * @param {String} type Data type, eg. 'json' or 'csv'.\n     * @param {String} dataString The data.\n     * @return {String} A string that can be used to in an anchor tag's 'href' attribute to represent downloadable data.\n     */\n    make: function make(type, dataString) {\n        if (dataString) {\n            // Using attachment/* mime type makes safari download as attachment.\n            return 'data:attachment/' + type + ',' + encodeURIComponent(dataString);\n        }\n    },\n\n    /**\n     * Check that data uri links are supported by the user's browser. If so, lets them through,\n     * otherwise swallows the event and presents an error message explaining why it won't work.\n     * @param {Error} errorEvent A Cesium Event, eg. terria.error, used to raise an error if the browser does not support data download.\n     * @param {String} href The link to provide in the error message.\n     * @param {Boolean} [forceError] If true, always show the error message. Defaults to false, which only shows it if the browser cannot download uri links.\n     */\n    checkCompatibility: function checkCompatibility(errorEvent, href, forceError) {\n        if (!canUseDataUriInHref || forceError) {\n            errorEvent.raiseEvent(new TerriaError({\n                title: 'Browser Does Not Support Data Download',\n                message: 'Unfortunately Microsoft browsers (including all versions of Internet Explorer and Edge) do not ' + 'support the data uri functionality needed to download data as a file. To download, copy the following uri ' + 'into another browser such as Chrome, Firefox or Safari: ' + href\n            }));\n        } else {\n            return true; // allow the event.\n        }\n    }\n};\n\nmodule.exports = DataUri;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs/lib/Core/DataUri.js\n// module id = 3\n// module chunks = 0","'use strict';\n\n/*global require*/\n\nvar defaultValue = require('terriajs-cesium/Source/Core/defaultValue');\n\n/**\n * Represents an error that occurred in a TerriaJS module, especially an asynchronous one that cannot be raised\n * by throwing an exception because no one would be able to catch it.\n *\n * @alias TerriaError\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} [options.sender] The object raising the error.\n * @param {String} [options.title='An error occurred'] A short title describing the error.\n * @param {String} options.message A detailed message describing the error.  This message may be HTML and it should be sanitized before display to the user.\n */\nvar TerriaError = function TerriaError(options) {\n  /**\n   * Gets or sets the object that raised the error.\n   * @type {Object}\n   */\n  this.sender = options.sender;\n\n  /**\n   * Gets or sets a short title describing the error.\n   * @type {String}\n   */\n  this.title = defaultValue(options.title, 'An error occurred');\n\n  /**\n   * Gets or sets a metailed message describing the error.  This message may be HTML and it should be sanitized before display to the user.\n   * @type {String}\n   */\n  this.message = options.message;\n\n  /**\n   * True if the user has seen this error; otherwise, false.\n   * @type {Boolean}\n   * @default false\n   */\n  this.raisedToUser = false;\n};\n\nmodule.exports = TerriaError;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs/lib/Core/TerriaError.js\n// module id = 4\n// module chunks = 0","'use strict';\n\n/**\n * Returns indices such that array[indices[i]] = sortedArray[i].\n * Eg. sortedIndices(['c', 'a', 'b', 'd']) => [1, 2, 0, 3]. (The sorted array is [a, b, c, d], and \"a\" was in position 1, \"b\" in position 2, etc.)\n * @param {Array} array The array to sort.\n * @param {Function} [compareFunction] The usual compare function, eg. function(a, b) { return a - b }.\n * @return {Array} The sorted indices, such that array[sortedIndices[0]] = sortedArray[0].\n */\n\nfunction sortedIndices(array, compareFunction) {\n    var length = array.length;\n    var indices = new Array(length);\n    for (var i = 0; i < length; i++) {\n        indices[i] = i;\n    }\n    if (!compareFunction) {\n        compareFunction = function compareFunction(a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        };\n    }\n    indices.sort(function (a, b) {\n        return compareFunction(array[a], array[b]);\n    });\n    return indices;\n}\n\n//\n// Note: for indices which go in the other direction, just use indexOf like this:\n//\n// it('inverse indices work', function() {\n//     var data = ['c', 'a', 'b', 'd'];\n//     var sorted = data.slice().sort();\n//     var inverseIndices = data.map(function(datum) { return sorted.indexOf(datum); });\n//     expect(inverseIndices).toEqual([2, 0, 1, 3]);\n// });\n\n\nmodule.exports = sortedIndices;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs/lib/Core/sortedIndices.js\n// module id = 5\n// module chunks = 0","/*global define*/\ndefine([\n        './defaultValue',\n        './defined',\n        './Fullscreen'\n    ], function(\n        defaultValue,\n        defined,\n        Fullscreen) {\n    'use strict';\n\n    var theNavigator;\n    if (typeof navigator !== 'undefined') {\n        theNavigator = navigator;\n    } else {\n        theNavigator = {};\n    }\n\n    function extractVersion(versionString) {\n        var parts = versionString.split('.');\n        for (var i = 0, len = parts.length; i < len; ++i) {\n            parts[i] = parseInt(parts[i], 10);\n        }\n        return parts;\n    }\n\n    var isChromeResult;\n    var chromeVersionResult;\n    function isChrome() {\n        if (!defined(isChromeResult)) {\n            isChromeResult = false;\n\n            var fields = (/ Chrome\\/([\\.0-9]+)/).exec(theNavigator.userAgent);\n            if (fields !== null) {\n                isChromeResult = true;\n                chromeVersionResult = extractVersion(fields[1]);\n            }\n        }\n\n        return isChromeResult;\n    }\n\n    function chromeVersion() {\n        return isChrome() && chromeVersionResult;\n    }\n\n    var isSafariResult;\n    var safariVersionResult;\n    function isSafari() {\n        if (!defined(isSafariResult)) {\n            isSafariResult = false;\n\n            // Chrome contains Safari in the user agent too\n            if (!isChrome() && (/ Safari\\/[\\.0-9]+/).test(theNavigator.userAgent)) {\n                var fields = (/ Version\\/([\\.0-9]+)/).exec(theNavigator.userAgent);\n                if (fields !== null) {\n                    isSafariResult = true;\n                    safariVersionResult = extractVersion(fields[1]);\n                }\n            }\n        }\n\n        return isSafariResult;\n    }\n\n    function safariVersion() {\n        return isSafari() && safariVersionResult;\n    }\n\n    var isWebkitResult;\n    var webkitVersionResult;\n    function isWebkit() {\n        if (!defined(isWebkitResult)) {\n            isWebkitResult = false;\n\n            var fields = (/ AppleWebKit\\/([\\.0-9]+)(\\+?)/).exec(theNavigator.userAgent);\n            if (fields !== null) {\n                isWebkitResult = true;\n                webkitVersionResult = extractVersion(fields[1]);\n                webkitVersionResult.isNightly = !!fields[2];\n            }\n        }\n\n        return isWebkitResult;\n    }\n\n    function webkitVersion() {\n        return isWebkit() && webkitVersionResult;\n    }\n\n    var isInternetExplorerResult;\n    var internetExplorerVersionResult;\n    function isInternetExplorer() {\n        if (!defined(isInternetExplorerResult)) {\n            isInternetExplorerResult = false;\n\n            var fields;\n            if (theNavigator.appName === 'Microsoft Internet Explorer') {\n                fields = /MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(theNavigator.userAgent);\n                if (fields !== null) {\n                    isInternetExplorerResult = true;\n                    internetExplorerVersionResult = extractVersion(fields[1]);\n                }\n            } else if (theNavigator.appName === 'Netscape') {\n                fields = /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(theNavigator.userAgent);\n                if (fields !== null) {\n                    isInternetExplorerResult = true;\n                    internetExplorerVersionResult = extractVersion(fields[1]);\n                }\n            }\n        }\n        return isInternetExplorerResult;\n    }\n\n    function internetExplorerVersion() {\n        return isInternetExplorer() && internetExplorerVersionResult;\n    }\n\n    var isFirefoxResult;\n    var firefoxVersionResult;\n    function isFirefox() {\n        if (!defined(isFirefoxResult)) {\n            isFirefoxResult = false;\n\n            var fields = /Firefox\\/([\\.0-9]+)/.exec(theNavigator.userAgent);\n            if (fields !== null) {\n                isFirefoxResult = true;\n                firefoxVersionResult = extractVersion(fields[1]);\n            }\n        }\n        return isFirefoxResult;\n    }\n\n    var isWindowsResult;\n    function isWindows() {\n        if (!defined(isWindowsResult)) {\n            isWindowsResult = /Windows/i.test(theNavigator.appVersion);\n        }\n        return isWindowsResult;\n    }\n\n\n    function firefoxVersion() {\n        return isFirefox() && firefoxVersionResult;\n    }\n\n    var hasPointerEvents;\n    function supportsPointerEvents() {\n        if (!defined(hasPointerEvents)) {\n            //While navigator.pointerEnabled is deprecated in the W3C specification\n            //we still need to use it if it exists in order to support browsers\n            //that rely on it, such as the Windows WebBrowser control which defines\n            //PointerEvent but sets navigator.pointerEnabled to false.\n            hasPointerEvents = typeof PointerEvent !== 'undefined' && (!defined(theNavigator.pointerEnabled) || theNavigator.pointerEnabled);\n        }\n        return hasPointerEvents;\n    }\n\n    var imageRenderingValueResult;\n    var supportsImageRenderingPixelatedResult;\n    function supportsImageRenderingPixelated() {\n        if (!defined(supportsImageRenderingPixelatedResult)) {\n            var canvas = document.createElement('canvas');\n            canvas.setAttribute('style',\n                                'image-rendering: -moz-crisp-edges;' +\n                                'image-rendering: pixelated;');\n            //canvas.style.imageRendering will be undefined, null or an empty string on unsupported browsers.\n            var tmp = canvas.style.imageRendering;\n            supportsImageRenderingPixelatedResult = defined(tmp) && tmp !== '';\n            if (supportsImageRenderingPixelatedResult) {\n                imageRenderingValueResult = tmp;\n            }\n        }\n        return supportsImageRenderingPixelatedResult;\n    }\n\n    function imageRenderingValue() {\n        return supportsImageRenderingPixelated() ? imageRenderingValueResult : undefined;\n    }\n\n    /**\n     * A set of functions to detect whether the current browser supports\n     * various features.\n     *\n     * @exports FeatureDetection\n     */\n    var FeatureDetection = {\n        isChrome : isChrome,\n        chromeVersion : chromeVersion,\n        isSafari : isSafari,\n        safariVersion : safariVersion,\n        isWebkit : isWebkit,\n        webkitVersion : webkitVersion,\n        isInternetExplorer : isInternetExplorer,\n        internetExplorerVersion : internetExplorerVersion,\n        isFirefox : isFirefox,\n        firefoxVersion : firefoxVersion,\n        isWindows : isWindows,\n        hardwareConcurrency : defaultValue(theNavigator.hardwareConcurrency, 3),\n        supportsPointerEvents : supportsPointerEvents,\n        supportsImageRenderingPixelated: supportsImageRenderingPixelated,\n        imageRenderingValue: imageRenderingValue\n    };\n\n    /**\n     * Detects whether the current browser supports the full screen standard.\n     *\n     * @returns {Boolean} true if the browser supports the full screen standard, false if not.\n     *\n     * @see Fullscreen\n     * @see {@link http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html|W3C Fullscreen Living Specification}\n     */\n    FeatureDetection.supportsFullscreen = function() {\n        return Fullscreen.supportsFullscreen();\n    };\n\n    /**\n     * Detects whether the current browser supports typed arrays.\n     *\n     * @returns {Boolean} true if the browser supports typed arrays, false if not.\n     *\n     * @see {@link http://www.khronos.org/registry/typedarray/specs/latest/|Typed Array Specification}\n     */\n    FeatureDetection.supportsTypedArrays = function() {\n        return typeof ArrayBuffer !== 'undefined';\n    };\n\n    /**\n     * Detects whether the current browser supports Web Workers.\n     *\n     * @returns {Boolean} true if the browsers supports Web Workers, false if not.\n     *\n     * @see {@link http://www.w3.org/TR/workers/}\n     */\n    FeatureDetection.supportsWebWorkers = function() {\n        return typeof Worker !== 'undefined';\n    };\n\n    return FeatureDetection;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs-cesium/Source/Core/FeatureDetection.js\n// module id = 6\n// module chunks = 0","/*global define*/\ndefine([\n        './defined',\n        './defineProperties'\n    ], function(\n        defined,\n        defineProperties) {\n    'use strict';\n\n    var _supportsFullscreen;\n    var _names = {\n        requestFullscreen : undefined,\n        exitFullscreen : undefined,\n        fullscreenEnabled : undefined,\n        fullscreenElement : undefined,\n        fullscreenchange : undefined,\n        fullscreenerror : undefined\n    };\n\n    /**\n     * Browser-independent functions for working with the standard fullscreen API.\n     *\n     * @exports Fullscreen\n     *\n     * @see {@link http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html|W3C Fullscreen Living Specification}\n     */\n    var Fullscreen = {};\n\n    defineProperties(Fullscreen, {\n        /**\n         * The element that is currently fullscreen, if any.  To simply check if the\n         * browser is in fullscreen mode or not, use {@link Fullscreen#fullscreen}.\n         * @memberof Fullscreen\n         * @type {Object}\n         * @readonly\n         */\n        element : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return document[_names.fullscreenElement];\n            }\n        },\n\n        /**\n         * The name of the event on the document that is fired when fullscreen is\n         * entered or exited.  This event name is intended for use with addEventListener.\n         * In your event handler, to determine if the browser is in fullscreen mode or not,\n         * use {@link Fullscreen#fullscreen}.\n         * @memberof Fullscreen\n         * @type {String}\n         * @readonly\n         */\n        changeEventName : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return _names.fullscreenchange;\n            }\n        },\n\n        /**\n         * The name of the event that is fired when a fullscreen error\n         * occurs.  This event name is intended for use with addEventListener.\n         * @memberof Fullscreen\n         * @type {String}\n         * @readonly\n         */\n        errorEventName : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return _names.fullscreenerror;\n            }\n        },\n\n        /**\n         * Determine whether the browser will allow an element to be made fullscreen, or not.\n         * For example, by default, iframes cannot go fullscreen unless the containing page\n         * adds an \"allowfullscreen\" attribute (or prefixed equivalent).\n         * @memberof Fullscreen\n         * @type {Boolean}\n         * @readonly\n         */\n        enabled : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return document[_names.fullscreenEnabled];\n            }\n        },\n\n        /**\n         * Determines if the browser is currently in fullscreen mode.\n         * @memberof Fullscreen\n         * @type {Boolean}\n         * @readonly\n         */\n        fullscreen : {\n            get : function() {\n                if (!Fullscreen.supportsFullscreen()) {\n                    return undefined;\n                }\n\n                return Fullscreen.element !== null;\n            }\n        }\n    });\n\n    /**\n     * Detects whether the browser supports the standard fullscreen API.\n     *\n     * @returns {Boolean} <code>true</code> if the browser supports the standard fullscreen API,\n     * <code>false</code> otherwise.\n     */\n    Fullscreen.supportsFullscreen = function() {\n        if (defined(_supportsFullscreen)) {\n            return _supportsFullscreen;\n        }\n\n        _supportsFullscreen = false;\n\n        var body = document.body;\n        if (typeof body.requestFullscreen === 'function') {\n            // go with the unprefixed, standard set of names\n            _names.requestFullscreen = 'requestFullscreen';\n            _names.exitFullscreen = 'exitFullscreen';\n            _names.fullscreenEnabled = 'fullscreenEnabled';\n            _names.fullscreenElement = 'fullscreenElement';\n            _names.fullscreenchange = 'fullscreenchange';\n            _names.fullscreenerror = 'fullscreenerror';\n            _supportsFullscreen = true;\n            return _supportsFullscreen;\n        }\n\n        //check for the correct combination of prefix plus the various names that browsers use\n        var prefixes = ['webkit', 'moz', 'o', 'ms', 'khtml'];\n        var name;\n        for (var i = 0, len = prefixes.length; i < len; ++i) {\n            var prefix = prefixes[i];\n\n            // casing of Fullscreen differs across browsers\n            name = prefix + 'RequestFullscreen';\n            if (typeof body[name] === 'function') {\n                _names.requestFullscreen = name;\n                _supportsFullscreen = true;\n            } else {\n                name = prefix + 'RequestFullScreen';\n                if (typeof body[name] === 'function') {\n                    _names.requestFullscreen = name;\n                    _supportsFullscreen = true;\n                }\n            }\n\n            // disagreement about whether it's \"exit\" as per spec, or \"cancel\"\n            name = prefix + 'ExitFullscreen';\n            if (typeof document[name] === 'function') {\n                _names.exitFullscreen = name;\n            } else {\n                name = prefix + 'CancelFullScreen';\n                if (typeof document[name] === 'function') {\n                    _names.exitFullscreen = name;\n                }\n            }\n\n            // casing of Fullscreen differs across browsers\n            name = prefix + 'FullscreenEnabled';\n            if (document[name] !== undefined) {\n                _names.fullscreenEnabled = name;\n            } else {\n                name = prefix + 'FullScreenEnabled';\n                if (document[name] !== undefined) {\n                    _names.fullscreenEnabled = name;\n                }\n            }\n\n            // casing of Fullscreen differs across browsers\n            name = prefix + 'FullscreenElement';\n            if (document[name] !== undefined) {\n                _names.fullscreenElement = name;\n            } else {\n                name = prefix + 'FullScreenElement';\n                if (document[name] !== undefined) {\n                    _names.fullscreenElement = name;\n                }\n            }\n\n            // thankfully, event names are all lowercase per spec\n            name = prefix + 'fullscreenchange';\n            // event names do not have 'on' in the front, but the property on the document does\n            if (document['on' + name] !== undefined) {\n                //except on IE\n                if (prefix === 'ms') {\n                    name = 'MSFullscreenChange';\n                }\n                _names.fullscreenchange = name;\n            }\n\n            name = prefix + 'fullscreenerror';\n            if (document['on' + name] !== undefined) {\n                //except on IE\n                if (prefix === 'ms') {\n                    name = 'MSFullscreenError';\n                }\n                _names.fullscreenerror = name;\n            }\n        }\n\n        return _supportsFullscreen;\n    };\n\n    /**\n     * Asynchronously requests the browser to enter fullscreen mode on the given element.\n     * If fullscreen mode is not supported by the browser, does nothing.\n     *\n     * @param {Object} element The HTML element which will be placed into fullscreen mode.\n     * @param {HMDVRDevice} [vrDevice] The VR device.\n     *\n     * @example\n     * // Put the entire page into fullscreen.\n     * Cesium.Fullscreen.requestFullscreen(document.body)\n     *\n     * // Place only the Cesium canvas into fullscreen.\n     * Cesium.Fullscreen.requestFullscreen(scene.canvas)\n     */\n    Fullscreen.requestFullscreen = function(element, vrDevice) {\n        if (!Fullscreen.supportsFullscreen()) {\n            return;\n        }\n\n        element[_names.requestFullscreen]({ vrDisplay: vrDevice });\n    };\n\n    /**\n     * Asynchronously exits fullscreen mode.  If the browser is not currently\n     * in fullscreen, or if fullscreen mode is not supported by the browser, does nothing.\n     */\n    Fullscreen.exitFullscreen = function() {\n        if (!Fullscreen.supportsFullscreen()) {\n            return;\n        }\n\n        document[_names.exitFullscreen]();\n    };\n\n    return Fullscreen;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs-cesium/Source/Core/Fullscreen.js\n// module id = 7\n// module chunks = 0","/*global define*/\ndefine([\n        './defined'\n    ], function(\n        defined) {\n    'use strict';\n\n    var definePropertyWorks = (function() {\n        try {\n            return 'x' in Object.defineProperty({}, 'x', {});\n        } catch (e) {\n            return false;\n        }\n    })();\n\n    /**\n     * Defines properties on an object, using Object.defineProperties if available,\n     * otherwise returns the object unchanged.  This function should be used in\n     * setup code to prevent errors from completely halting JavaScript execution\n     * in legacy browsers.\n     *\n     * @private\n     *\n     * @exports defineProperties\n     */\n    var defineProperties = Object.defineProperties;\n    if (!definePropertyWorks || !defined(defineProperties)) {\n        defineProperties = function(o) {\n            return o;\n        };\n    }\n\n    return defineProperties;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs-cesium/Source/Core/defineProperties.js\n// module id = 8\n// module chunks = 0","/*global define*/\ndefine([\n        './defined'\n    ], function(\n        defined) {\n    'use strict';\n\n    /**\n     * Freezes an object, using Object.freeze if available, otherwise returns\n     * the object unchanged.  This function should be used in setup code to prevent\n     * errors from completely halting JavaScript execution in legacy browsers.\n     *\n     * @private\n     *\n     * @exports freezeObject\n     */\n    var freezeObject = Object.freeze;\n    if (!defined(freezeObject)) {\n        freezeObject = function(o) {\n            return o;\n        };\n    }\n\n    return freezeObject;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/terriajs-cesium/Source/Core/freezeObject.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}